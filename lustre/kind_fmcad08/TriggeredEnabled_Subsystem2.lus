-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (ToLustre.m)
-- Time: 20-Sep-2018 14:53:13
(*
Original block name: TriggeredEnabled_Subsystem2/Enabled_Counter
*)
node  Enabled_Counter_9_066_automaton(In1_1 : real;
	_isEnabled : bool;
	_isTriggered : bool;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;
	Out2_1 : real;);
var pre_Out1_1 : real;
	pre_Out2_1 : real;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre Out1_1)
	    else 0.000000000000000;
	pre_Out2_1 = if (__nb_step > 0) then
		(pre Out2_1)
	    else 0.000000000000000;
	automaton enabled_Enabled_Counter_9_066
	state Active_Enabled_Counter_9_066:
	unless (not _isEnabled) restart Inactive_Enabled_Counter_9_066
	let
		automaton triggered_Enabled_Counter_9_066
	state Active_triggered_Enabled_Counter_9_066:
	unless (not _isTriggered) resume Inactive_triggered_Enabled_Counter_9_066
	let
		(Out1_1, Out2_1) = Enabled_Counter_9_066(In1_1, __time_step, __nb_step);
	tel

	state Inactive_triggered_Enabled_Counter_9_066:
	unless _isTriggered resume Active_triggered_Enabled_Counter_9_066
	let
		Out1_1 = pre_Out1_1;
		Out2_1 = pre_Out2_1;
	tel


	tel

	state Inactive_Enabled_Counter_9_066:
	unless _isEnabled restart Active_Enabled_Counter_9_066
	let
		Out1_1 = pre_Out1_1;
		Out2_1 = pre_Out2_1;
	tel


tel

(*
Original block name: TriggeredEnabled_Subsystem2/Enabled_Counter
*)
node  Enabled_Counter_9_066(In1_1 : real;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;
	Out2_1 : real;);
var Add_1 : real;
	UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	UnitDelay_1 = (0.000000000000000 -> (pre Add_1));
	Out1_1 = Add_1;
	Out2_1 = UnitDelay_1;
tel

(*
Original block name: TriggeredEnabled_Subsystem2
*)
node  TriggeredEnabled_Subsystem2(In1_1 : real;
	Enable_1 : bool;
	Trigger_1 : bool;)
returns(Out1_1 : real;
	Out2_1 : real;);
var ExecutionCond_of_Enabled_Counter_9_066 : bool;
	TriggerCond_of_Enabled_Counter_9_066 : bool;
	EnableCond_of_Enabled_Counter_9_066 : bool;
	Enabled_Counter_1 : real;
	Enabled_Counter_2 : real;
	__time_step : real;
	__nb_step : int;
let
	EnableCond_of_Enabled_Counter_9_066 = Enable_1;
	TriggerCond_of_Enabled_Counter_9_066 = (false -> (Trigger_1 and (not (pre Trigger_1))));
	ExecutionCond_of_Enabled_Counter_9_066 = (EnableCond_of_Enabled_Counter_9_066 and TriggerCond_of_Enabled_Counter_9_066);
	(Enabled_Counter_1, Enabled_Counter_2) = Enabled_Counter_9_066_automaton(In1_1, EnableCond_of_Enabled_Counter_9_066, TriggerCond_of_Enabled_Counter_9_066, __time_step, __nb_step);
	Out1_1 = Enabled_Counter_1;
	Out2_1 = Enabled_Counter_2;
	__time_step = (0.0 -> ((pre __time_step) + 1.000000000000000));
	__nb_step = (0 -> ((pre __nb_step) + 1));
tel

