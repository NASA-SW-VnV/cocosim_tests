-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 19-Mar-2019 21:16:39
(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem1
*)
node  ActionSubsystem1_8_013_condExecSS(In1_1 : real;
	_isEnabled : bool;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var pre_Out1_1 : real;
	_isEnabled_clock : bool clock;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre Out1_1)
	    else 0.0;
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> (ActionSubsystem1_8_013((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock)) every (false -> (_isEnabled_clock and (not (pre _isEnabled_clock)))))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem1
*)
node  ActionSubsystem1_8_013(In1_1 : real;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var UnitDelay_1 : real;
let
	UnitDelay_1 = (0.0 -> (pre In1_1));
	Out1_1 = UnitDelay_1;
tel

(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem2
*)
node  ActionSubsystem2_15_018_condExecSS(In1_1 : real;
	_isEnabled : bool;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var pre_Out1_1 : real;
	_isEnabled_clock : bool clock;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre Out1_1)
	    else 0.0;
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> ActionSubsystem2_15_018((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem2
*)
node  ActionSubsystem2_15_018(In1_1 : real;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var UnitDelay_1 : real;
let
	UnitDelay_1 = (0.0 -> (pre In1_1));
	Out1_1 = UnitDelay_1;
tel

(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem3
*)
node  ActionSubsystem3_22_022_condExecSS(In1_1 : real;
	_isEnabled : bool;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var pre_Out1_1 : real;
	_isEnabled_clock : bool clock;
let
	pre_Out1_1 = if (__nb_step > 0) then
		(pre Out1_1)
	    else 0.0;
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> ActionSubsystem3_22_022((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: IF_with_EnabledSS_PP/ActionSubsystem3
*)
node  ActionSubsystem3_22_022(In1_1 : real;
	__time_step : real;
	__nb_step : int;)
returns(Out1_1 : real;);
var UnitDelay_1 : real;
let
	UnitDelay_1 = (0.0 -> (pre In1_1));
	Out1_1 = UnitDelay_1;
tel

(*
Original block name: IF_with_EnabledSS_PP
*)
node  IF_with_EnabledSS_PP(In1_1 : int;
	In1_2 : int;
	In1_3 : int;
	In2_1 : real;
	In3_1 : int;
	In3_2 : int;
	In3_3 : int;)
returns(Out1_1 : real;
	Out2_1 : real;
	Out3_1 : real;);
var ExecutionCond_of_ActionSubsystem1_8_013 : bool;
	ActionSubsystem1_1 : real;
	ExecutionCond_of_ActionSubsystem2_15_018 : bool;
	ActionSubsystem2_1 : real;
	ExecutionCond_of_ActionSubsystem3_22_022 : bool;
	ActionSubsystem3_1 : real;
	If2_1 : bool;
	If2_2 : bool;
	If2_3 : bool;
	__time_step : real;
	__nb_step : int;
let
	ExecutionCond_of_ActionSubsystem1_8_013 = If2_1;
	ActionSubsystem1_1 = ActionSubsystem1_8_013_condExecSS(In2_1, ExecutionCond_of_ActionSubsystem1_8_013, __time_step, __nb_step);
	ExecutionCond_of_ActionSubsystem2_15_018 = If2_2;
	ActionSubsystem2_1 = ActionSubsystem2_15_018_condExecSS(In2_1, ExecutionCond_of_ActionSubsystem2_15_018, __time_step, __nb_step);
	ExecutionCond_of_ActionSubsystem3_22_022 = If2_3;
	ActionSubsystem3_1 = ActionSubsystem3_22_022_condExecSS(In2_1, ExecutionCond_of_ActionSubsystem3_22_022, __time_step, __nb_step);
	(If2_1, If2_2, If2_3) = if In1_1 > 1 then
		(true, false, false)
	    else if In3_3 > 0 then
		(false, true, false)
	    else (false, false, true);
	Out1_1 = ActionSubsystem1_1;
	Out2_1 = ActionSubsystem2_1;
	Out3_1 = ActionSubsystem3_1;
	__time_step = (0.0 -> ((pre __time_step) + 0.020));
	__nb_step = (0 -> ((pre __nb_step) + 1));
tel

