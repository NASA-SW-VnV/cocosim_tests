-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 16:11:16
#open <conv>
(*
Function fcn inside Matlab Function block: MatlabFunction_TestGen_length5_PP/P
*)
node  P_112_410_fcn(
	u__Index1__0 : int; u__Index2__0 : int; u__Index3__0 : int; u__Index4__0 : int; u__Index5__0 : int;
	u__Index6__0 : int; u__Index7__0 : int; u__Index8__0 : int; u__Index9__0 : int; u__Index10__0 : int;
	u__Index11__0 : int; u__Index12__0 : int; u__Index13__0 : int; u__Index14__0 : int; u__Index15__0 : int;
	u__Index16__0 : int; u__Index17__0 : int; u__Index18__0 : int; u__Index19__0 : int; u__Index20__0 : int;
	u__Index21__0 : int; u__Index22__0 : int; u__Index23__0 : int; u__Index24__0 : int;)
returns(
	y__1 : real;);
let
	y__1 = 4.0;
tel

(*
Original block name: MatlabFunction_TestGen_length5_PP
*)
node  MatlabFunction_TestGen_length5_PP(
	In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int; In1_5 : int;
	In1_6 : int; In1_7 : int; In1_8 : int; In1_9 : int; In1_10 : int;
	In1_11 : int; In1_12 : int; In1_13 : int; In1_14 : int; In1_15 : int;
	In1_16 : int; In1_17 : int; In1_18 : int; In1_19 : int; In1_20 : int;
	In1_21 : int; In1_22 : int; In1_23 : int; In1_24 : int;)
returns(
	Out1_1 : real;);
var 
	P_1 : real; __time_step : real; __nb_step : int;
let
	assert ((-2147483648 <= In1_1) and (In1_1 <= 2147483647));
	assert ((-2147483648 <= In1_2) and (In1_2 <= 2147483647));
	assert ((-2147483648 <= In1_3) and (In1_3 <= 2147483647));
	assert ((-2147483648 <= In1_4) and (In1_4 <= 2147483647));
	assert ((-2147483648 <= In1_5) and (In1_5 <= 2147483647));
	assert ((-2147483648 <= In1_6) and (In1_6 <= 2147483647));
	assert ((-2147483648 <= In1_7) and (In1_7 <= 2147483647));
	assert ((-2147483648 <= In1_8) and (In1_8 <= 2147483647));
	assert ((-2147483648 <= In1_9) and (In1_9 <= 2147483647));
	assert ((-2147483648 <= In1_10) and (In1_10 <= 2147483647));
	assert ((-2147483648 <= In1_11) and (In1_11 <= 2147483647));
	assert ((-2147483648 <= In1_12) and (In1_12 <= 2147483647));
	assert ((-2147483648 <= In1_13) and (In1_13 <= 2147483647));
	assert ((-2147483648 <= In1_14) and (In1_14 <= 2147483647));
	assert ((-2147483648 <= In1_15) and (In1_15 <= 2147483647));
	assert ((-2147483648 <= In1_16) and (In1_16 <= 2147483647));
	assert ((-2147483648 <= In1_17) and (In1_17 <= 2147483647));
	assert ((-2147483648 <= In1_18) and (In1_18 <= 2147483647));
	assert ((-2147483648 <= In1_19) and (In1_19 <= 2147483647));
	assert ((-2147483648 <= In1_20) and (In1_20 <= 2147483647));
	assert ((-2147483648 <= In1_21) and (In1_21 <= 2147483647));
	assert ((-2147483648 <= In1_22) and (In1_22 <= 2147483647));
	assert ((-2147483648 <= In1_23) and (In1_23 <= 2147483647));
	assert ((-2147483648 <= In1_24) and (In1_24 <= 2147483647));
	P_1 = P_112_410_fcn(In1_1, In1_2, In1_3, In1_4, In1_5, In1_6, In1_7, In1_8, In1_9, In1_10, In1_11, In1_12, In1_13, In1_14, In1_15, In1_16, In1_17, In1_18, In1_19, In1_20, In1_21, In1_22, In1_23, In1_24);
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

