-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 15:41:07
#open <conv>
node  abs_int(
	x : int;)
returns(
	y : int;);
let
	y = (if (x >= 0) then
		x
	    else (- (x)));
tel

(*
Rounds positive and negative numbers toward positive infinity
*)
node  int_div_Ceiling(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if (y = 0) then
		(if (x > 0) then 2147483647 else -2147483648)
	    else (if ((x mod y) = 0) then
		(x / y)
	    else (if ((abs_int(y) > abs_int(x)) and ((x * y) > 0)) then
		1
	    else (if ((abs_int(y) > abs_int(x)) and ((x * y) < 0)) then
		0
	    else (if ((x > 0) and (y < 0)) then
		(x / y)
	    else (if ((x < 0) and (y > 0)) then
		((- (x)) / (- (y)))
	    else (if ((x < 0) and (y < 0)) then
		(((- (x)) / (- (y))) + 1)
	    else ((x / y) + 1))))))));
tel

(*
Function fcn inside Matlab Function block: MatlabFunction_TestGen_cumtrapz4_PP/P
*)
node  P_112_357_fcn(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real;)
returns(
	y__Index1__1 : real; y__Index2__1 : real; y__Index3__1 : real; y__Index4__1 : real; y__Index5__1 : real;
	y__Index6__1 : real;);
let
	y__Index1__1 = 0.0;
	y__Index2__1 = (int_to_real(int_div_Ceiling((- ((1 - 2))), 2)) * (u__Index1__0 + u__Index2__0));
	y__Index3__1 = 0.0;
	y__Index4__1 = (int_to_real(int_div_Ceiling((- ((1 - 2))), 2)) * (u__Index3__0 + u__Index4__0));
	y__Index5__1 = 0.0;
	y__Index6__1 = (int_to_real(int_div_Ceiling((- ((1 - 2))), 2)) * (u__Index5__0 + u__Index6__0));
tel

(*
Original block name: MatlabFunction_TestGen_cumtrapz4_PP
*)
node  MatlabFunction_TestGen_cumtrapz4_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real;);
var 
	P_1 : real; P_2 : real; P_3 : real; P_4 : real; P_5 : real;
	P_6 : real; __time_step : real; __nb_step : int;
let
	(P_1, P_2, P_3, P_4, P_5, P_6) = P_112_357_fcn(In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

