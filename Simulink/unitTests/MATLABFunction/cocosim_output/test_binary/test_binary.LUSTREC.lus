-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 03:15:43
node  real_to_bool(
	x : real;)
returns(
	y : bool;);
let
	y = (x <> 0.0);
tel

(*
Function and1 inside Matlab Function block: test_binary/sum_lpar_u_rpar_1
*)
node  sum_lpar_u_rpar_1_12_225_and1(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real; v__Index1__0 : real; v__Index2__0 : real; v__Index3__0 : real; v__Index4__0 : real;
	v__Index5__0 : real; v__Index6__0 : real;)
returns(
	y__Index1__1 : bool; y__Index2__1 : bool; y__Index3__1 : bool; y__Index4__1 : bool; y__Index5__1 : bool;
	y__Index6__1 : bool;);
let
	y__Index1__1 = real_to_bool(u__Index1__0) and real_to_bool(v__Index1__0);
	y__Index2__1 = real_to_bool(u__Index2__0) and real_to_bool(v__Index2__0);
	y__Index3__1 = real_to_bool(u__Index3__0) and real_to_bool(v__Index3__0);
	y__Index4__1 = real_to_bool(u__Index4__0) and real_to_bool(v__Index4__0);
	y__Index5__1 = real_to_bool(u__Index5__0) and real_to_bool(v__Index5__0);
	y__Index6__1 = real_to_bool(u__Index6__0) and real_to_bool(v__Index6__0);
tel

(*
Function xor1 inside Matlab Function block: test_binary/sum_lpar_u_rpar_2
*)
node  sum_lpar_u_rpar_2_25_198_xor1(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real; v__Index1__0 : real; v__Index2__0 : real; v__Index3__0 : real; v__Index4__0 : real;
	v__Index5__0 : real; v__Index6__0 : real;)
returns(
	y__Index1__1 : bool; y__Index2__1 : bool; y__Index3__1 : bool; y__Index4__1 : bool; y__Index5__1 : bool;
	y__Index6__1 : bool;);
let
	y__Index1__1 = real_to_bool(u__Index1__0) xor real_to_bool(v__Index1__0);
	y__Index2__1 = real_to_bool(u__Index2__0) xor real_to_bool(v__Index2__0);
	y__Index3__1 = real_to_bool(u__Index3__0) xor real_to_bool(v__Index3__0);
	y__Index4__1 = real_to_bool(u__Index4__0) xor real_to_bool(v__Index4__0);
	y__Index5__1 = real_to_bool(u__Index5__0) xor real_to_bool(v__Index5__0);
	y__Index6__1 = real_to_bool(u__Index6__0) xor real_to_bool(v__Index6__0);
tel

(*
Function or1 inside Matlab Function block: test_binary/sum_lpar_u_rpar_3
*)
node  sum_lpar_u_rpar_3_37_192_or1(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real; v__Index1__0 : real; v__Index2__0 : real; v__Index3__0 : real; v__Index4__0 : real;
	v__Index5__0 : real; v__Index6__0 : real;)
returns(
	y__Index1__1 : bool; y__Index2__1 : bool; y__Index3__1 : bool; y__Index4__1 : bool; y__Index5__1 : bool;
	y__Index6__1 : bool;);
let
	y__Index1__1 = real_to_bool(u__Index1__0) or real_to_bool(v__Index1__0);
	y__Index2__1 = real_to_bool(u__Index2__0) or real_to_bool(v__Index2__0);
	y__Index3__1 = real_to_bool(u__Index3__0) or real_to_bool(v__Index3__0);
	y__Index4__1 = real_to_bool(u__Index4__0) or real_to_bool(v__Index4__0);
	y__Index5__1 = real_to_bool(u__Index5__0) or real_to_bool(v__Index5__0);
	y__Index6__1 = real_to_bool(u__Index6__0) or real_to_bool(v__Index6__0);
tel

(*
Function plus1 inside Matlab Function block: test_binary/sum_lpar_u_rpar_4
*)
node  sum_lpar_u_rpar_4_49_189_plus1(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real; v__Index1__0 : real; v__Index2__0 : real; v__Index3__0 : real; v__Index4__0 : real;
	v__Index5__0 : real; v__Index6__0 : real;)
returns(
	y__Index1__1 : real; y__Index2__1 : real; y__Index3__1 : real; y__Index4__1 : real; y__Index5__1 : real;
	y__Index6__1 : real;);
let
	y__Index1__1 = u__Index1__0 + v__Index1__0;
	y__Index2__1 = u__Index2__0 + v__Index2__0;
	y__Index3__1 = u__Index3__0 + v__Index3__0;
	y__Index4__1 = u__Index4__0 + v__Index4__0;
	y__Index5__1 = u__Index5__0 + v__Index5__0;
	y__Index6__1 = u__Index6__0 + v__Index6__0;
tel

(*
Function minus1 inside Matlab Function block: test_binary/sum_lpar_u_rpar_5
*)
node  sum_lpar_u_rpar_5_61_186_minus1(
	u__Index1__0 : real; u__Index2__0 : real; u__Index3__0 : real; u__Index4__0 : real; u__Index5__0 : real;
	u__Index6__0 : real; v__Index1__0 : real; v__Index2__0 : real; v__Index3__0 : real; v__Index4__0 : real;
	v__Index5__0 : real; v__Index6__0 : real;)
returns(
	y__Index1__1 : real; y__Index2__1 : real; y__Index3__1 : real; y__Index4__1 : real; y__Index5__1 : real;
	y__Index6__1 : real;);
let
	y__Index1__1 = u__Index1__0 - v__Index1__0;
	y__Index2__1 = u__Index2__0 - v__Index2__0;
	y__Index3__1 = u__Index3__0 - v__Index3__0;
	y__Index4__1 = u__Index4__0 - v__Index4__0;
	y__Index5__1 = u__Index5__0 - v__Index5__0;
	y__Index6__1 = u__Index6__0 - v__Index6__0;
tel

(*
Original block name: test_binary
*)
node  test_binary(
	In4_1 : real; In4_2 : real; In4_3 : real; In4_4 : real; In4_5 : real;
	In4_6 : real; In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real;
	In1_5 : real; In1_6 : real; In2_1 : real; In2_2 : real; In2_3 : real;
	In2_4 : real; In2_5 : real; In2_6 : real; In3_1 : real; In3_2 : real;
	In3_3 : real; In3_4 : real; In3_5 : real; In3_6 : real; In5_1 : real;
	In5_2 : real; In5_3 : real; In5_4 : real; In5_5 : real; In5_6 : real;
	In6_1 : real; In6_2 : real; In6_3 : real; In6_4 : real; In6_5 : real;
	In6_6 : real; In7_1 : real; In7_2 : real; In7_3 : real; In7_4 : real;
	In7_5 : real; In7_6 : real; In8_1 : real; In8_2 : real; In8_3 : real;
	In8_4 : real; In8_5 : real; In8_6 : real; In9_1 : real; In9_2 : real;
	In9_3 : real; In9_4 : real; In9_5 : real; In9_6 : real; In10_1 : real;
	In10_2 : real; In10_3 : real; In10_4 : real; In10_5 : real; In10_6 : real;)
returns(
	Out1_1 : bool; Out1_2 : bool; Out1_3 : bool; Out1_4 : bool; Out1_5 : bool;
	Out1_6 : bool; Out2_1 : bool; Out2_2 : bool; Out2_3 : bool; Out2_4 : bool;
	Out2_5 : bool; Out2_6 : bool; Out3_1 : bool; Out3_2 : bool; Out3_3 : bool;
	Out3_4 : bool; Out3_5 : bool; Out3_6 : bool; Out4_1 : real; Out4_2 : real;
	Out4_3 : real; Out4_4 : real; Out4_5 : real; Out4_6 : real; Out5_1 : real;
	Out5_2 : real; Out5_3 : real; Out5_4 : real; Out5_5 : real; Out5_6 : real;);
var 
	sum_lpar_u_rpar_1_1 : bool; sum_lpar_u_rpar_1_2 : bool; sum_lpar_u_rpar_1_3 : bool; sum_lpar_u_rpar_1_4 : bool; sum_lpar_u_rpar_1_5 : bool;
	sum_lpar_u_rpar_1_6 : bool; sum_lpar_u_rpar_2_1 : bool; sum_lpar_u_rpar_2_2 : bool; sum_lpar_u_rpar_2_3 : bool; sum_lpar_u_rpar_2_4 : bool;
	sum_lpar_u_rpar_2_5 : bool; sum_lpar_u_rpar_2_6 : bool; sum_lpar_u_rpar_3_1 : bool; sum_lpar_u_rpar_3_2 : bool; sum_lpar_u_rpar_3_3 : bool;
	sum_lpar_u_rpar_3_4 : bool; sum_lpar_u_rpar_3_5 : bool; sum_lpar_u_rpar_3_6 : bool; sum_lpar_u_rpar_4_1 : real; sum_lpar_u_rpar_4_2 : real;
	sum_lpar_u_rpar_4_3 : real; sum_lpar_u_rpar_4_4 : real; sum_lpar_u_rpar_4_5 : real; sum_lpar_u_rpar_4_6 : real; sum_lpar_u_rpar_5_1 : real;
	sum_lpar_u_rpar_5_2 : real; sum_lpar_u_rpar_5_3 : real; sum_lpar_u_rpar_5_4 : real; sum_lpar_u_rpar_5_5 : real; sum_lpar_u_rpar_5_6 : real;
	__time_step : real; __nb_step : int;
let
	(sum_lpar_u_rpar_1_1, sum_lpar_u_rpar_1_2, sum_lpar_u_rpar_1_3, sum_lpar_u_rpar_1_4, sum_lpar_u_rpar_1_5, sum_lpar_u_rpar_1_6) = sum_lpar_u_rpar_1_12_225_and1(In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6);
	(sum_lpar_u_rpar_2_1, sum_lpar_u_rpar_2_2, sum_lpar_u_rpar_2_3, sum_lpar_u_rpar_2_4, sum_lpar_u_rpar_2_5, sum_lpar_u_rpar_2_6) = sum_lpar_u_rpar_2_25_198_xor1(In5_1, In5_2, In5_3, In5_4, In5_5, In5_6, In6_1, In6_2, In6_3, In6_4, In6_5, In6_6);
	(sum_lpar_u_rpar_3_1, sum_lpar_u_rpar_3_2, sum_lpar_u_rpar_3_3, sum_lpar_u_rpar_3_4, sum_lpar_u_rpar_3_5, sum_lpar_u_rpar_3_6) = sum_lpar_u_rpar_3_37_192_or1(In4_1, In4_2, In4_3, In4_4, In4_5, In4_6, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	(sum_lpar_u_rpar_4_1, sum_lpar_u_rpar_4_2, sum_lpar_u_rpar_4_3, sum_lpar_u_rpar_4_4, sum_lpar_u_rpar_4_5, sum_lpar_u_rpar_4_6) = sum_lpar_u_rpar_4_49_189_plus1(In7_1, In7_2, In7_3, In7_4, In7_5, In7_6, In8_1, In8_2, In8_3, In8_4, In8_5, In8_6);
	(sum_lpar_u_rpar_5_1, sum_lpar_u_rpar_5_2, sum_lpar_u_rpar_5_3, sum_lpar_u_rpar_5_4, sum_lpar_u_rpar_5_5, sum_lpar_u_rpar_5_6) = sum_lpar_u_rpar_5_61_186_minus1(In9_1, In9_2, In9_3, In9_4, In9_5, In9_6, In10_1, In10_2, In10_3, In10_4, In10_5, In10_6);
	Out1_1 = sum_lpar_u_rpar_3_1;
	Out1_2 = sum_lpar_u_rpar_3_2;
	Out1_3 = sum_lpar_u_rpar_3_3;
	Out1_4 = sum_lpar_u_rpar_3_4;
	Out1_5 = sum_lpar_u_rpar_3_5;
	Out1_6 = sum_lpar_u_rpar_3_6;
	Out2_1 = sum_lpar_u_rpar_1_1;
	Out2_2 = sum_lpar_u_rpar_1_2;
	Out2_3 = sum_lpar_u_rpar_1_3;
	Out2_4 = sum_lpar_u_rpar_1_4;
	Out2_5 = sum_lpar_u_rpar_1_5;
	Out2_6 = sum_lpar_u_rpar_1_6;
	Out3_1 = sum_lpar_u_rpar_2_1;
	Out3_2 = sum_lpar_u_rpar_2_2;
	Out3_3 = sum_lpar_u_rpar_2_3;
	Out3_4 = sum_lpar_u_rpar_2_4;
	Out3_5 = sum_lpar_u_rpar_2_5;
	Out3_6 = sum_lpar_u_rpar_2_6;
	Out4_1 = sum_lpar_u_rpar_4_1;
	Out4_2 = sum_lpar_u_rpar_4_2;
	Out4_3 = sum_lpar_u_rpar_4_3;
	Out4_4 = sum_lpar_u_rpar_4_4;
	Out4_5 = sum_lpar_u_rpar_4_5;
	Out4_6 = sum_lpar_u_rpar_4_6;
	Out5_1 = sum_lpar_u_rpar_5_1;
	Out5_2 = sum_lpar_u_rpar_5_2;
	Out5_3 = sum_lpar_u_rpar_5_3;
	Out5_4 = sum_lpar_u_rpar_5_4;
	Out5_5 = sum_lpar_u_rpar_5_5;
	Out5_6 = sum_lpar_u_rpar_5_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

