-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 14:59:30
#open <lustrec_math>

(*
Function DCM_to_quat inside Matlab Function block: bio_matfunc_DCM_to_quat_PP/MATLABFunction
*)
node  MATLABFunction_85_867_DCM_to_quat(
	Mat__Index1__0 : real; Mat__Index2__0 : real; Mat__Index3__0 : real; Mat__Index4__0 : real; Mat__Index5__0 : real;
	Mat__Index6__0 : real; Mat__Index7__0 : real; Mat__Index8__0 : real; Mat__Index9__0 : real;)
returns(
	quat__Index1__1 : real; quat__Index2__1 : real; quat__Index3__1 : real; quat__Index4__1 : real;);
var 
	Mat__Index1__1 : real; Mat__Index2__1 : real; Mat__Index3__1 : real; Mat__Index4__1 : real; Mat__Index5__1 : real;
	Mat__Index6__1 : real; Mat__Index7__1 : real; Mat__Index8__1 : real; Mat__Index9__1 : real; Mxx__1 : real;
	Mxy__1 : real; Mxz__1 : real; Myx__1 : real; Myy__1 : real; Myz__1 : real;
	Mzx__1 : real; Mzy__1 : real; Mzz__1 : real; Qs__1 : real; Qs__2 : real;
	Qs__3 : real; Qs__4 : real; Qx__1 : real; Qx__2 : real; Qx__3 : real;
	Qx__4 : real; Qy__1 : real; Qy__2 : real; Qy__3 : real; Qy__4 : real;
	Qz__1 : real; Qz__2 : real; Qz__3 : real; Qz__4 : real; a__1 : real;
	b__1 : real; c__1 : real; d__1 : real; e__1 : real; e__2 : real;
	e__3 : real; e__4 : real; ifCond_0_85297__1 : bool; ifCond_1_19642__1 : bool; ifCond_2_87202__1 : bool;
	quatMag__1 : real;
let
	Mat__Index1__1 = Mat__Index1__0;
	Mat__Index2__1 = Mat__Index4__0;
	Mat__Index3__1 = Mat__Index7__0;
	Mat__Index4__1 = Mat__Index2__0;
	Mat__Index5__1 = Mat__Index5__0;
	Mat__Index6__1 = Mat__Index8__0;
	Mat__Index7__1 = Mat__Index3__0;
	Mat__Index8__1 = Mat__Index6__0;
	Mat__Index9__1 = Mat__Index9__0;
	Mxx__1 = Mat__Index1__1;
	Myy__1 = Mat__Index5__1;
	Mzz__1 = Mat__Index9__1;
	Mxy__1 = Mat__Index4__1;
	Myx__1 = Mat__Index2__1;
	Mxz__1 = Mat__Index7__1;
	Mzx__1 = Mat__Index3__1;
	Myz__1 = Mat__Index8__1;
	Mzy__1 = Mat__Index6__1;
	a__1 = Mxx__1 + Myy__1 + Mzz__1;
	b__1 = Mxx__1 - Myy__1 - Mzz__1;
	c__1 = - (Mxx__1) + Myy__1 - Mzz__1;
	d__1 = - (Mxx__1) - Myy__1 + Mzz__1;
	ifCond_0_85297__1 = a__1 > 0.0;
	e__1 = (if ifCond_0_85297__1 then
		2.0 * sqrt(1.0 + a__1)
	    else 0.0);
	Qx__1 = (if ifCond_0_85297__1 then
		(Mzy__1 - Myz__1) / e__1
	    else 0.0);
	Qy__1 = (if ifCond_0_85297__1 then
		(Mxz__1 - Mzx__1) / e__1
	    else 0.0);
	Qz__1 = (if ifCond_0_85297__1 then
		(Myx__1 - Mxy__1) / e__1
	    else 0.0);
	Qs__1 = (if ifCond_0_85297__1 then
		e__1 / 4.0
	    else 0.0);
	ifCond_1_19642__1 = (Mxx__1 > Myy__1) and (Mxx__1 > Mzz__1);
	e__2 = (if (not (ifCond_0_85297__1) and ifCond_1_19642__1) then
		2.0 * sqrt(1.0 + b__1)
	    else e__1);
	Qx__2 = (if (not (ifCond_0_85297__1) and ifCond_1_19642__1) then
		e__2 / 4.0
	    else Qx__1);
	Qy__2 = (if (not (ifCond_0_85297__1) and ifCond_1_19642__1) then
		(Mxy__1 + Myx__1) / e__2
	    else Qy__1);
	Qz__2 = (if (not (ifCond_0_85297__1) and ifCond_1_19642__1) then
		(Mxz__1 + Mzx__1) / e__2
	    else Qz__1);
	Qs__2 = (if (not (ifCond_0_85297__1) and ifCond_1_19642__1) then
		(Mzy__1 - Myz__1) / e__2
	    else Qs__1);
	ifCond_2_87202__1 = Myy__1 > Mzz__1;
	e__3 = (if ((not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and ifCond_2_87202__1) then
		2.0 * sqrt(1.0 + c__1)
	    else e__2);
	Qx__3 = (if ((not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and ifCond_2_87202__1) then
		(Mxy__1 + Myx__1) / e__3
	    else Qx__2);
	Qy__3 = (if ((not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and ifCond_2_87202__1) then
		e__3 / 4.0
	    else Qy__2);
	Qz__3 = (if ((not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and ifCond_2_87202__1) then
		(Myz__1 + Mzy__1) / e__3
	    else Qz__2);
	Qs__3 = (if ((not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and ifCond_2_87202__1) then
		(Mxz__1 - Mzx__1) / e__3
	    else Qs__2);
	e__4 = (if (not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and not (ifCond_2_87202__1) then
		2.0 * sqrt(1.0 + d__1)
	    else e__3);
	Qx__4 = (if (not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and not (ifCond_2_87202__1) then
		(Mxz__1 + Mzx__1) / e__4
	    else Qx__3);
	Qy__4 = (if (not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and not (ifCond_2_87202__1) then
		(Myz__1 + Mzy__1) / e__4
	    else Qy__3);
	Qz__4 = (if (not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and not (ifCond_2_87202__1) then
		e__4 / 4.0
	    else Qz__3);
	Qs__4 = (if (not (ifCond_0_85297__1) and not (ifCond_1_19642__1)) and not (ifCond_2_87202__1) then
		(Myx__1 - Mxy__1) / e__4
	    else Qs__3);
	quatMag__1 = sqrt(pow(Qx__4, 2.0) + pow(Qy__4, 2.0) + pow(Qz__4, 2.0) + pow(Qs__4, 2.0));
	quat__Index1__1 = Qx__4 / quatMag__1;
	quat__Index2__1 = Qy__4 / quatMag__1;
	quat__Index3__1 = Qz__4 / quatMag__1;
	quat__Index4__1 = Qs__4 / quatMag__1;
tel

(*
Original block name: bio_matfunc_DCM_to_quat_PP
*)
node  bio_matfunc_DCM_to_quat_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; In1_7 : real; In1_8 : real; In1_9 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real;);
var 
	MATLABFunction_1 : real; MATLABFunction_2 : real; MATLABFunction_3 : real; MATLABFunction_4 : real; __time_step : real;
	__nb_step : int;
let
	(MATLABFunction_1, MATLABFunction_2, MATLABFunction_3, MATLABFunction_4) = MATLABFunction_85_867_DCM_to_quat(In1_1, In1_2, In1_3, In1_4, In1_5, In1_6, In1_7, In1_8, In1_9);
	Out1_1 = MATLABFunction_1;
	Out1_2 = MATLABFunction_2;
	Out1_3 = MATLABFunction_3;
	Out1_4 = MATLABFunction_4;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

