-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 15:28:59
(*
Function fcn inside Matlab Function block: MatlabFunction_TestGen_circshift13_PP/P
*)
node  P_112_347_fcn(
	u__Index1__0 : int; u__Index2__0 : int; u__Index3__0 : int;)
returns(
	y__Index1__1 : int; y__Index2__1 : int; y__Index3__1 : int;);
let
	(y__Index1__1, y__Index2__1, y__Index3__1) = P_112_347_abstract_Expression_4(true);
tel

(*
Expression code is abstracted inside Matlab Function block: MatlabFunction_TestGen_circshift13_PP/P
 The code is the following :
y = circshift(u,[1-1])
*)
node imported P_112_347_abstract_Expression_4(
	_SFvirtual__0 : bool;)
returns(
	y__Index1 : int; y__Index2 : int; y__Index3 : int;);

(*
Original block name: MatlabFunction_TestGen_circshift13_PP
*)
node  MatlabFunction_TestGen_circshift13_PP(
	In1_1 : int; In1_2 : int; In1_3 : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int;);
var 
	P_1 : int; P_2 : int; P_3 : int; __time_step : real; __nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 4294967295));
	assert ((0 <= In1_2) and (In1_2 <= 4294967295));
	assert ((0 <= In1_3) and (In1_3 <= 4294967295));
	(P_1, P_2, P_3) = P_112_347_fcn(In1_1, In1_2, In1_3);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

