-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 16:42:37
(*
Function fcn inside Matlab Function block: MatlabFunction_TestGen_transpose4_PP/P
*)
node  P_113_562_fcn(
	u__Index1__0 : int; u__Index2__0 : int; u__Index3__0 : int; u__Index4__0 : int; u__Index5__0 : int;
	u__Index6__0 : int;)
returns(
	y__Index1__1 : int; y__Index2__1 : int; y__Index3__1 : int; y__Index4__1 : int; y__Index5__1 : int;
	y__Index6__1 : int;);
let
	y__Index1__1 = u__Index1__0;
	y__Index2__1 = u__Index3__0;
	y__Index3__1 = u__Index5__0;
	y__Index4__1 = u__Index2__0;
	y__Index5__1 = u__Index4__0;
	y__Index6__1 = u__Index6__0;
tel

(*
Original block name: MatlabFunction_TestGen_transpose4_PP
*)
node  MatlabFunction_TestGen_transpose4_PP(
	In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int; In1_5 : int;
	In1_6 : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	P_1 : int; P_2 : int; P_3 : int; P_4 : int; P_5 : int;
	P_6 : int; __time_step : real; __nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	assert ((0 <= In1_2) and (In1_2 <= 255));
	assert ((0 <= In1_3) and (In1_3 <= 255));
	assert ((0 <= In1_4) and (In1_4 <= 255));
	assert ((0 <= In1_5) and (In1_5 <= 255));
	assert ((0 <= In1_6) and (In1_6 <= 255));
	(P_1, P_2, P_3, P_4, P_5, P_6) = P_113_562_fcn(In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

