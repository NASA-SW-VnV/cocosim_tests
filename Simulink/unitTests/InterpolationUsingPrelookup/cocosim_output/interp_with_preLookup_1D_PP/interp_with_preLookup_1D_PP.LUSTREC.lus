-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 20:08:33
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; y__FromIdx7_ToIdx11 : real; y__FromIdx1_ToIdx5 : real;
let
	ydat_1 = 1.0;
	ydat_2 = 4.0;
	ydat_3 = 9.0;
	ydat_4 = 16.0;
	ydat_5 = 25.0;
	ydat_6 = 36.0;
	ydat_7 = 49.0;
	ydat_8 = 64.0;
	ydat_9 = 81.0;
	ydat_10 = 100.0;
	ydat_11 = 121.0;
	y__FromIdx7_ToIdx11 = (if (x = 7) then
		ydat_7
	    else (if (x = 8) then
		ydat_8
	    else (if (x = 9) then
		ydat_9
	    else (if (x = 10) then
		ydat_10
	    else ydat_11))));
	y__FromIdx1_ToIdx5 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else ydat_5))));
	y = (if (x = 6) then
		ydat_6
	    else (if (x > 6) then
		y__FromIdx7_ToIdx11
	    else y__FromIdx1_ToIdx5));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_Interp_Using_Pre_ext_node(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	u_node_1 : real; u_node_2 : real;
let
	u_node_1 = Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_getTableElement(inline_index_bound_node_1);
	u_node_2 = Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_getTableElement(inline_index_bound_node_2);
	Interp_Using_Pre_Out = ((weight_bound_node_1 * u_node_1) + (weight_bound_node_2 * u_node_2));
tel

(*
external node code wrapper for doing Interpolation using PreLookup
*)
node  Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_Interp_nD_wrapper_node(
	k_in_dim_1 : int; f_in_dim_1 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	fraction_dim_1 : real; dimJump_1 : int; oneBased_bound_node_low_dim_1 : int; bound_node_low_dim_1 : int; bound_node_high_dim_1 : int;
	N_shape_1 : real; N_shape_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int;
let
	fraction_dim_1 = (if (f_in_dim_1 > 1.0) then
		1.0
	    else (if (f_in_dim_1 < 0.0) then
		0.0
	    else f_in_dim_1));
	dimJump_1 = 1;
	oneBased_bound_node_low_dim_1 = (k_in_dim_1 + 1);
	bound_node_low_dim_1 = (if (oneBased_bound_node_low_dim_1 > 10) then
		10
	    else (if (oneBased_bound_node_low_dim_1 < 1) then
		1
	    else oneBased_bound_node_low_dim_1));
	bound_node_high_dim_1 = (bound_node_low_dim_1 + 1);
	N_shape_1 = (1.0 - fraction_dim_1);
	N_shape_2 = fraction_dim_1;
	bound_node_index_inline1 = (bound_node_low_dim_1 * dimJump_1);
	bound_node_index_inline2 = (bound_node_high_dim_1 * dimJump_1);
	Interp_Using_Pre_Out = Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_Interp_Using_Pre_ext_node(bound_node_index_inline1, N_shape_1, bound_node_index_inline2, N_shape_2);
tel

(*
Original block name: interp_with_preLookup_1D_PP
*)
node  interp_with_preLookup_1D_PP(
	_virtual : bool;)
returns(
	Out1_1 : real;);
var 
	Constant_1 : int; Constant1_1 : real; Interpolation_newline_ona1_minus_Dtablewith_newlin_1 : real; __time_step : real; __nb_step : int;
let
	Constant_1 = 5;
	Constant1_1 = 0.40;
	Interpolation_newline_ona1_minus_Dtablewith_newlin_1 = Interpolation_newline_ona1_minus_Dtablewith_newlin_72_605_Interp_nD_wrapper_node(Constant_1, Constant1_1);
	Out1_1 = Interpolation_newline_ona1_minus_Dtablewith_newlin_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

