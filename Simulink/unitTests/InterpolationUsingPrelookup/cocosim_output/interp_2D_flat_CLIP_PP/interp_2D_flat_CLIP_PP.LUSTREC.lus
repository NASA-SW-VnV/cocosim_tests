-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 01:58:21
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
external node code for doing PreLookup
*)
node  Indexsearchin_newline_11evenspaced_newline_points_9_165_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real; Breakpoints_dim1_9 : real;
	Breakpoints_dim1_10 : real; Breakpoints_dim1_11 : real; index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real;
	coords_dim_1_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int; N_shape_1 : real; N_shape_2 : real;
	clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 0.0;
	Breakpoints_dim1_2 = 10.0;
	Breakpoints_dim1_3 = 20.0;
	Breakpoints_dim1_4 = 30.0;
	Breakpoints_dim1_5 = 40.0;
	Breakpoints_dim1_6 = 50.0;
	Breakpoints_dim1_7 = 60.0;
	Breakpoints_dim1_8 = 70.0;
	Breakpoints_dim1_9 = 80.0;
	Breakpoints_dim1_10 = 90.0;
	Breakpoints_dim1_11 = 100.0;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_11) or abs_real(dim1_coord_in - Breakpoints_dim1_11) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_10) or abs_real(dim1_coord_in - Breakpoints_dim1_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_9) or abs_real(dim1_coord_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim1_9, 10, Breakpoints_dim1_10)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_8) or abs_real(dim1_coord_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_7) or abs_real(dim1_coord_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_6) or abs_real(dim1_coord_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))))))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = dim1_coord_in;
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code wrapper for doing PreLookup
*)
node  Indexsearchin_newline_11evenspaced_newline_points_9_165_PreLookup_wrapper_ext_node(
	coord_input : real;)
returns(
	Indexsearchin_newline_11evenspaced_newline_points_1 : int; Indexsearchin_newline_11evenspaced_newline_points_2 : real;);
var 
	inline_index_bound_node_1 : int; shape_bound_node_1 : real; inline_index_bound_node_2 : int; shape_bound_node_2 : real;
let
	(inline_index_bound_node_1, shape_bound_node_1, inline_index_bound_node_2, shape_bound_node_2) = Indexsearchin_newline_11evenspaced_newline_points_9_165_PreLookup_node(coord_input);
	Indexsearchin_newline_11evenspaced_newline_points_1 = (inline_index_bound_node_1 - 1);
	Indexsearchin_newline_11evenspaced_newline_points_2 = shape_bound_node_2;
tel

(*
external node code for doing PreLookup
*)
node  Indexsearchin_newline_9variablyspaced_newline_poin_10_162_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real; Breakpoints_dim1_9 : real;
	index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real; bound_node_index_inline1 : int;
	bound_node_index_inline2 : int; N_shape_1 : real; N_shape_2 : real; clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 0.50;
	Breakpoints_dim1_2 = 1.0;
	Breakpoints_dim1_3 = 3.0;
	Breakpoints_dim1_4 = 5.0;
	Breakpoints_dim1_5 = 15.0;
	Breakpoints_dim1_6 = 45.0;
	Breakpoints_dim1_7 = 95.0;
	Breakpoints_dim1_8 = 96.0;
	Breakpoints_dim1_9 = 97.0;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_9) or abs_real(dim1_coord_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_8) or abs_real(dim1_coord_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_7) or abs_real(dim1_coord_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_6) or abs_real(dim1_coord_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = dim1_coord_in;
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code wrapper for doing PreLookup
*)
node  Indexsearchin_newline_9variablyspaced_newline_poin_10_162_PreLookup_wrapper_ext_node(
	coord_input : real;)
returns(
	Indexsearchin_newline_9variablyspaced_newline_poin_1 : int; Indexsearchin_newline_9variablyspaced_newline_poin_2 : real;);
var 
	inline_index_bound_node_1 : int; shape_bound_node_1 : real; inline_index_bound_node_2 : int; shape_bound_node_2 : real;
let
	(inline_index_bound_node_1, shape_bound_node_1, inline_index_bound_node_2, shape_bound_node_2) = Indexsearchin_newline_9variablyspaced_newline_poin_10_162_PreLookup_node(coord_input);
	Indexsearchin_newline_9variablyspaced_newline_poin_1 = (inline_index_bound_node_1 - 1);
	Indexsearchin_newline_9variablyspaced_newline_poin_2 = shape_bound_node_2;
tel

(*
get a table element
*)
node  Interpolation_newline_onan11x9table_11_156_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; ydat_12 : real; ydat_13 : real; ydat_14 : real; ydat_15 : real;
	ydat_16 : real; ydat_17 : real; ydat_18 : real; ydat_19 : real; ydat_20 : real;
	ydat_21 : real; ydat_22 : real; ydat_23 : real; ydat_24 : real; ydat_25 : real;
	ydat_26 : real; ydat_27 : real; ydat_28 : real; ydat_29 : real; ydat_30 : real;
	ydat_31 : real; ydat_32 : real; ydat_33 : real; ydat_34 : real; ydat_35 : real;
	ydat_36 : real; ydat_37 : real; ydat_38 : real; ydat_39 : real; ydat_40 : real;
	ydat_41 : real; ydat_42 : real; ydat_43 : real; ydat_44 : real; ydat_45 : real;
	ydat_46 : real; ydat_47 : real; ydat_48 : real; ydat_49 : real; ydat_50 : real;
	ydat_51 : real; ydat_52 : real; ydat_53 : real; ydat_54 : real; ydat_55 : real;
	ydat_56 : real; ydat_57 : real; ydat_58 : real; ydat_59 : real; ydat_60 : real;
	ydat_61 : real; ydat_62 : real; ydat_63 : real; ydat_64 : real; ydat_65 : real;
	ydat_66 : real; ydat_67 : real; ydat_68 : real; ydat_69 : real; ydat_70 : real;
	ydat_71 : real; ydat_72 : real; ydat_73 : real; ydat_74 : real; ydat_75 : real;
	ydat_76 : real; ydat_77 : real; ydat_78 : real; ydat_79 : real; ydat_80 : real;
	ydat_81 : real; ydat_82 : real; ydat_83 : real; ydat_84 : real; ydat_85 : real;
	ydat_86 : real; ydat_87 : real; ydat_88 : real; ydat_89 : real; ydat_90 : real;
	ydat_91 : real; ydat_92 : real; ydat_93 : real; ydat_94 : real; ydat_95 : real;
	ydat_96 : real; ydat_97 : real; ydat_98 : real; ydat_99 : real; y__FromIdx95_ToIdx99 : real;
	y__FromIdx89_ToIdx93 : real; y__FromIdx89_ToIdx99 : real; y__FromIdx83_ToIdx87 : real; y__FromIdx76_ToIdx81 : real; y__FromIdx76_ToIdx87 : real;
	y__FromIdx76_ToIdx99 : real; y__FromIdx70_ToIdx74 : real; y__FromIdx64_ToIdx68 : real; y__FromIdx64_ToIdx74 : real; y__FromIdx58_ToIdx62 : real;
	y__FromIdx51_ToIdx56 : real; y__FromIdx51_ToIdx62 : real; y__FromIdx51_ToIdx74 : real; y__FromIdx51_ToIdx99 : real; y__FromIdx45_ToIdx49 : real;
	y__FromIdx39_ToIdx43 : real; y__FromIdx39_ToIdx49 : real; y__FromIdx33_ToIdx37 : real; y__FromIdx26_ToIdx31 : real; y__FromIdx26_ToIdx37 : real;
	y__FromIdx26_ToIdx49 : real; y__FromIdx20_ToIdx24 : real; y__FromIdx14_ToIdx18 : real; y__FromIdx14_ToIdx24 : real; y__FromIdx8_ToIdx12 : real;
	y__FromIdx1_ToIdx6 : real; y__FromIdx1_ToIdx12 : real; y__FromIdx1_ToIdx24 : real; y__FromIdx1_ToIdx49 : real;
let
	ydat_1 = 1.0;
	ydat_2 = 2.0;
	ydat_3 = 3.0;
	ydat_4 = 4.0;
	ydat_5 = 5.0;
	ydat_6 = 6.0;
	ydat_7 = 7.0;
	ydat_8 = 8.0;
	ydat_9 = 9.0;
	ydat_10 = 10.0;
	ydat_11 = 11.0;
	ydat_12 = 12.0;
	ydat_13 = 13.0;
	ydat_14 = 14.0;
	ydat_15 = 15.0;
	ydat_16 = 16.0;
	ydat_17 = 17.0;
	ydat_18 = 18.0;
	ydat_19 = 19.0;
	ydat_20 = 20.0;
	ydat_21 = 21.0;
	ydat_22 = 22.0;
	ydat_23 = 23.0;
	ydat_24 = 24.0;
	ydat_25 = 25.0;
	ydat_26 = 26.0;
	ydat_27 = 27.0;
	ydat_28 = 28.0;
	ydat_29 = 29.0;
	ydat_30 = 30.0;
	ydat_31 = 31.0;
	ydat_32 = 32.0;
	ydat_33 = 33.0;
	ydat_34 = 34.0;
	ydat_35 = 35.0;
	ydat_36 = 36.0;
	ydat_37 = 37.0;
	ydat_38 = 38.0;
	ydat_39 = 39.0;
	ydat_40 = 40.0;
	ydat_41 = 41.0;
	ydat_42 = 42.0;
	ydat_43 = 43.0;
	ydat_44 = 44.0;
	ydat_45 = 45.0;
	ydat_46 = 46.0;
	ydat_47 = 47.0;
	ydat_48 = 48.0;
	ydat_49 = 49.0;
	ydat_50 = 50.0;
	ydat_51 = 51.0;
	ydat_52 = 52.0;
	ydat_53 = 53.0;
	ydat_54 = 54.0;
	ydat_55 = 55.0;
	ydat_56 = 56.0;
	ydat_57 = 57.0;
	ydat_58 = 58.0;
	ydat_59 = 59.0;
	ydat_60 = 60.0;
	ydat_61 = 61.0;
	ydat_62 = 62.0;
	ydat_63 = 63.0;
	ydat_64 = 64.0;
	ydat_65 = 65.0;
	ydat_66 = 66.0;
	ydat_67 = 67.0;
	ydat_68 = 68.0;
	ydat_69 = 69.0;
	ydat_70 = 70.0;
	ydat_71 = 71.0;
	ydat_72 = 72.0;
	ydat_73 = 73.0;
	ydat_74 = 74.0;
	ydat_75 = 75.0;
	ydat_76 = 76.0;
	ydat_77 = 77.0;
	ydat_78 = 78.0;
	ydat_79 = 79.0;
	ydat_80 = 80.0;
	ydat_81 = 81.0;
	ydat_82 = 82.0;
	ydat_83 = 83.0;
	ydat_84 = 84.0;
	ydat_85 = 85.0;
	ydat_86 = 86.0;
	ydat_87 = 87.0;
	ydat_88 = 88.0;
	ydat_89 = 89.0;
	ydat_90 = 90.0;
	ydat_91 = 91.0;
	ydat_92 = 92.0;
	ydat_93 = 93.0;
	ydat_94 = 94.0;
	ydat_95 = 95.0;
	ydat_96 = 96.0;
	ydat_97 = 97.0;
	ydat_98 = 98.0;
	ydat_99 = 99.0;
	y__FromIdx95_ToIdx99 = (if (x = 95) then
		ydat_95
	    else (if (x = 96) then
		ydat_96
	    else (if (x = 97) then
		ydat_97
	    else (if (x = 98) then
		ydat_98
	    else ydat_99))));
	y__FromIdx89_ToIdx93 = (if (x = 89) then
		ydat_89
	    else (if (x = 90) then
		ydat_90
	    else (if (x = 91) then
		ydat_91
	    else (if (x = 92) then
		ydat_92
	    else ydat_93))));
	y__FromIdx89_ToIdx99 = (if (x = 94) then
		ydat_94
	    else (if (x > 94) then
		y__FromIdx95_ToIdx99
	    else y__FromIdx89_ToIdx93));
	y__FromIdx83_ToIdx87 = (if (x = 83) then
		ydat_83
	    else (if (x = 84) then
		ydat_84
	    else (if (x = 85) then
		ydat_85
	    else (if (x = 86) then
		ydat_86
	    else ydat_87))));
	y__FromIdx76_ToIdx81 = (if (x = 76) then
		ydat_76
	    else (if (x = 77) then
		ydat_77
	    else (if (x = 78) then
		ydat_78
	    else (if (x = 79) then
		ydat_79
	    else (if (x = 80) then
		ydat_80
	    else ydat_81)))));
	y__FromIdx76_ToIdx87 = (if (x = 82) then
		ydat_82
	    else (if (x > 82) then
		y__FromIdx83_ToIdx87
	    else y__FromIdx76_ToIdx81));
	y__FromIdx76_ToIdx99 = (if (x = 88) then
		ydat_88
	    else (if (x > 88) then
		y__FromIdx89_ToIdx99
	    else y__FromIdx76_ToIdx87));
	y__FromIdx70_ToIdx74 = (if (x = 70) then
		ydat_70
	    else (if (x = 71) then
		ydat_71
	    else (if (x = 72) then
		ydat_72
	    else (if (x = 73) then
		ydat_73
	    else ydat_74))));
	y__FromIdx64_ToIdx68 = (if (x = 64) then
		ydat_64
	    else (if (x = 65) then
		ydat_65
	    else (if (x = 66) then
		ydat_66
	    else (if (x = 67) then
		ydat_67
	    else ydat_68))));
	y__FromIdx64_ToIdx74 = (if (x = 69) then
		ydat_69
	    else (if (x > 69) then
		y__FromIdx70_ToIdx74
	    else y__FromIdx64_ToIdx68));
	y__FromIdx58_ToIdx62 = (if (x = 58) then
		ydat_58
	    else (if (x = 59) then
		ydat_59
	    else (if (x = 60) then
		ydat_60
	    else (if (x = 61) then
		ydat_61
	    else ydat_62))));
	y__FromIdx51_ToIdx56 = (if (x = 51) then
		ydat_51
	    else (if (x = 52) then
		ydat_52
	    else (if (x = 53) then
		ydat_53
	    else (if (x = 54) then
		ydat_54
	    else (if (x = 55) then
		ydat_55
	    else ydat_56)))));
	y__FromIdx51_ToIdx62 = (if (x = 57) then
		ydat_57
	    else (if (x > 57) then
		y__FromIdx58_ToIdx62
	    else y__FromIdx51_ToIdx56));
	y__FromIdx51_ToIdx74 = (if (x = 63) then
		ydat_63
	    else (if (x > 63) then
		y__FromIdx64_ToIdx74
	    else y__FromIdx51_ToIdx62));
	y__FromIdx51_ToIdx99 = (if (x = 75) then
		ydat_75
	    else (if (x > 75) then
		y__FromIdx76_ToIdx99
	    else y__FromIdx51_ToIdx74));
	y__FromIdx45_ToIdx49 = (if (x = 45) then
		ydat_45
	    else (if (x = 46) then
		ydat_46
	    else (if (x = 47) then
		ydat_47
	    else (if (x = 48) then
		ydat_48
	    else ydat_49))));
	y__FromIdx39_ToIdx43 = (if (x = 39) then
		ydat_39
	    else (if (x = 40) then
		ydat_40
	    else (if (x = 41) then
		ydat_41
	    else (if (x = 42) then
		ydat_42
	    else ydat_43))));
	y__FromIdx39_ToIdx49 = (if (x = 44) then
		ydat_44
	    else (if (x > 44) then
		y__FromIdx45_ToIdx49
	    else y__FromIdx39_ToIdx43));
	y__FromIdx33_ToIdx37 = (if (x = 33) then
		ydat_33
	    else (if (x = 34) then
		ydat_34
	    else (if (x = 35) then
		ydat_35
	    else (if (x = 36) then
		ydat_36
	    else ydat_37))));
	y__FromIdx26_ToIdx31 = (if (x = 26) then
		ydat_26
	    else (if (x = 27) then
		ydat_27
	    else (if (x = 28) then
		ydat_28
	    else (if (x = 29) then
		ydat_29
	    else (if (x = 30) then
		ydat_30
	    else ydat_31)))));
	y__FromIdx26_ToIdx37 = (if (x = 32) then
		ydat_32
	    else (if (x > 32) then
		y__FromIdx33_ToIdx37
	    else y__FromIdx26_ToIdx31));
	y__FromIdx26_ToIdx49 = (if (x = 38) then
		ydat_38
	    else (if (x > 38) then
		y__FromIdx39_ToIdx49
	    else y__FromIdx26_ToIdx37));
	y__FromIdx20_ToIdx24 = (if (x = 20) then
		ydat_20
	    else (if (x = 21) then
		ydat_21
	    else (if (x = 22) then
		ydat_22
	    else (if (x = 23) then
		ydat_23
	    else ydat_24))));
	y__FromIdx14_ToIdx18 = (if (x = 14) then
		ydat_14
	    else (if (x = 15) then
		ydat_15
	    else (if (x = 16) then
		ydat_16
	    else (if (x = 17) then
		ydat_17
	    else ydat_18))));
	y__FromIdx14_ToIdx24 = (if (x = 19) then
		ydat_19
	    else (if (x > 19) then
		y__FromIdx20_ToIdx24
	    else y__FromIdx14_ToIdx18));
	y__FromIdx8_ToIdx12 = (if (x = 8) then
		ydat_8
	    else (if (x = 9) then
		ydat_9
	    else (if (x = 10) then
		ydat_10
	    else (if (x = 11) then
		ydat_11
	    else ydat_12))));
	y__FromIdx1_ToIdx6 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else ydat_6)))));
	y__FromIdx1_ToIdx12 = (if (x = 7) then
		ydat_7
	    else (if (x > 7) then
		y__FromIdx8_ToIdx12
	    else y__FromIdx1_ToIdx6));
	y__FromIdx1_ToIdx24 = (if (x = 13) then
		ydat_13
	    else (if (x > 13) then
		y__FromIdx14_ToIdx24
	    else y__FromIdx1_ToIdx12));
	y__FromIdx1_ToIdx49 = (if (x = 25) then
		ydat_25
	    else (if (x > 25) then
		y__FromIdx26_ToIdx49
	    else y__FromIdx1_ToIdx24));
	y = (if (x = 50) then
		ydat_50
	    else (if (x > 50) then
		y__FromIdx51_ToIdx99
	    else y__FromIdx1_ToIdx49));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  Interpolation_newline_onan11x9table_11_156_Interp_Using_Pre_ext_node(
	inline_index_solution : int;)
returns(
	Interp_Using_Pre_Out : real;);
let
	Interp_Using_Pre_Out = Interpolation_newline_onan11x9table_11_156_getTableElement(inline_index_solution);
tel

(*
external node code wrapper for doing Interpolation using PreLookup
*)
node  Interpolation_newline_onan11x9table_11_156_Interp_nD_wrapper_node(
	k_in_dim_1 : int; f_in_dim_1 : real; k_in_dim_2 : int; f_in_dim_2 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	fraction_dim_1 : real; fraction_dim_2 : real; dimJump_1 : int; dimJump_2 : int; oneBased_bound_node_low_dim_1 : int;
	bound_node_low_dim_1 : int; bound_node_high_dim_1 : int; oneBased_bound_node_low_dim_2 : int; bound_node_low_dim_2 : int; bound_node_high_dim_2 : int;
	direct_solution_inline_index : int; solution_subscript_for_dim_1 : int; solution_subscript_for_dim_2 : int;
let
	fraction_dim_1 = (if (f_in_dim_1 > 1.0) then
		1.0
	    else (if (f_in_dim_1 < 0.0) then
		0.0
	    else f_in_dim_1));
	fraction_dim_2 = (if (f_in_dim_2 > 1.0) then
		1.0
	    else (if (f_in_dim_2 < 0.0) then
		0.0
	    else f_in_dim_2));
	dimJump_1 = 1;
	dimJump_2 = 11;
	oneBased_bound_node_low_dim_1 = (k_in_dim_1 + 1);
	bound_node_low_dim_1 = (if (oneBased_bound_node_low_dim_1 > 10) then
		10
	    else (if (oneBased_bound_node_low_dim_1 < 1) then
		1
	    else oneBased_bound_node_low_dim_1));
	bound_node_high_dim_1 = (bound_node_low_dim_1 + 1);
	oneBased_bound_node_low_dim_2 = (k_in_dim_2 + 1);
	bound_node_low_dim_2 = (if (oneBased_bound_node_low_dim_2 > 8) then
		8
	    else (if (oneBased_bound_node_low_dim_2 < 1) then
		1
	    else oneBased_bound_node_low_dim_2));
	bound_node_high_dim_2 = (bound_node_low_dim_2 + 1);
	solution_subscript_for_dim_1 = (if (((f_in_dim_1 >= 1.0) or abs_real(f_in_dim_1 - 1.0) <= 0.000000000000000222044604925031) and (k_in_dim_1 >= 9)) then
		bound_node_high_dim_1
	    else bound_node_low_dim_1);
	solution_subscript_for_dim_2 = (if (((f_in_dim_2 >= 1.0) or abs_real(f_in_dim_2 - 1.0) <= 0.000000000000000222044604925031) and (k_in_dim_2 >= 7)) then
		bound_node_high_dim_2
	    else bound_node_low_dim_2);
	direct_solution_inline_index = ((solution_subscript_for_dim_1 * dimJump_1) + ((solution_subscript_for_dim_2 - 1) * dimJump_2));
	Interp_Using_Pre_Out = Interpolation_newline_onan11x9table_11_156_Interp_Using_Pre_ext_node(direct_solution_inline_index);
tel

(*
Original block name: interp_2D_flat_CLIP_PP
*)
node  interp_2D_flat_CLIP_PP(
	_virtual : bool;)
returns(
	Out2_1 : real;);
var 
	Constant_1 : real; Constant1_1 : real; Indexsearchin_newline_11evenspaced_newline_points_1 : int; Indexsearchin_newline_11evenspaced_newline_points_2 : real; Indexsearchin_newline_9variablyspaced_newline_poin_1 : int;
	Indexsearchin_newline_9variablyspaced_newline_poin_2 : real; Interpolation_newline_onan11x9table_1 : real; __time_step : real; __nb_step : int;
let
	Constant_1 = 108.700000000000003;
	Constant1_1 = 13.199999999999999;
	(Indexsearchin_newline_11evenspaced_newline_points_1, Indexsearchin_newline_11evenspaced_newline_points_2) = Indexsearchin_newline_11evenspaced_newline_points_9_165_PreLookup_wrapper_ext_node(Constant_1);
	(Indexsearchin_newline_9variablyspaced_newline_poin_1, Indexsearchin_newline_9variablyspaced_newline_poin_2) = Indexsearchin_newline_9variablyspaced_newline_poin_10_162_PreLookup_wrapper_ext_node(Constant1_1);
	Interpolation_newline_onan11x9table_1 = Interpolation_newline_onan11x9table_11_156_Interp_nD_wrapper_node(Indexsearchin_newline_11evenspaced_newline_points_1, Indexsearchin_newline_11evenspaced_newline_points_2, Indexsearchin_newline_9variablyspaced_newline_poin_1, Indexsearchin_newline_9variablyspaced_newline_poin_2);
	Out2_1 = Interpolation_newline_onan11x9table_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

