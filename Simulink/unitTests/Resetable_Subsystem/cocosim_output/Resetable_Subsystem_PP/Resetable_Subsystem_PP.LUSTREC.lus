-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 22:13:34
(*
Original block name: Resetable_Subsystem_PP/Enabled_Counter/Subsystem
*)
node  Subsystem_293_530(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
tel

(*
Original block name: Resetable_Subsystem_PP/Enabled_Counter
*)
node  Enabled_Counter_179_614(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	Add_1 : real; ResetCond_of_Subsystem_293_530 : bool; Subsystem_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	ResetCond_of_Subsystem_293_530 = ((false) -> (((In1_1 > 0.0) and (not ((pre ((In1_1 > 0.0))))))));
	Subsystem_1 = (Subsystem_293_530(In1_1, __time_step, __nb_step) every ResetCond_of_Subsystem_293_530);
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
	Out2_1 = Subsystem_1;
tel

(*
Original block name: Resetable_Subsystem_PP/Enabled_withNoMemory/Subsystem
*)
node  Subsystem_332_361(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
tel

(*
Original block name: Resetable_Subsystem_PP/Enabled_withNoMemory
*)
node  Enabled_withNoMemory_326_511(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	Add_1 : real; Constant_1 : real; ResetCond_of_Subsystem_332_361 : bool; Subsystem_1 : real;
let
	Add_1 = 0.0 + In1_1 + Constant_1;
	Constant_1 = 1.0;
	ResetCond_of_Subsystem_332_361 = ((false) -> (((In1_1 > 0.0) and (not ((pre ((In1_1 > 0.0))))))));
	Subsystem_1 = (Subsystem_332_361(In1_1, __time_step, __nb_step) every ResetCond_of_Subsystem_332_361);
	Out1_1 = Add_1;
	Out2_1 = Subsystem_1;
tel

(*
Original block name: Resetable_Subsystem_PP/case_either
*)
node  case_either_360_508(
	Cpre_compx_1 : real; __time_step : real; __nb_step : int;)
returns(
	Ccor_x_1 : real; pre_x_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + Cpre_compx_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Ccor_x_1 = Add_1;
	pre_x_1 = UnitDelay_1;
tel

(*
Original block name: Resetable_Subsystem_PP/case_falling
*)
node  case_falling_374_385(
	Cpre_compx_1 : real; __time_step : real; __nb_step : int;)
returns(
	Ccor_x_1 : real; pre_x_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + Cpre_compx_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Ccor_x_1 = Add_1;
	pre_x_1 = UnitDelay_1;
tel

(*
Original block name: Resetable_Subsystem_PP/case_rising
*)
node  case_rising_388_376(
	Cpre_compx_1 : real; __time_step : real; __nb_step : int;)
returns(
	Ccor_x_1 : real; pre_x_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + Cpre_compx_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Ccor_x_1 = Add_1;
	pre_x_1 = UnitDelay_1;
tel

(*
Original block name: Resetable_Subsystem_PP
*)
node  Resetable_Subsystem_PP(
	In1_1 : real; Enable_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real; Out4_1 : real; Out5_1 : real; Out6_1 : real;
	pre_Out1_1 : real; pre_Out2_1 : real; pre_Out3_1 : real; Out3_1 : real; Out7_1 : real;);
var 
	ResetCond_of_Enabled_Counter_179_614 : bool; Enabled_Counter_1 : real; Enabled_Counter_2 : real; ResetCond_of_Enabled_withNoMemory_326_511 : bool; Enabled_withNoMemory_1 : real;
	Enabled_withNoMemory_2 : real; ResetCond_of_case_either_360_508 : bool; case_either_1 : real; case_either_2 : real; ResetCond_of_case_falling_374_385 : bool;
	case_falling_1 : real; case_falling_2 : real; ResetCond_of_case_rising_388_376 : bool; case_rising_1 : real; case_rising_2 : real;
	__time_step : real; __nb_step : int;
let
	ResetCond_of_Enabled_Counter_179_614 = ((false) -> (((Enable_1 > 0.0) and (not ((pre ((Enable_1 > 0.0))))))));
	(Enabled_Counter_1, Enabled_Counter_2) = (Enabled_Counter_179_614(In1_1, __time_step, __nb_step) every ResetCond_of_Enabled_Counter_179_614);
	ResetCond_of_Enabled_withNoMemory_326_511 = ((false) -> (((Enable_1 > 0.0) and (not ((pre ((Enable_1 > 0.0))))))));
	(Enabled_withNoMemory_1, Enabled_withNoMemory_2) = (Enabled_withNoMemory_326_511(In1_1, __time_step, __nb_step) every ResetCond_of_Enabled_withNoMemory_326_511);
	ResetCond_of_case_either_360_508 = ((false) -> ((((Enable_1 > 0.0) and (not ((pre ((Enable_1 > 0.0)))))) or ((not ((Enable_1 > 0.0))) and (pre ((Enable_1 > 0.0)))))));
	(case_either_1, case_either_2) = (case_either_360_508(In1_1, __time_step, __nb_step) every ResetCond_of_case_either_360_508);
	ResetCond_of_case_falling_374_385 = ((false) -> (((not ((Enable_1 > 0.0))) and (pre ((Enable_1 > 0.0))))));
	(case_falling_1, case_falling_2) = (case_falling_374_385(In1_1, __time_step, __nb_step) every ResetCond_of_case_falling_374_385);
	ResetCond_of_case_rising_388_376 = ((false) -> (((Enable_1 > 0.0) and (not ((pre ((Enable_1 > 0.0))))))));
	(case_rising_1, case_rising_2) = (case_rising_388_376(In1_1, __time_step, __nb_step) every ResetCond_of_case_rising_388_376);
	Out1_1 = Enabled_Counter_1;
	Out2_1 = Enabled_Counter_2;
	Out4_1 = case_rising_1;
	Out5_1 = case_falling_1;
	Out6_1 = case_either_1;
	pre_Out1_1 = case_rising_2;
	pre_Out2_1 = case_falling_2;
	pre_Out3_1 = case_either_2;
	Out3_1 = Enabled_withNoMemory_1;
	Out7_1 = Enabled_withNoMemory_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

