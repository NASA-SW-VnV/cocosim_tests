-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:38:16
#open <lustrec_math>

(*
Original block name: ex_bus_to_mux_ok_PP/SineWave
*)
node  SineWave_5_092(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Amp_1 : real; Bias_1 : real; Freq_1 : real; In1_1 : real; Phase_1 : real;
	Product_1 : real; Product1_1 : real; Sum_1 : real; Sum1_1 : real; Trigonometric_newline_Function_1 : real;
let
	Amp_1 = 1.0;
	Bias_1 = 0.0;
	Freq_1 = 1.0;
	In1_1 = __time_step;
	Phase_1 = 0.0;
	Product_1 = (1.0 * Trigonometric_newline_Function_1) * Amp_1;
	Product1_1 = (1.0 * In1_1) * Freq_1;
	Sum_1 = 0.0 + Product_1 + Bias_1;
	Sum1_1 = 0.0 + Product1_1 + Phase_1;
	Trigonometric_newline_Function_1 = sin(Sum1_1);
	Out1_1 = Sum_1;
tel

(*
Original block name: ex_bus_to_mux_ok_PP/SineWave1
*)
node  SineWave1_6_092(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Amp_1 : real; Bias_1 : real; Freq_1 : real; In1_1 : real; Phase_1 : real;
	Product_1 : real; Product1_1 : real; Sum_1 : real; Sum1_1 : real; Trigonometric_newline_Function_1 : real;
let
	Amp_1 = 1.0;
	Bias_1 = 0.0;
	Freq_1 = 1.0;
	In1_1 = __time_step;
	Phase_1 = 0.0;
	Product_1 = (1.0 * Trigonometric_newline_Function_1) * Amp_1;
	Product1_1 = (1.0 * In1_1) * Freq_1;
	Sum_1 = 0.0 + Product_1 + Bias_1;
	Sum1_1 = 0.0 + Product1_1 + Phase_1;
	Trigonometric_newline_Function_1 = sin(Sum1_1);
	Out1_1 = Sum_1;
tel

(*
Original block name: ex_bus_to_mux_ok_PP
*)
node  ex_bus_to_mux_ok_PP(
	_virtual : bool;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	Bus_newline_Creator_1 : real; Bus_newline_Creator_2 : real; BustoVector_1 : real; BustoVector_2 : real; Gain_1 : real;
	Gain_2 : real; SineWave_1 : real; SineWave1_1 : real; __time_step : real; __nb_step : int;
let
	Bus_newline_Creator_1 = SineWave_1;
	Bus_newline_Creator_2 = SineWave1_1;
	BustoVector_1 = Bus_newline_Creator_1;
	BustoVector_2 = Bus_newline_Creator_2;
	Gain_1 = (BustoVector_1 * 3.0);
	Gain_2 = (BustoVector_2 * 3.0);
	SineWave_1 = SineWave_5_092(__time_step, __nb_step);
	SineWave1_1 = SineWave1_6_092(__time_step, __nb_step);
	Out1_1 = Gain_1;
	Out1_2 = Gain_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

