-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 17:20:47
node  _make_clock(
	period : int; phase : int;)
returns(
	clk : bool;);
var 
	count : int;
let
	count = ((((period - phase)) -> (((pre (count)) + 1))) mod period);
	clk = (count = 0);
tel

node  RandomNumber_165_776(
	b : bool;)
returns(
	r : real;);
let
	r = ((-0.029633197298099) -> ((pre (((3.983248745233039) -> ((pre (((5.621912916104948) -> ((pre (((-5.633588425916670) -> ((pre (((-1.908142350182205) -> ((pre (((-6.878915258895588) -> ((pre (((-4.410723355434069) -> ((pre (((5.887706217461068) -> ((pre (((6.299648052010647) -> ((pre (((-7.658064128528767) -> ((pre (((-7.332448066515252) -> ((pre (((6.863853343386661) -> ((pre (((-3.542876498269993) -> ((pre (((-3.557237894670310) -> ((pre (((0.350422842668813) -> ((pre (((7.997995438009478) -> ((pre (((-7.765103206582119) -> ((pre (((3.504837865349799) -> ((pre (((3.318680329027137) -> ((pre (((12.346383351051077) -> ((pre (((-5.032417237352552) -> ((pre (((-4.028844120569437) -> ((pre (((13.210301730593033) -> ((pre (((-9.478768810211367) -> ((pre (((1.363189095501553) -> ((pre (((4.602007113633221) -> ((pre (((-9.412284994203750) -> ((pre (((-4.918960467866001) -> ((pre (((-6.810191036143994) -> ((pre (((-10.527112978338542) -> ((pre (((1.645187063449993) -> ((pre (((-6.552205813220294) -> ((pre (((-1.132135072197044) -> ((pre (((-4.086934713920548) -> ((pre (((-3.358066643167462) -> ((pre (((-7.693558393524635) -> ((pre (((-0.691489080490108) -> ((pre (((4.454788084948982) -> ((pre (((-10.094695612507616) -> ((pre (((0.674389676551333) -> ((pre (((-5.359250985885282) -> ((pre (((3.921289455359387) -> ((pre (((0.053538382007419) -> ((pre (((-8.144515382421266) -> ((pre (((1.997167061272378) -> ((pre (((-7.981133193629054) -> ((pre (((7.244550365453580) -> ((pre (((-3.784703157043523) -> ((pre (((-4.164703838027647) -> ((pre (((3.362256481826942) -> ((pre (((4.329740532954474) -> ((pre (((2.714212545946497) -> ((pre (((-8.478692704599535) -> ((pre (((-1.181643789260139) -> ((pre (((-0.153835866944919) -> ((pre (((-6.357816924971053) -> ((pre (((-7.179801712484816) -> ((pre (((11.181150634406940) -> ((pre (((-3.465366531085190) -> ((pre (((3.445254673892084) -> ((pre (((-1.489130929612188) -> ((pre (((8.896536318062878) -> ((pre (((4.803602943964404) -> ((pre (((-4.788278754744037) -> ((pre (((-4.878521159981448) -> ((pre (((7.081368586275739) -> ((pre (((-1.349330463936554) -> ((pre (((5.196930661047158) -> ((pre (((-5.066974377730999) -> ((pre (((-1.848976141321248) -> ((pre (((0.795491223201011) -> ((pre (((0.866500653050658) -> ((pre (((10.364240254350532) -> ((pre (((-4.045812436789123) -> ((pre (((1.879509293901542) -> ((pre (((0.516118740470163) -> ((pre (((-1.487264979142525) -> ((pre (((-6.724676696886553) -> ((pre (((-6.761713944939806) -> ((pre (((-6.879855775642930) -> ((pre (((-14.487605865553247) -> ((pre (((-3.345893878404429) -> ((pre (((-8.092628486646278) -> ((pre (((-3.027328776792942) -> ((pre (((10.415378353282625) -> ((pre (((-6.263387458133640) -> ((pre (((-6.086228831810642) -> ((pre (((-2.035428456081080) -> ((pre (((-8.366769152666569) -> ((pre (((0.515939703709063) -> ((pre (((2.123552982202784) -> ((pre (((-7.578798098206356) -> ((pre (((-0.443630994008209) -> ((pre (((-0.335490629575878) -> ((pre (((-2.019233568674959) -> ((pre (((6.090366893997909) -> ((pre (((5.636796098506845) -> ((pre (((-0.434366238630760) -> ((pre (((9.378578682865315) -> ((pre (-0.242621830171747))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))));
tel

(*
Original block name: RandomNumber_PP
*)
node  RandomNumber_PP(
	_virtual : bool;)
returns(
	Out1_1 : bool;);
var 
	Constant_1 : real; Constant1_1 : real; LogicalOperator_1 : bool; RandomNumber_1 : real; RandomNumber_165_776_clock : bool clock;
	RelationalOperator_1 : bool; RelationalOperator1_1 : bool; __time_step : real; __nb_step : int;
let
	--%PROPERTY "Assertion_118_688" LogicalOperator_1;
	Constant_1 = -1.73030;
	Constant1_1 = 4.13030;
	LogicalOperator_1 = (RelationalOperator_1 and RelationalOperator1_1);
	RandomNumber_165_776_clock = _make_clock(100, 0);
	RandomNumber_1 = (RandomNumber_165_776(true) every RandomNumber_165_776_clock);
	RelationalOperator_1 = (Constant_1 <= RandomNumber_1);
	RelationalOperator1_1 = (RandomNumber_1 <= Constant1_1);
	Out1_1 = LogicalOperator_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

