-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:36:02
type days = enum {Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday};
node  days_to_int(
	x : days;)
returns(
	y : int;);
let
	y = (if (x = Sunday) then
		1
	    else (if (x = Monday) then
		2
	    else (if (x = Tuesday) then
		3
	    else (if (x = Wednesday) then
		4
	    else (if (x = Thursday) then
		5
	    else (if (x = Friday) then
		6
	    else (if (x = Saturday) then
		7
	    else 0)))))));
tel

node  int_to_days(
	x : int;)
returns(
	y : days;);
let
	y = (if (x = 1) then
		Sunday
	    else (if (x = 2) then
		Monday
	    else (if (x = 3) then
		Tuesday
	    else (if (x = 4) then
		Wednesday
	    else (if (x = 5) then
		Thursday
	    else (if (x = 6) then
		Friday
	    else Saturday))))));
tel

node  abs_int(
	x : int;)
returns(
	y : int;);
let
	y = (if (x >= 0) then
		x
	    else (- (x)));
tel

node  rem_int_int(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if ((y = 0) or (x = 0)) then
		0
	    else ((x mod y) - (if (((x mod y) <> 0) and (x <= 0)) then abs_int(y) else 0)));
tel

node  int_to_int8(
	x : int;)
returns(
	y : int;);
let
	y = (if (x > 127) then
		(-128 + rem_int_int((x - 127 - 1), 256))
	    else (if (x < -128) then
		(127 + rem_int_int((x + 128 + 1), 256))
	    else x));
tel

(*
Original block name: BusCreatorEnum_nonvirtual_PP/Enumerated
Constant
*)
node  Enumerated_newline_Constant_6_089(
	__time_step : real; __nb_step : int;)
returns(
	Out_1 : days;);
var 
	Constant_1 : days;
let
	Constant_1 = Sunday;
	Out_1 = Constant_1;
tel

(*
Original block name: BusCreatorEnum_nonvirtual_PP
*)
node  BusCreatorEnum_nonvirtual_PP(
	In2_1 : int; In2_2 : int; In2_3 : int; In3_1 : bool; In3_2 : bool;
	In3_3 : bool; In3_4 : bool;)
returns(
	chirp_1 : int; sine_1 : int; sine_2 : int; sine_3 : int; step_1 : bool;
	step_2 : bool; step_3 : bool; step_4 : bool;);
var 
	Bus_newline_Selector_1 : days; Bus_newline_Selector_2 : int; Bus_newline_Selector_3 : int; Bus_newline_Selector_4 : int; Bus_newline_Selector_5 : bool;
	Bus_newline_Selector_6 : bool; Bus_newline_Selector_7 : bool; Bus_newline_Selector_8 : bool; DataTypeConversion_1 : int; Enumerated_newline_Constant_1 : days;
	NestedBus_1_BusElem1 : days; NestedBus_1_BusElem2 : int; NestedBus_1_BusElem3 : int; NestedBus_1_BusElem4 : int; NestedBus_1_BusElem5 : bool;
	NestedBus_1_BusElem6 : bool; NestedBus_1_BusElem7 : bool; NestedBus_1_BusElem8 : bool; SubBus_1_BusElem1 : days; SubBus_1_BusElem2 : int;
	SubBus_1_BusElem3 : int; SubBus_1_BusElem4 : int; __time_step : real; __nb_step : int;
let
	assert ((-2147483648 <= In2_1) and (In2_1 <= 2147483647));
	assert ((-2147483648 <= In2_2) and (In2_2 <= 2147483647));
	assert ((-2147483648 <= In2_3) and (In2_3 <= 2147483647));
	Bus_newline_Selector_1 = NestedBus_1_BusElem1;
	Bus_newline_Selector_2 = NestedBus_1_BusElem2;
	Bus_newline_Selector_3 = NestedBus_1_BusElem3;
	Bus_newline_Selector_4 = NestedBus_1_BusElem4;
	Bus_newline_Selector_5 = NestedBus_1_BusElem5;
	Bus_newline_Selector_6 = NestedBus_1_BusElem6;
	Bus_newline_Selector_7 = NestedBus_1_BusElem7;
	Bus_newline_Selector_8 = NestedBus_1_BusElem8;
	DataTypeConversion_1 = int_to_int8(days_to_int(Bus_newline_Selector_1));
	Enumerated_newline_Constant_1 = Enumerated_newline_Constant_6_089(__time_step, __nb_step);
	NestedBus_1_BusElem1 = SubBus_1_BusElem1;
	NestedBus_1_BusElem2 = SubBus_1_BusElem2;
	NestedBus_1_BusElem3 = SubBus_1_BusElem3;
	NestedBus_1_BusElem4 = SubBus_1_BusElem4;
	NestedBus_1_BusElem5 = In3_1;
	NestedBus_1_BusElem6 = In3_2;
	NestedBus_1_BusElem7 = In3_3;
	NestedBus_1_BusElem8 = In3_4;
	SubBus_1_BusElem1 = Enumerated_newline_Constant_1;
	SubBus_1_BusElem2 = In2_1;
	SubBus_1_BusElem3 = In2_2;
	SubBus_1_BusElem4 = In2_3;
	chirp_1 = DataTypeConversion_1;
	sine_1 = Bus_newline_Selector_2;
	sine_2 = Bus_newline_Selector_3;
	sine_3 = Bus_newline_Selector_4;
	step_1 = Bus_newline_Selector_5;
	step_2 = Bus_newline_Selector_6;
	step_3 = Bus_newline_Selector_7;
	step_4 = Bus_newline_Selector_8;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

