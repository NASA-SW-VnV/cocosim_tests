-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:36:29
(*
Original block name: BusCreator_nonvirtual_PP/Subsystem
*)
node  Subsystem_6_090(
	chirp_1 : real; chirp_2 : real; sine_1 : int; sine_2 : int; sine_3 : int;
	step_1 : bool; step_2 : bool; step_3 : bool; step_4 : bool; __time_step : real;
	__nb_step : int;)
returns(
	subSignal_1_BusElem1 : real; subSignal_1_BusElem2 : real; subSignal_1_BusElem3 : int; subSignal_1_BusElem4 : int; subSignal_1_BusElem5 : int;
	Out1_1 : bool; Out1_2 : bool; Out1_3 : bool; Out1_4 : bool;);
var 
	BusCreator_1_BusElem1 : real; BusCreator_1_BusElem2 : real; BusCreator_1_BusElem3 : int; BusCreator_1_BusElem4 : int; BusCreator_1_BusElem5 : int;
let
	assert ((-2147483648 <= sine_1) and (sine_1 <= 2147483647));
	assert ((-2147483648 <= sine_2) and (sine_2 <= 2147483647));
	assert ((-2147483648 <= sine_3) and (sine_3 <= 2147483647));
	BusCreator_1_BusElem1 = chirp_1;
	BusCreator_1_BusElem2 = chirp_2;
	BusCreator_1_BusElem3 = sine_1;
	BusCreator_1_BusElem4 = sine_2;
	BusCreator_1_BusElem5 = sine_3;
	subSignal_1_BusElem1 = BusCreator_1_BusElem1;
	subSignal_1_BusElem2 = BusCreator_1_BusElem2;
	subSignal_1_BusElem3 = BusCreator_1_BusElem3;
	subSignal_1_BusElem4 = BusCreator_1_BusElem4;
	subSignal_1_BusElem5 = BusCreator_1_BusElem5;
	Out1_1 = step_1;
	Out1_2 = step_2;
	Out1_3 = step_3;
	Out1_4 = step_4;
tel

(*
Original block name: BusCreator_nonvirtual_PP/Subsystem1
*)
node  Subsystem1_17_090(
	subBus_1_BusElem1 : real; subBus_1_BusElem2 : real; subBus_1_BusElem3 : int; subBus_1_BusElem4 : int; subBus_1_BusElem5 : int;
	step_1 : bool; step_2 : bool; step_3 : bool; step_4 : bool; __time_step : real;
	__nb_step : int;)
returns(
	nestedBus_1_BusElem1 : real; nestedBus_1_BusElem2 : real; nestedBus_1_BusElem3 : int; nestedBus_1_BusElem4 : int; nestedBus_1_BusElem5 : int;
	nestedBus_1_BusElem6 : bool; nestedBus_1_BusElem7 : bool; nestedBus_1_BusElem8 : bool; nestedBus_1_BusElem9 : bool;);
var 
	Bus_newline_Creator1_1_BusElem1 : real; Bus_newline_Creator1_1_BusElem2 : real; Bus_newline_Creator1_1_BusElem3 : int; Bus_newline_Creator1_1_BusElem4 : int; Bus_newline_Creator1_1_BusElem5 : int;
	Bus_newline_Creator1_1_BusElem6 : bool; Bus_newline_Creator1_1_BusElem7 : bool; Bus_newline_Creator1_1_BusElem8 : bool; Bus_newline_Creator1_1_BusElem9 : bool;
let
	Bus_newline_Creator1_1_BusElem1 = subBus_1_BusElem1;
	Bus_newline_Creator1_1_BusElem2 = subBus_1_BusElem2;
	Bus_newline_Creator1_1_BusElem3 = subBus_1_BusElem3;
	Bus_newline_Creator1_1_BusElem4 = subBus_1_BusElem4;
	Bus_newline_Creator1_1_BusElem5 = subBus_1_BusElem5;
	Bus_newline_Creator1_1_BusElem6 = step_1;
	Bus_newline_Creator1_1_BusElem7 = step_2;
	Bus_newline_Creator1_1_BusElem8 = step_3;
	Bus_newline_Creator1_1_BusElem9 = step_4;
	nestedBus_1_BusElem1 = Bus_newline_Creator1_1_BusElem1;
	nestedBus_1_BusElem2 = Bus_newline_Creator1_1_BusElem2;
	nestedBus_1_BusElem3 = Bus_newline_Creator1_1_BusElem3;
	nestedBus_1_BusElem4 = Bus_newline_Creator1_1_BusElem4;
	nestedBus_1_BusElem5 = Bus_newline_Creator1_1_BusElem5;
	nestedBus_1_BusElem6 = Bus_newline_Creator1_1_BusElem6;
	nestedBus_1_BusElem7 = Bus_newline_Creator1_1_BusElem7;
	nestedBus_1_BusElem8 = Bus_newline_Creator1_1_BusElem8;
	nestedBus_1_BusElem9 = Bus_newline_Creator1_1_BusElem9;
tel

(*
Original block name: BusCreator_nonvirtual_PP
*)
node  BusCreator_nonvirtual_PP(
	In1_1 : real; In1_2 : real; In2_1 : int; In2_2 : int; In2_3 : int;
	In3_1 : bool; In3_2 : bool; In3_3 : bool; In3_4 : bool;)
returns(
	Out1_1 : real; Out1_2 : real; Out2_1 : int; Out2_2 : int; Out2_3 : int;
	Out3_1 : bool; Out3_2 : bool; Out3_3 : bool; Out3_4 : bool;);
var 
	Bus_newline_Selector_1 : real; Bus_newline_Selector_2 : real; Bus_newline_Selector_3 : int; Bus_newline_Selector_4 : int; Bus_newline_Selector_5 : int;
	Bus_newline_Selector_6 : bool; Bus_newline_Selector_7 : bool; Bus_newline_Selector_8 : bool; Bus_newline_Selector_9 : bool; Subsystem_1_BusElem1 : real;
	Subsystem_1_BusElem2 : real; Subsystem_1_BusElem3 : int; Subsystem_1_BusElem4 : int; Subsystem_1_BusElem5 : int; Subsystem_2 : bool;
	Subsystem_3 : bool; Subsystem_4 : bool; Subsystem_5 : bool; Subsystem1_1_BusElem1 : real; Subsystem1_1_BusElem2 : real;
	Subsystem1_1_BusElem3 : int; Subsystem1_1_BusElem4 : int; Subsystem1_1_BusElem5 : int; Subsystem1_1_BusElem6 : bool; Subsystem1_1_BusElem7 : bool;
	Subsystem1_1_BusElem8 : bool; Subsystem1_1_BusElem9 : bool; __time_step : real; __nb_step : int;
let
	assert ((-2147483648 <= In2_1) and (In2_1 <= 2147483647));
	assert ((-2147483648 <= In2_2) and (In2_2 <= 2147483647));
	assert ((-2147483648 <= In2_3) and (In2_3 <= 2147483647));
	Bus_newline_Selector_1 = Subsystem1_1_BusElem1;
	Bus_newline_Selector_2 = Subsystem1_1_BusElem2;
	Bus_newline_Selector_3 = Subsystem1_1_BusElem3;
	Bus_newline_Selector_4 = Subsystem1_1_BusElem4;
	Bus_newline_Selector_5 = Subsystem1_1_BusElem5;
	Bus_newline_Selector_6 = Subsystem1_1_BusElem6;
	Bus_newline_Selector_7 = Subsystem1_1_BusElem7;
	Bus_newline_Selector_8 = Subsystem1_1_BusElem8;
	Bus_newline_Selector_9 = Subsystem1_1_BusElem9;
	(Subsystem_1_BusElem1, Subsystem_1_BusElem2, Subsystem_1_BusElem3, Subsystem_1_BusElem4, Subsystem_1_BusElem5, Subsystem_2, Subsystem_3, Subsystem_4, Subsystem_5) = Subsystem_6_090(In1_1, In1_2, In2_1, In2_2, In2_3, In3_1, In3_2, In3_3, In3_4, __time_step, __nb_step);
	(Subsystem1_1_BusElem1, Subsystem1_1_BusElem2, Subsystem1_1_BusElem3, Subsystem1_1_BusElem4, Subsystem1_1_BusElem5, Subsystem1_1_BusElem6, Subsystem1_1_BusElem7, Subsystem1_1_BusElem8, Subsystem1_1_BusElem9) = Subsystem1_17_090(Subsystem_1_BusElem1, Subsystem_1_BusElem2, Subsystem_1_BusElem3, Subsystem_1_BusElem4, Subsystem_1_BusElem5, Subsystem_2, Subsystem_3, Subsystem_4, Subsystem_5, __time_step, __nb_step);
	Out1_1 = Bus_newline_Selector_1;
	Out1_2 = Bus_newline_Selector_2;
	Out2_1 = Bus_newline_Selector_3;
	Out2_2 = Bus_newline_Selector_4;
	Out2_3 = Bus_newline_Selector_5;
	Out3_1 = Bus_newline_Selector_6;
	Out3_2 = Bus_newline_Selector_7;
	Out3_3 = Bus_newline_Selector_8;
	Out3_4 = Bus_newline_Selector_9;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

