-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 17:45:52
(*
Original block name: Reshape_TestGen16_PP/trigger/T
*)
node  T_181_786_condExecSS(
	In1_1 : real; In1_2 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2) = (merge _isEnabled_clock 
		(true -> T_181_786((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2) when false(_isEnabled_clock)));
tel

(*
Original block name: Reshape_TestGen16_PP/trigger/T
*)
node  T_181_786(
	In1_1 : real; In1_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	P_1 : real; P_2 : real;
let
	P_1 = In1_1;
	P_2 = In1_2;
	Out1_1 = P_1;
	Out1_2 = P_2;
tel

(*
Original block name: Reshape_TestGen16_PP/trigger
*)
node  trigger_177_969(
	T_cond_1 : bool; In1_1 : real; In1_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	ExecutionCond_of_T_181_786 : bool; T_1 : real; T_2 : real;
let
	ExecutionCond_of_T_181_786 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	(T_1, T_2) = T_181_786_condExecSS(In1_1, In1_2, ExecutionCond_of_T_181_786, __time_step, __nb_step);
	Out1_1 = T_1;
	Out1_2 = T_2;
tel

(*
Original block name: Reshape_TestGen16_PP
*)
node  Reshape_TestGen16_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	trigger_1 : real; trigger_2 : real; __time_step : real; __nb_step : int;
let
	(trigger_1, trigger_2) = trigger_177_969(In1_1, In2_1, In2_2, __time_step, __nb_step);
	Out1_1 = trigger_1;
	Out1_2 = trigger_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

