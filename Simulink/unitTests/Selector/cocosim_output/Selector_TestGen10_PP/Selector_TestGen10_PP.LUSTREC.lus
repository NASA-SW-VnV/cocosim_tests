-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 05:15:50
#open <conv>
(*
get a table element
*)
node  P_4_388_getTableElement(
	x : int; In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int;
	In1_5 : int; In1_6 : int;)
returns(
	y : int;);
let
	y = (if (x = 1) then
		In1_1
	    else (if (x = 2) then
		In1_2
	    else (if (x = 3) then
		In1_3
	    else (if (x = 4) then
		In1_4
	    else (if (x = 5) then
		In1_5
	    else In1_6)))));
tel

(*
Original block name: Selector_TestGen10_PP
*)
node  Selector_TestGen10_PP(
	In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int; In1_5 : int;
	In1_6 : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	In2_1 : real; P_4_388_U_index_1 : int; P_4_388_U_index_2 : int; P_4_388_U_index_3 : int; P_4_388_U_index_4 : int;
	P_4_388_U_index_5 : int; P_4_388_U_index_6 : int; P_4_388_ind_dim_1_1 : int; P_4_388_ind_dim_1_2 : int; P_4_388_ind_dim_2_1 : int;
	P_4_388_ind_dim_2_2 : int; P_4_388_ind_dim_2_3 : int; P_4_388_str_Y_index_1_1 : int; P_4_388_str_Y_index_1_2 : int; P_4_388_str_Y_index_2_1 : int;
	P_4_388_str_Y_index_2_2 : int; P_4_388_str_Y_index_3_1 : int; P_4_388_str_Y_index_3_2 : int; P_4_388_str_Y_index_4_1 : int; P_4_388_str_Y_index_4_2 : int;
	P_4_388_str_Y_index_5_1 : int; P_4_388_str_Y_index_5_2 : int; P_4_388_str_Y_index_6_1 : int; P_4_388_str_Y_index_6_2 : int; P_1 : int;
	P_2 : int; P_3 : int; P_4 : int; P_5 : int; P_6 : int;
	__time_step : real; __nb_step : int;
let
	assert ((-32768 <= In1_1) and (In1_1 <= 32767));
	assert ((-32768 <= In1_2) and (In1_2 <= 32767));
	assert ((-32768 <= In1_3) and (In1_3 <= 32767));
	assert ((-32768 <= In1_4) and (In1_4 <= 32767));
	assert ((-32768 <= In1_5) and (In1_5 <= 32767));
	assert ((-32768 <= In1_6) and (In1_6 <= 32767));
	In2_1 = 1.0;
	P_4_388_ind_dim_1_1 = (real_to_int(In2_1) + 0);
	P_4_388_ind_dim_1_2 = ((real_to_int(In2_1) + 0) + 1);
	P_4_388_ind_dim_2_1 = 1;
	P_4_388_ind_dim_2_2 = 2;
	P_4_388_ind_dim_2_3 = 3;
	P_4_388_str_Y_index_1_1 = P_4_388_ind_dim_1_1;
	P_4_388_str_Y_index_1_2 = P_4_388_ind_dim_2_1;
	P_4_388_U_index_1 = ((P_4_388_str_Y_index_1_1 * 1) + ((P_4_388_str_Y_index_1_2 - 1) * 2));
	P_4_388_str_Y_index_2_1 = P_4_388_ind_dim_1_2;
	P_4_388_str_Y_index_2_2 = P_4_388_ind_dim_2_1;
	P_4_388_U_index_2 = ((P_4_388_str_Y_index_2_1 * 1) + ((P_4_388_str_Y_index_2_2 - 1) * 2));
	P_4_388_str_Y_index_3_1 = P_4_388_ind_dim_1_1;
	P_4_388_str_Y_index_3_2 = P_4_388_ind_dim_2_2;
	P_4_388_U_index_3 = ((P_4_388_str_Y_index_3_1 * 1) + ((P_4_388_str_Y_index_3_2 - 1) * 2));
	P_4_388_str_Y_index_4_1 = P_4_388_ind_dim_1_2;
	P_4_388_str_Y_index_4_2 = P_4_388_ind_dim_2_2;
	P_4_388_U_index_4 = ((P_4_388_str_Y_index_4_1 * 1) + ((P_4_388_str_Y_index_4_2 - 1) * 2));
	P_4_388_str_Y_index_5_1 = P_4_388_ind_dim_1_1;
	P_4_388_str_Y_index_5_2 = P_4_388_ind_dim_2_3;
	P_4_388_U_index_5 = ((P_4_388_str_Y_index_5_1 * 1) + ((P_4_388_str_Y_index_5_2 - 1) * 2));
	P_4_388_str_Y_index_6_1 = P_4_388_ind_dim_1_2;
	P_4_388_str_Y_index_6_2 = P_4_388_ind_dim_2_3;
	P_4_388_U_index_6 = ((P_4_388_str_Y_index_6_1 * 1) + ((P_4_388_str_Y_index_6_2 - 1) * 2));
	P_1 = P_4_388_getTableElement(P_4_388_U_index_1, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	P_2 = P_4_388_getTableElement(P_4_388_U_index_2, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	P_3 = P_4_388_getTableElement(P_4_388_U_index_3, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	P_4 = P_4_388_getTableElement(P_4_388_U_index_4, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	P_5 = P_4_388_getTableElement(P_4_388_U_index_5, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	P_6 = P_4_388_getTableElement(P_4_388_U_index_6, In1_1, In1_2, In1_3, In1_4, In1_5, In1_6);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

