-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 10:41:24
node  _AND_Bitwise_Unsigned_8(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (((x mod 2) * (y mod 2)) + (2 * (((x / 2) mod 2) * ((y / 2) mod 2))) + (4 * (((x / 4) mod 2) * ((y / 4) mod 2))) + (8 * (((x / 8) mod 2) * ((y / 8) mod 2))) + (16 * (((x / 16) mod 2) * ((y / 16) mod 2))) + (32 * (((x / 32) mod 2) * ((y / 32) mod 2))) + (64 * (((x / 64) mod 2) * ((y / 64) mod 2))) + (128 * (((x / 128) mod 2) * ((y / 128) mod 2))));
tel

(*
Original block name: BitwiseOperator_TestGen2_PP
*)
node  BitwiseOperator_TestGen2_PP(
	In1_1 : int; In1_2 : int; In1_3 : int;)
returns(
	Out1_1 : int;);
var 
	P_1 : int; __time_step : real; __nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	assert ((0 <= In1_2) and (In1_2 <= 255));
	assert ((0 <= In1_3) and (In1_3 <= 255));
	P_1 = _AND_Bitwise_Unsigned_8(In1_1, _AND_Bitwise_Unsigned_8(In1_2, In1_3));
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

