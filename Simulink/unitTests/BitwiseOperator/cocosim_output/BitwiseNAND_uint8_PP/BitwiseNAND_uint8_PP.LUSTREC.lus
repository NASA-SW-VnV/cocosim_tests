-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:29:12
node  _AND_Bitwise_Unsigned_8(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (((x mod 2) * (y mod 2)) + (2 * (((x / 2) mod 2) * ((y / 2) mod 2))) + (4 * (((x / 4) mod 2) * ((y / 4) mod 2))) + (8 * (((x / 8) mod 2) * ((y / 8) mod 2))) + (16 * (((x / 16) mod 2) * ((y / 16) mod 2))) + (32 * (((x / 32) mod 2) * ((y / 32) mod 2))) + (64 * (((x / 64) mod 2) * ((y / 64) mod 2))) + (128 * (((x / 128) mod 2) * ((y / 128) mod 2))));
tel

node  _NAND_Bitwise_Unsigned_8(
	x : int; y : int;)
returns(
	z : int;);
let
	z = _NOT_Bitwise_Unsigned_8(_AND_Bitwise_Unsigned_8(x, y));
tel

node  _NOT_Bitwise_Unsigned_8(
	x : int;)
returns(
	y : int;);
let
	y = (255 - x);
tel

(*
Original block name: BitwiseNAND_uint8_PP
*)
node  BitwiseNAND_uint8_PP(
	In1_1 : int; In2_1 : int; In3_1 : int; In4_1 : int; In4_2 : int;
	In4_3 : int; In5_1 : int; In5_2 : int; In5_3 : int; In6_1 : int;
	In6_2 : int; In6_3 : int;)
returns(
	Out1_1 : int; Out2_1 : int; Out2_2 : int; Out2_3 : int; Out3_1 : int;
	Out3_2 : int; Out3_3 : int; Out4_1 : int;);
var 
	Bitwise_1 : int; Bitwise1_1 : int; Bitwise1_2 : int; Bitwise1_3 : int; Bitwise2_1 : int;
	Bitwise2_2 : int; Bitwise2_3 : int; Bitwise3_1 : int; __time_step : real; __nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	assert ((0 <= In2_1) and (In2_1 <= 255));
	assert ((0 <= In3_1) and (In3_1 <= 255));
	assert ((0 <= In4_1) and (In4_1 <= 255));
	assert ((0 <= In4_2) and (In4_2 <= 255));
	assert ((0 <= In4_3) and (In4_3 <= 255));
	assert ((0 <= In5_1) and (In5_1 <= 255));
	assert ((0 <= In5_2) and (In5_2 <= 255));
	assert ((0 <= In5_3) and (In5_3 <= 255));
	assert ((0 <= In6_1) and (In6_1 <= 255));
	assert ((0 <= In6_2) and (In6_2 <= 255));
	assert ((0 <= In6_3) and (In6_3 <= 255));
	Bitwise_1 = _NAND_Bitwise_Unsigned_8(In1_1, In2_1);
	Bitwise1_1 = _NAND_Bitwise_Unsigned_8(In3_1, In4_1);
	Bitwise1_2 = _NAND_Bitwise_Unsigned_8(In3_1, In4_2);
	Bitwise1_3 = _NAND_Bitwise_Unsigned_8(In3_1, In4_3);
	Bitwise2_1 = _NAND_Bitwise_Unsigned_8(In5_1, 217);
	Bitwise2_2 = _NAND_Bitwise_Unsigned_8(In5_2, 217);
	Bitwise2_3 = _NAND_Bitwise_Unsigned_8(In5_3, 217);
	Bitwise3_1 = _NOT_Bitwise_Unsigned_8(_AND_Bitwise_Unsigned_8(In6_1, _AND_Bitwise_Unsigned_8(In6_2, In6_3)));
	Out1_1 = Bitwise_1;
	Out2_1 = Bitwise1_1;
	Out2_2 = Bitwise1_2;
	Out2_3 = Bitwise1_3;
	Out3_1 = Bitwise2_1;
	Out3_2 = Bitwise2_2;
	Out3_3 = Bitwise2_3;
	Out4_1 = Bitwise3_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

