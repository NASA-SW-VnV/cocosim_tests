-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 04:47:06
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
external node code for doing PreLookup
*)
node  P_13_305_PreLookup_node(
	x_in : real; xdat_1 : real; xdat_2 : real; xdat_3 : real; xdat_4 : real;
	xdat_5 : real; xdat_6 : real; xdat_7 : real; xdat_8 : real; xdat_9 : real;
	xdat_10 : real; xdat_11 : real; xdat_12 : real; xdat_13 : real; xdat_14 : real;
	xdat_15 : real; xdat_16 : real; xdat_17 : real; xdat_18 : real; xdat_19 : real;
	xdat_20 : real; xdat_21 : real; xdat_22 : real; xdat_23 : real; xdat_24 : real;
	xdat_25 : real; xdat_26 : real;)
returns(
	inline_index_solution : int;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real; Breakpoints_dim1_9 : real;
	Breakpoints_dim1_10 : real; Breakpoints_dim1_11 : real; Breakpoints_dim1_12 : real; Breakpoints_dim1_13 : real; Breakpoints_dim1_14 : real;
	Breakpoints_dim1_15 : real; Breakpoints_dim1_16 : real; Breakpoints_dim1_17 : real; Breakpoints_dim1_18 : real; Breakpoints_dim1_19 : real;
	Breakpoints_dim1_20 : real; Breakpoints_dim1_21 : real; Breakpoints_dim1_22 : real; Breakpoints_dim1_23 : real; Breakpoints_dim1_24 : real;
	Breakpoints_dim1_25 : real; Breakpoints_dim1_26 : real; index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real;
	coords_dim_1_2 : real; direct_solution_inline_index : int; solution_subscript_for_dim_1 : int;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = xdat_1;
	Breakpoints_dim1_2 = xdat_2;
	Breakpoints_dim1_3 = xdat_3;
	Breakpoints_dim1_4 = xdat_4;
	Breakpoints_dim1_5 = xdat_5;
	Breakpoints_dim1_6 = xdat_6;
	Breakpoints_dim1_7 = xdat_7;
	Breakpoints_dim1_8 = xdat_8;
	Breakpoints_dim1_9 = xdat_9;
	Breakpoints_dim1_10 = xdat_10;
	Breakpoints_dim1_11 = xdat_11;
	Breakpoints_dim1_12 = xdat_12;
	Breakpoints_dim1_13 = xdat_13;
	Breakpoints_dim1_14 = xdat_14;
	Breakpoints_dim1_15 = xdat_15;
	Breakpoints_dim1_16 = xdat_16;
	Breakpoints_dim1_17 = xdat_17;
	Breakpoints_dim1_18 = xdat_18;
	Breakpoints_dim1_19 = xdat_19;
	Breakpoints_dim1_20 = xdat_20;
	Breakpoints_dim1_21 = xdat_21;
	Breakpoints_dim1_22 = xdat_22;
	Breakpoints_dim1_23 = xdat_23;
	Breakpoints_dim1_24 = xdat_24;
	Breakpoints_dim1_25 = xdat_25;
	Breakpoints_dim1_26 = xdat_26;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((x_in >= Breakpoints_dim1_26) or abs_real(x_in - Breakpoints_dim1_26) <= 0.000000000000001000000000000000) then
		(25, Breakpoints_dim1_25, 26, Breakpoints_dim1_26)
	    else (if ((x_in >= Breakpoints_dim1_25) or abs_real(x_in - Breakpoints_dim1_25) <= 0.000000000000001000000000000000) then
		(25, Breakpoints_dim1_25, 26, Breakpoints_dim1_26)
	    else (if ((x_in >= Breakpoints_dim1_24) or abs_real(x_in - Breakpoints_dim1_24) <= 0.000000000000001000000000000000) then
		(24, Breakpoints_dim1_24, 25, Breakpoints_dim1_25)
	    else (if ((x_in >= Breakpoints_dim1_23) or abs_real(x_in - Breakpoints_dim1_23) <= 0.000000000000001000000000000000) then
		(23, Breakpoints_dim1_23, 24, Breakpoints_dim1_24)
	    else (if ((x_in >= Breakpoints_dim1_22) or abs_real(x_in - Breakpoints_dim1_22) <= 0.000000000000001000000000000000) then
		(22, Breakpoints_dim1_22, 23, Breakpoints_dim1_23)
	    else (if ((x_in >= Breakpoints_dim1_21) or abs_real(x_in - Breakpoints_dim1_21) <= 0.000000000000001000000000000000) then
		(21, Breakpoints_dim1_21, 22, Breakpoints_dim1_22)
	    else (if ((x_in >= Breakpoints_dim1_20) or abs_real(x_in - Breakpoints_dim1_20) <= 0.000000000000001000000000000000) then
		(20, Breakpoints_dim1_20, 21, Breakpoints_dim1_21)
	    else (if ((x_in >= Breakpoints_dim1_19) or abs_real(x_in - Breakpoints_dim1_19) <= 0.000000000000001000000000000000) then
		(19, Breakpoints_dim1_19, 20, Breakpoints_dim1_20)
	    else (if ((x_in >= Breakpoints_dim1_18) or abs_real(x_in - Breakpoints_dim1_18) <= 0.000000000000001000000000000000) then
		(18, Breakpoints_dim1_18, 19, Breakpoints_dim1_19)
	    else (if ((x_in >= Breakpoints_dim1_17) or abs_real(x_in - Breakpoints_dim1_17) <= 0.000000000000001000000000000000) then
		(17, Breakpoints_dim1_17, 18, Breakpoints_dim1_18)
	    else (if ((x_in >= Breakpoints_dim1_16) or abs_real(x_in - Breakpoints_dim1_16) <= 0.000000000000001000000000000000) then
		(16, Breakpoints_dim1_16, 17, Breakpoints_dim1_17)
	    else (if ((x_in >= Breakpoints_dim1_15) or abs_real(x_in - Breakpoints_dim1_15) <= 0.000000000000001000000000000000) then
		(15, Breakpoints_dim1_15, 16, Breakpoints_dim1_16)
	    else (if ((x_in >= Breakpoints_dim1_14) or abs_real(x_in - Breakpoints_dim1_14) <= 0.000000000000001000000000000000) then
		(14, Breakpoints_dim1_14, 15, Breakpoints_dim1_15)
	    else (if ((x_in >= Breakpoints_dim1_13) or abs_real(x_in - Breakpoints_dim1_13) <= 0.000000000000001000000000000000) then
		(13, Breakpoints_dim1_13, 14, Breakpoints_dim1_14)
	    else (if ((x_in >= Breakpoints_dim1_12) or abs_real(x_in - Breakpoints_dim1_12) <= 0.000000000000001000000000000000) then
		(12, Breakpoints_dim1_12, 13, Breakpoints_dim1_13)
	    else (if ((x_in >= Breakpoints_dim1_11) or abs_real(x_in - Breakpoints_dim1_11) <= 0.000000000000001000000000000000) then
		(11, Breakpoints_dim1_11, 12, Breakpoints_dim1_12)
	    else (if ((x_in >= Breakpoints_dim1_10) or abs_real(x_in - Breakpoints_dim1_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((x_in >= Breakpoints_dim1_9) or abs_real(x_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim1_9, 10, Breakpoints_dim1_10)
	    else (if ((x_in >= Breakpoints_dim1_8) or abs_real(x_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((x_in >= Breakpoints_dim1_7) or abs_real(x_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((x_in >= Breakpoints_dim1_6) or abs_real(x_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((x_in >= Breakpoints_dim1_5) or abs_real(x_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((x_in >= Breakpoints_dim1_4) or abs_real(x_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((x_in >= Breakpoints_dim1_3) or abs_real(x_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((x_in >= Breakpoints_dim1_2) or abs_real(x_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((x_in >= Breakpoints_dim1_1) or abs_real(x_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)))))))))))))))))))))))))));
	solution_subscript_for_dim_1 = (if ((x_in >= coords_dim_1_2) or abs_real(x_in - coords_dim_1_2) <= 0.000000000000001000000000000000) then
		index_dim_1_2
	    else index_dim_1_1);
	direct_solution_inline_index = (solution_subscript_for_dim_1 * dimJump_1);
	inline_index_solution = direct_solution_inline_index;
tel

(*
external node code wrapper for doing PreLookup
*)
node  P_13_305_PreLookup_wrapper_ext_node(
	coord_input : real; In2_1 : real; In2_2 : real; In2_3 : real; In2_4 : real;
	In2_5 : real; In2_6 : real; In2_7 : real; In2_8 : real; In2_9 : real;
	In2_10 : real; In2_11 : real; In2_12 : real; In2_13 : real; In2_14 : real;
	In2_15 : real; In2_16 : real; In2_17 : real; In2_18 : real; In2_19 : real;
	In2_20 : real; In2_21 : real; In2_22 : real; In2_23 : real; In2_24 : real;
	In2_25 : real; In2_26 : real;)
returns(
	P_1 : int;);
var 
	inline_index_bound_node_1 : int;
let
	inline_index_bound_node_1 = P_13_305_PreLookup_node(coord_input, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_1 = (inline_index_bound_node_1 - 1);
tel

(*
Original block name: preLookupTestGen14_PP/trigger/T
*)
node  T_9_389_condExecSS(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	pre_Out1_1 : int; pre_Out1_2 : int; pre_Out1_3 : int; pre_Out1_4 : int; pre_Out1_5 : int;
	pre_Out1_6 : int; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0);
	pre_Out1_4 = (if (__nb_step > 0) then
		(pre (Out1_4))
	    else 0);
	pre_Out1_5 = (if (__nb_step > 0) then
		(pre (Out1_5))
	    else 0);
	pre_Out1_6 = (if (__nb_step > 0) then
		(pre (Out1_6))
	    else 0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3, Out1_4, Out1_5, Out1_6) = (merge _isEnabled_clock 
		(true -> T_9_389((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In1_3 when _isEnabled_clock), (In1_4 when _isEnabled_clock), (In1_5 when _isEnabled_clock), (In1_6 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3, pre_Out1_4, pre_Out1_5, pre_Out1_6) when false(_isEnabled_clock)));
tel

(*
Original block name: preLookupTestGen14_PP/trigger/T
*)
node  T_9_389(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	In2_1 : real; In2_2 : real; In2_3 : real; In2_4 : real; In2_5 : real;
	In2_6 : real; In2_7 : real; In2_8 : real; In2_9 : real; In2_10 : real;
	In2_11 : real; In2_12 : real; In2_13 : real; In2_14 : real; In2_15 : real;
	In2_16 : real; In2_17 : real; In2_18 : real; In2_19 : real; In2_20 : real;
	In2_21 : real; In2_22 : real; In2_23 : real; In2_24 : real; In2_25 : real;
	In2_26 : real; P_1 : int; P_2 : int; P_3 : int; P_4 : int;
	P_5 : int; P_6 : int;
let
	In2_1 = 51.129016780394402;
	In2_2 = 52.629016780394402;
	In2_3 = 54.129016780394402;
	In2_4 = 55.629016780394402;
	In2_5 = 57.129016780394402;
	In2_6 = 58.629016780394402;
	In2_7 = 60.129016780394402;
	In2_8 = 61.629016780394402;
	In2_9 = 63.129016780394402;
	In2_10 = 64.629016780394394;
	In2_11 = 66.129016780394394;
	In2_12 = 67.629016780394394;
	In2_13 = 69.129016780394394;
	In2_14 = 70.629016780394394;
	In2_15 = 72.129016780394394;
	In2_16 = 73.629016780394394;
	In2_17 = 75.129016780394394;
	In2_18 = 76.629016780394394;
	In2_19 = 78.129016780394394;
	In2_20 = 79.629016780394394;
	In2_21 = 81.129016780394394;
	In2_22 = 82.629016780394394;
	In2_23 = 84.129016780394394;
	In2_24 = 85.629016780394394;
	In2_25 = 87.129016780394394;
	In2_26 = 88.629016780394394;
	P_1 = P_13_305_PreLookup_wrapper_ext_node(In1_1, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_2 = P_13_305_PreLookup_wrapper_ext_node(In1_2, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_3 = P_13_305_PreLookup_wrapper_ext_node(In1_3, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_4 = P_13_305_PreLookup_wrapper_ext_node(In1_4, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_5 = P_13_305_PreLookup_wrapper_ext_node(In1_5, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	P_6 = P_13_305_PreLookup_wrapper_ext_node(In1_6, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
tel

(*
Original block name: preLookupTestGen14_PP/trigger
*)
node  trigger_5_412(
	T_cond_1 : bool; In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real;
	In1_5 : real; In1_6 : real; In2_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	ExecutionCond_of_T_9_389 : bool; T_1 : int; T_2 : int; T_3 : int; T_4 : int;
	T_5 : int; T_6 : int;
let
	ExecutionCond_of_T_9_389 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	(T_1, T_2, T_3, T_4, T_5, T_6) = T_9_389_condExecSS(In1_1, In1_2, In1_3, In1_4, In1_5, In1_6, ExecutionCond_of_T_9_389, __time_step, __nb_step);
	Out1_1 = T_1;
	Out1_2 = T_2;
	Out1_3 = T_3;
	Out1_4 = T_4;
	Out1_5 = T_5;
	Out1_6 = T_6;
tel

(*
Original block name: preLookupTestGen14_PP
*)
node  preLookupTestGen14_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real; In2_3 : real; In2_4 : real;
	In2_5 : real; In2_6 : real; In3_1 : real;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	trigger_1 : int; trigger_2 : int; trigger_3 : int; trigger_4 : int; trigger_5 : int;
	trigger_6 : int; __time_step : real; __nb_step : int;
let
	(trigger_1, trigger_2, trigger_3, trigger_4, trigger_5, trigger_6) = trigger_5_412(In1_1, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In3_1, __time_step, __nb_step);
	Out1_1 = trigger_1;
	Out1_2 = trigger_2;
	Out1_3 = trigger_3;
	Out1_4 = trigger_4;
	Out1_5 = trigger_5;
	Out1_6 = trigger_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

