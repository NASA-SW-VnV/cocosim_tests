-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 22:01:25
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
external node code for doing PreLookup
*)
node  P_148_744_PreLookup_node(
	x_in : real; xdat_1 : real; xdat_2 : real; xdat_3 : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; index_dim_1_1 : int;
	index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int;
	N_shape_1 : real; N_shape_2 : real; clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = xdat_1;
	Breakpoints_dim1_2 = xdat_2;
	Breakpoints_dim1_3 = xdat_3;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((x_in >= Breakpoints_dim1_3) or abs_real(x_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((x_in >= Breakpoints_dim1_2) or abs_real(x_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((x_in >= Breakpoints_dim1_1) or abs_real(x_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = (if (x_in < coords_dim_1_1) then
		coords_dim_1_1
	    else (if (x_in > coords_dim_1_2) then
		coords_dim_1_2
	    else x_in));
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code wrapper for doing PreLookup
*)
node  P_148_744_PreLookup_wrapper_ext_node(
	coord_input : real; In2_1 : real; In2_2 : real; In2_3 : real;)
returns(
	P_1 : int; P_2 : real;);
var 
	inline_index_bound_node_1 : int; shape_bound_node_1 : real; inline_index_bound_node_2 : int; shape_bound_node_2 : real;
let
	(inline_index_bound_node_1, shape_bound_node_1, inline_index_bound_node_2, shape_bound_node_2) = P_148_744_PreLookup_node(coord_input, In2_1, In2_2, In2_3);
	P_1 = (inline_index_bound_node_1 - 1);
	P_2 = shape_bound_node_2;
tel

(*
Original block name: preLookupTestGen18_PP
*)
node  preLookupTestGen18_PP(
	In1_1 : real; In1_2 : real; In1_3 : real;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out2_1 : real; Out2_2 : real;
	Out2_3 : real;);
var 
	In2_1 : real; In2_2 : real; In2_3 : real; P_1 : int; P_2 : int;
	P_3 : int; P_4 : real; P_5 : real; P_6 : real; __time_step : real;
	__nb_step : int;
let
	In2_1 = 60.824359239941998;
	In2_2 = 62.324359239941998;
	In2_3 = 63.824359239941998;
	(P_1, P_4) = P_148_744_PreLookup_wrapper_ext_node(In1_1, In2_1, In2_2, In2_3);
	(P_2, P_5) = P_148_744_PreLookup_wrapper_ext_node(In1_2, In2_1, In2_2, In2_3);
	(P_3, P_6) = P_148_744_PreLookup_wrapper_ext_node(In1_3, In2_1, In2_2, In2_3);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out2_1 = P_4;
	Out2_2 = P_5;
	Out2_3 = P_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

