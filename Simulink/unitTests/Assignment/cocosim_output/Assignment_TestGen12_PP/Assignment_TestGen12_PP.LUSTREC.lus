-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 10:12:51
#open <conv>
node  _max_real(
	x : real; y : real;)
returns(
	z : real;);
let
	z = (if (x > y) then
		x
	    else y);
tel

node  _min_real(
	x : real; y : real;)
returns(
	z : real;);
let
	z = (if (x < y) then
		x
	    else y);
tel

(*
Original block name: Assignment_TestGen12_PP/enable/E/port_1
*)
node  port_1_26_356(
	In_1 : real; In_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out_1 : real; Out_2 : real;);
var 
	lower_1 : real; lower_2 : real; lower_limit_1 : real; upper_1 : real; upper_2 : real;
	upper_limit_1 : real;
let
	lower_1 = _max_real(upper_1, lower_limit_1);
	lower_2 = _max_real(upper_2, lower_limit_1);
	lower_limit_1 = 1.0;
	upper_1 = _min_real(upper_limit_1, In_1);
	upper_2 = _min_real(upper_limit_1, In_2);
	upper_limit_1 = 2.0;
	Out_1 = lower_1;
	Out_2 = lower_2;
tel

(*
Original block name: Assignment_TestGen12_PP/enable/E
*)
node  E_16_512_condExecSS(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; In1_7 : real; In1_8 : real; In1_9 : real; In1_10 : real;
	In1_11 : real; In1_12 : real; In1_13 : real; In1_14 : real; In1_15 : real;
	In1_16 : real; In1_17 : real; In1_18 : real; In1_19 : real; In1_20 : real;
	In1_21 : real; In1_22 : real; In1_23 : real; In1_24 : real; In1_25 : real;
	In1_26 : real; In1_27 : real; In2_1 : real; In2_2 : real; In2_3 : real;
	In2_4 : real; In2_5 : real; In2_6 : real; In2_7 : real; In2_8 : real;
	In3_1 : real; In3_2 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real; Out1_13 : real; Out1_14 : real; Out1_15 : real;
	Out1_16 : real; Out1_17 : real; Out1_18 : real; Out1_19 : real; Out1_20 : real;
	Out1_21 : real; Out1_22 : real; Out1_23 : real; Out1_24 : real; Out1_25 : real;
	Out1_26 : real; Out1_27 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; pre_Out1_3 : real; pre_Out1_4 : real; pre_Out1_5 : real;
	pre_Out1_6 : real; pre_Out1_7 : real; pre_Out1_8 : real; pre_Out1_9 : real; pre_Out1_10 : real;
	pre_Out1_11 : real; pre_Out1_12 : real; pre_Out1_13 : real; pre_Out1_14 : real; pre_Out1_15 : real;
	pre_Out1_16 : real; pre_Out1_17 : real; pre_Out1_18 : real; pre_Out1_19 : real; pre_Out1_20 : real;
	pre_Out1_21 : real; pre_Out1_22 : real; pre_Out1_23 : real; pre_Out1_24 : real; pre_Out1_25 : real;
	pre_Out1_26 : real; pre_Out1_27 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0.0);
	pre_Out1_4 = (if (__nb_step > 0) then
		(pre (Out1_4))
	    else 0.0);
	pre_Out1_5 = (if (__nb_step > 0) then
		(pre (Out1_5))
	    else 0.0);
	pre_Out1_6 = (if (__nb_step > 0) then
		(pre (Out1_6))
	    else 0.0);
	pre_Out1_7 = (if (__nb_step > 0) then
		(pre (Out1_7))
	    else 0.0);
	pre_Out1_8 = (if (__nb_step > 0) then
		(pre (Out1_8))
	    else 0.0);
	pre_Out1_9 = (if (__nb_step > 0) then
		(pre (Out1_9))
	    else 0.0);
	pre_Out1_10 = (if (__nb_step > 0) then
		(pre (Out1_10))
	    else 0.0);
	pre_Out1_11 = (if (__nb_step > 0) then
		(pre (Out1_11))
	    else 0.0);
	pre_Out1_12 = (if (__nb_step > 0) then
		(pre (Out1_12))
	    else 0.0);
	pre_Out1_13 = (if (__nb_step > 0) then
		(pre (Out1_13))
	    else 0.0);
	pre_Out1_14 = (if (__nb_step > 0) then
		(pre (Out1_14))
	    else 0.0);
	pre_Out1_15 = (if (__nb_step > 0) then
		(pre (Out1_15))
	    else 0.0);
	pre_Out1_16 = (if (__nb_step > 0) then
		(pre (Out1_16))
	    else 0.0);
	pre_Out1_17 = (if (__nb_step > 0) then
		(pre (Out1_17))
	    else 0.0);
	pre_Out1_18 = (if (__nb_step > 0) then
		(pre (Out1_18))
	    else 0.0);
	pre_Out1_19 = (if (__nb_step > 0) then
		(pre (Out1_19))
	    else 0.0);
	pre_Out1_20 = (if (__nb_step > 0) then
		(pre (Out1_20))
	    else 0.0);
	pre_Out1_21 = (if (__nb_step > 0) then
		(pre (Out1_21))
	    else 0.0);
	pre_Out1_22 = (if (__nb_step > 0) then
		(pre (Out1_22))
	    else 0.0);
	pre_Out1_23 = (if (__nb_step > 0) then
		(pre (Out1_23))
	    else 0.0);
	pre_Out1_24 = (if (__nb_step > 0) then
		(pre (Out1_24))
	    else 0.0);
	pre_Out1_25 = (if (__nb_step > 0) then
		(pre (Out1_25))
	    else 0.0);
	pre_Out1_26 = (if (__nb_step > 0) then
		(pre (Out1_26))
	    else 0.0);
	pre_Out1_27 = (if (__nb_step > 0) then
		(pre (Out1_27))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3, Out1_4, Out1_5, Out1_6, Out1_7, Out1_8, Out1_9, Out1_10, Out1_11, Out1_12, Out1_13, Out1_14, Out1_15, Out1_16, Out1_17, Out1_18, Out1_19, Out1_20, Out1_21, Out1_22, Out1_23, Out1_24, Out1_25, Out1_26, Out1_27) = (merge _isEnabled_clock 
		(true -> E_16_512((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In1_3 when _isEnabled_clock), (In1_4 when _isEnabled_clock), (In1_5 when _isEnabled_clock), (In1_6 when _isEnabled_clock), (In1_7 when _isEnabled_clock), (In1_8 when _isEnabled_clock), (In1_9 when _isEnabled_clock), (In1_10 when _isEnabled_clock), (In1_11 when _isEnabled_clock), (In1_12 when _isEnabled_clock), (In1_13 when _isEnabled_clock), (In1_14 when _isEnabled_clock), (In1_15 when _isEnabled_clock), (In1_16 when _isEnabled_clock), (In1_17 when _isEnabled_clock), (In1_18 when _isEnabled_clock), (In1_19 when _isEnabled_clock), (In1_20 when _isEnabled_clock), (In1_21 when _isEnabled_clock), (In1_22 when _isEnabled_clock), (In1_23 when _isEnabled_clock), (In1_24 when _isEnabled_clock), (In1_25 when _isEnabled_clock), (In1_26 when _isEnabled_clock), (In1_27 when _isEnabled_clock), (In2_1 when _isEnabled_clock), (In2_2 when _isEnabled_clock), (In2_3 when _isEnabled_clock), (In2_4 when _isEnabled_clock), (In2_5 when _isEnabled_clock), (In2_6 when _isEnabled_clock), (In2_7 when _isEnabled_clock), (In2_8 when _isEnabled_clock), (In3_1 when _isEnabled_clock), (In3_2 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3, pre_Out1_4, pre_Out1_5, pre_Out1_6, pre_Out1_7, pre_Out1_8, pre_Out1_9, pre_Out1_10, pre_Out1_11, pre_Out1_12, pre_Out1_13, pre_Out1_14, pre_Out1_15, pre_Out1_16, pre_Out1_17, pre_Out1_18, pre_Out1_19, pre_Out1_20, pre_Out1_21, pre_Out1_22, pre_Out1_23, pre_Out1_24, pre_Out1_25, pre_Out1_26, pre_Out1_27) when false(_isEnabled_clock)));
tel

(*
Original block name: Assignment_TestGen12_PP/enable/E
*)
node  E_16_512(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; In1_7 : real; In1_8 : real; In1_9 : real; In1_10 : real;
	In1_11 : real; In1_12 : real; In1_13 : real; In1_14 : real; In1_15 : real;
	In1_16 : real; In1_17 : real; In1_18 : real; In1_19 : real; In1_20 : real;
	In1_21 : real; In1_22 : real; In1_23 : real; In1_24 : real; In1_25 : real;
	In1_26 : real; In1_27 : real; In2_1 : real; In2_2 : real; In2_3 : real;
	In2_4 : real; In2_5 : real; In2_6 : real; In2_7 : real; In2_8 : real;
	In3_1 : real; In3_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real; Out1_13 : real; Out1_14 : real; Out1_15 : real;
	Out1_16 : real; Out1_17 : real; Out1_18 : real; Out1_19 : real; Out1_20 : real;
	Out1_21 : real; Out1_22 : real; Out1_23 : real; Out1_24 : real; Out1_25 : real;
	Out1_26 : real; Out1_27 : real;);
var 
	P_25_036_U_index_1 : int; P_25_036_U_index_2 : int; P_25_036_U_index_3 : int; P_25_036_U_index_4 : int; P_25_036_U_index_5 : int;
	P_25_036_U_index_6 : int; P_25_036_U_index_7 : int; P_25_036_U_index_8 : int; P_25_036_ind_dim_1_1 : int; P_25_036_ind_dim_1_2 : int;
	P_25_036_ind_dim_2_1 : int; P_25_036_ind_dim_2_2 : int; P_25_036_ind_dim_3_1 : int; P_25_036_ind_dim_3_2 : int; P_25_036_str_Y_index_1_1 : int;
	P_25_036_str_Y_index_1_2 : int; P_25_036_str_Y_index_1_3 : int; P_25_036_str_Y_index_2_1 : int; P_25_036_str_Y_index_2_2 : int; P_25_036_str_Y_index_2_3 : int;
	P_25_036_str_Y_index_3_1 : int; P_25_036_str_Y_index_3_2 : int; P_25_036_str_Y_index_3_3 : int; P_25_036_str_Y_index_4_1 : int; P_25_036_str_Y_index_4_2 : int;
	P_25_036_str_Y_index_4_3 : int; P_25_036_str_Y_index_5_1 : int; P_25_036_str_Y_index_5_2 : int; P_25_036_str_Y_index_5_3 : int; P_25_036_str_Y_index_6_1 : int;
	P_25_036_str_Y_index_6_2 : int; P_25_036_str_Y_index_6_3 : int; P_25_036_str_Y_index_7_1 : int; P_25_036_str_Y_index_7_2 : int; P_25_036_str_Y_index_7_3 : int;
	P_25_036_str_Y_index_8_1 : int; P_25_036_str_Y_index_8_2 : int; P_25_036_str_Y_index_8_3 : int; P_1 : real; P_2 : real;
	P_3 : real; P_4 : real; P_5 : real; P_6 : real; P_7 : real;
	P_8 : real; P_9 : real; P_10 : real; P_11 : real; P_12 : real;
	P_13 : real; P_14 : real; P_15 : real; P_16 : real; P_17 : real;
	P_18 : real; P_19 : real; P_20 : real; P_21 : real; P_22 : real;
	P_23 : real; P_24 : real; P_25 : real; P_26 : real; P_27 : real;
	port_1_1 : real; port_1_2 : real;
let
	assert (((1.0 <= In3_1) and (In3_1 <= 2.0)) and ((1.0 <= In3_2) and (In3_2 <= 2.0)));
	P_25_036_ind_dim_1_1 = 1;
	P_25_036_ind_dim_1_2 = 2;
	P_25_036_ind_dim_2_1 = real_to_int(port_1_1);
	P_25_036_ind_dim_2_2 = real_to_int(port_1_2);
	P_25_036_ind_dim_3_1 = 1;
	P_25_036_ind_dim_3_2 = 2;
	P_25_036_str_Y_index_1_1 = P_25_036_ind_dim_1_1;
	P_25_036_str_Y_index_1_2 = P_25_036_ind_dim_2_1;
	P_25_036_str_Y_index_1_3 = P_25_036_ind_dim_3_1;
	P_25_036_U_index_1 = ((P_25_036_str_Y_index_1_1 * 1) + ((P_25_036_str_Y_index_1_2 - 1) * 3) + ((P_25_036_str_Y_index_1_3 - 1) * 9));
	P_25_036_str_Y_index_2_1 = P_25_036_ind_dim_1_2;
	P_25_036_str_Y_index_2_2 = P_25_036_ind_dim_2_1;
	P_25_036_str_Y_index_2_3 = P_25_036_ind_dim_3_1;
	P_25_036_U_index_2 = ((P_25_036_str_Y_index_2_1 * 1) + ((P_25_036_str_Y_index_2_2 - 1) * 3) + ((P_25_036_str_Y_index_2_3 - 1) * 9));
	P_25_036_str_Y_index_3_1 = P_25_036_ind_dim_1_1;
	P_25_036_str_Y_index_3_2 = P_25_036_ind_dim_2_2;
	P_25_036_str_Y_index_3_3 = P_25_036_ind_dim_3_1;
	P_25_036_U_index_3 = ((P_25_036_str_Y_index_3_1 * 1) + ((P_25_036_str_Y_index_3_2 - 1) * 3) + ((P_25_036_str_Y_index_3_3 - 1) * 9));
	P_25_036_str_Y_index_4_1 = P_25_036_ind_dim_1_2;
	P_25_036_str_Y_index_4_2 = P_25_036_ind_dim_2_2;
	P_25_036_str_Y_index_4_3 = P_25_036_ind_dim_3_1;
	P_25_036_U_index_4 = ((P_25_036_str_Y_index_4_1 * 1) + ((P_25_036_str_Y_index_4_2 - 1) * 3) + ((P_25_036_str_Y_index_4_3 - 1) * 9));
	P_25_036_str_Y_index_5_1 = P_25_036_ind_dim_1_1;
	P_25_036_str_Y_index_5_2 = P_25_036_ind_dim_2_1;
	P_25_036_str_Y_index_5_3 = P_25_036_ind_dim_3_2;
	P_25_036_U_index_5 = ((P_25_036_str_Y_index_5_1 * 1) + ((P_25_036_str_Y_index_5_2 - 1) * 3) + ((P_25_036_str_Y_index_5_3 - 1) * 9));
	P_25_036_str_Y_index_6_1 = P_25_036_ind_dim_1_2;
	P_25_036_str_Y_index_6_2 = P_25_036_ind_dim_2_1;
	P_25_036_str_Y_index_6_3 = P_25_036_ind_dim_3_2;
	P_25_036_U_index_6 = ((P_25_036_str_Y_index_6_1 * 1) + ((P_25_036_str_Y_index_6_2 - 1) * 3) + ((P_25_036_str_Y_index_6_3 - 1) * 9));
	P_25_036_str_Y_index_7_1 = P_25_036_ind_dim_1_1;
	P_25_036_str_Y_index_7_2 = P_25_036_ind_dim_2_2;
	P_25_036_str_Y_index_7_3 = P_25_036_ind_dim_3_2;
	P_25_036_U_index_7 = ((P_25_036_str_Y_index_7_1 * 1) + ((P_25_036_str_Y_index_7_2 - 1) * 3) + ((P_25_036_str_Y_index_7_3 - 1) * 9));
	P_25_036_str_Y_index_8_1 = P_25_036_ind_dim_1_2;
	P_25_036_str_Y_index_8_2 = P_25_036_ind_dim_2_2;
	P_25_036_str_Y_index_8_3 = P_25_036_ind_dim_3_2;
	P_25_036_U_index_8 = ((P_25_036_str_Y_index_8_1 * 1) + ((P_25_036_str_Y_index_8_2 - 1) * 3) + ((P_25_036_str_Y_index_8_3 - 1) * 9));
	P_1 = (if (P_25_036_U_index_8 = 1) then
		In2_8
	    else (if (P_25_036_U_index_7 = 1) then
		In2_7
	    else (if (P_25_036_U_index_6 = 1) then
		In2_6
	    else (if (P_25_036_U_index_5 = 1) then
		In2_5
	    else (if (P_25_036_U_index_4 = 1) then
		In2_4
	    else (if (P_25_036_U_index_3 = 1) then
		In2_3
	    else (if (P_25_036_U_index_2 = 1) then
		In2_2
	    else (if (P_25_036_U_index_1 = 1) then
		In2_1
	    else In1_1))))))));
	P_2 = (if (P_25_036_U_index_8 = 2) then
		In2_8
	    else (if (P_25_036_U_index_7 = 2) then
		In2_7
	    else (if (P_25_036_U_index_6 = 2) then
		In2_6
	    else (if (P_25_036_U_index_5 = 2) then
		In2_5
	    else (if (P_25_036_U_index_4 = 2) then
		In2_4
	    else (if (P_25_036_U_index_3 = 2) then
		In2_3
	    else (if (P_25_036_U_index_2 = 2) then
		In2_2
	    else (if (P_25_036_U_index_1 = 2) then
		In2_1
	    else In1_2))))))));
	P_3 = (if (P_25_036_U_index_8 = 3) then
		In2_8
	    else (if (P_25_036_U_index_7 = 3) then
		In2_7
	    else (if (P_25_036_U_index_6 = 3) then
		In2_6
	    else (if (P_25_036_U_index_5 = 3) then
		In2_5
	    else (if (P_25_036_U_index_4 = 3) then
		In2_4
	    else (if (P_25_036_U_index_3 = 3) then
		In2_3
	    else (if (P_25_036_U_index_2 = 3) then
		In2_2
	    else (if (P_25_036_U_index_1 = 3) then
		In2_1
	    else In1_3))))))));
	P_4 = (if (P_25_036_U_index_8 = 4) then
		In2_8
	    else (if (P_25_036_U_index_7 = 4) then
		In2_7
	    else (if (P_25_036_U_index_6 = 4) then
		In2_6
	    else (if (P_25_036_U_index_5 = 4) then
		In2_5
	    else (if (P_25_036_U_index_4 = 4) then
		In2_4
	    else (if (P_25_036_U_index_3 = 4) then
		In2_3
	    else (if (P_25_036_U_index_2 = 4) then
		In2_2
	    else (if (P_25_036_U_index_1 = 4) then
		In2_1
	    else In1_4))))))));
	P_5 = (if (P_25_036_U_index_8 = 5) then
		In2_8
	    else (if (P_25_036_U_index_7 = 5) then
		In2_7
	    else (if (P_25_036_U_index_6 = 5) then
		In2_6
	    else (if (P_25_036_U_index_5 = 5) then
		In2_5
	    else (if (P_25_036_U_index_4 = 5) then
		In2_4
	    else (if (P_25_036_U_index_3 = 5) then
		In2_3
	    else (if (P_25_036_U_index_2 = 5) then
		In2_2
	    else (if (P_25_036_U_index_1 = 5) then
		In2_1
	    else In1_5))))))));
	P_6 = (if (P_25_036_U_index_8 = 6) then
		In2_8
	    else (if (P_25_036_U_index_7 = 6) then
		In2_7
	    else (if (P_25_036_U_index_6 = 6) then
		In2_6
	    else (if (P_25_036_U_index_5 = 6) then
		In2_5
	    else (if (P_25_036_U_index_4 = 6) then
		In2_4
	    else (if (P_25_036_U_index_3 = 6) then
		In2_3
	    else (if (P_25_036_U_index_2 = 6) then
		In2_2
	    else (if (P_25_036_U_index_1 = 6) then
		In2_1
	    else In1_6))))))));
	P_7 = (if (P_25_036_U_index_8 = 7) then
		In2_8
	    else (if (P_25_036_U_index_7 = 7) then
		In2_7
	    else (if (P_25_036_U_index_6 = 7) then
		In2_6
	    else (if (P_25_036_U_index_5 = 7) then
		In2_5
	    else (if (P_25_036_U_index_4 = 7) then
		In2_4
	    else (if (P_25_036_U_index_3 = 7) then
		In2_3
	    else (if (P_25_036_U_index_2 = 7) then
		In2_2
	    else (if (P_25_036_U_index_1 = 7) then
		In2_1
	    else In1_7))))))));
	P_8 = (if (P_25_036_U_index_8 = 8) then
		In2_8
	    else (if (P_25_036_U_index_7 = 8) then
		In2_7
	    else (if (P_25_036_U_index_6 = 8) then
		In2_6
	    else (if (P_25_036_U_index_5 = 8) then
		In2_5
	    else (if (P_25_036_U_index_4 = 8) then
		In2_4
	    else (if (P_25_036_U_index_3 = 8) then
		In2_3
	    else (if (P_25_036_U_index_2 = 8) then
		In2_2
	    else (if (P_25_036_U_index_1 = 8) then
		In2_1
	    else In1_8))))))));
	P_9 = (if (P_25_036_U_index_8 = 9) then
		In2_8
	    else (if (P_25_036_U_index_7 = 9) then
		In2_7
	    else (if (P_25_036_U_index_6 = 9) then
		In2_6
	    else (if (P_25_036_U_index_5 = 9) then
		In2_5
	    else (if (P_25_036_U_index_4 = 9) then
		In2_4
	    else (if (P_25_036_U_index_3 = 9) then
		In2_3
	    else (if (P_25_036_U_index_2 = 9) then
		In2_2
	    else (if (P_25_036_U_index_1 = 9) then
		In2_1
	    else In1_9))))))));
	P_10 = (if (P_25_036_U_index_8 = 10) then
		In2_8
	    else (if (P_25_036_U_index_7 = 10) then
		In2_7
	    else (if (P_25_036_U_index_6 = 10) then
		In2_6
	    else (if (P_25_036_U_index_5 = 10) then
		In2_5
	    else (if (P_25_036_U_index_4 = 10) then
		In2_4
	    else (if (P_25_036_U_index_3 = 10) then
		In2_3
	    else (if (P_25_036_U_index_2 = 10) then
		In2_2
	    else (if (P_25_036_U_index_1 = 10) then
		In2_1
	    else In1_10))))))));
	P_11 = (if (P_25_036_U_index_8 = 11) then
		In2_8
	    else (if (P_25_036_U_index_7 = 11) then
		In2_7
	    else (if (P_25_036_U_index_6 = 11) then
		In2_6
	    else (if (P_25_036_U_index_5 = 11) then
		In2_5
	    else (if (P_25_036_U_index_4 = 11) then
		In2_4
	    else (if (P_25_036_U_index_3 = 11) then
		In2_3
	    else (if (P_25_036_U_index_2 = 11) then
		In2_2
	    else (if (P_25_036_U_index_1 = 11) then
		In2_1
	    else In1_11))))))));
	P_12 = (if (P_25_036_U_index_8 = 12) then
		In2_8
	    else (if (P_25_036_U_index_7 = 12) then
		In2_7
	    else (if (P_25_036_U_index_6 = 12) then
		In2_6
	    else (if (P_25_036_U_index_5 = 12) then
		In2_5
	    else (if (P_25_036_U_index_4 = 12) then
		In2_4
	    else (if (P_25_036_U_index_3 = 12) then
		In2_3
	    else (if (P_25_036_U_index_2 = 12) then
		In2_2
	    else (if (P_25_036_U_index_1 = 12) then
		In2_1
	    else In1_12))))))));
	P_13 = (if (P_25_036_U_index_8 = 13) then
		In2_8
	    else (if (P_25_036_U_index_7 = 13) then
		In2_7
	    else (if (P_25_036_U_index_6 = 13) then
		In2_6
	    else (if (P_25_036_U_index_5 = 13) then
		In2_5
	    else (if (P_25_036_U_index_4 = 13) then
		In2_4
	    else (if (P_25_036_U_index_3 = 13) then
		In2_3
	    else (if (P_25_036_U_index_2 = 13) then
		In2_2
	    else (if (P_25_036_U_index_1 = 13) then
		In2_1
	    else In1_13))))))));
	P_14 = (if (P_25_036_U_index_8 = 14) then
		In2_8
	    else (if (P_25_036_U_index_7 = 14) then
		In2_7
	    else (if (P_25_036_U_index_6 = 14) then
		In2_6
	    else (if (P_25_036_U_index_5 = 14) then
		In2_5
	    else (if (P_25_036_U_index_4 = 14) then
		In2_4
	    else (if (P_25_036_U_index_3 = 14) then
		In2_3
	    else (if (P_25_036_U_index_2 = 14) then
		In2_2
	    else (if (P_25_036_U_index_1 = 14) then
		In2_1
	    else In1_14))))))));
	P_15 = (if (P_25_036_U_index_8 = 15) then
		In2_8
	    else (if (P_25_036_U_index_7 = 15) then
		In2_7
	    else (if (P_25_036_U_index_6 = 15) then
		In2_6
	    else (if (P_25_036_U_index_5 = 15) then
		In2_5
	    else (if (P_25_036_U_index_4 = 15) then
		In2_4
	    else (if (P_25_036_U_index_3 = 15) then
		In2_3
	    else (if (P_25_036_U_index_2 = 15) then
		In2_2
	    else (if (P_25_036_U_index_1 = 15) then
		In2_1
	    else In1_15))))))));
	P_16 = (if (P_25_036_U_index_8 = 16) then
		In2_8
	    else (if (P_25_036_U_index_7 = 16) then
		In2_7
	    else (if (P_25_036_U_index_6 = 16) then
		In2_6
	    else (if (P_25_036_U_index_5 = 16) then
		In2_5
	    else (if (P_25_036_U_index_4 = 16) then
		In2_4
	    else (if (P_25_036_U_index_3 = 16) then
		In2_3
	    else (if (P_25_036_U_index_2 = 16) then
		In2_2
	    else (if (P_25_036_U_index_1 = 16) then
		In2_1
	    else In1_16))))))));
	P_17 = (if (P_25_036_U_index_8 = 17) then
		In2_8
	    else (if (P_25_036_U_index_7 = 17) then
		In2_7
	    else (if (P_25_036_U_index_6 = 17) then
		In2_6
	    else (if (P_25_036_U_index_5 = 17) then
		In2_5
	    else (if (P_25_036_U_index_4 = 17) then
		In2_4
	    else (if (P_25_036_U_index_3 = 17) then
		In2_3
	    else (if (P_25_036_U_index_2 = 17) then
		In2_2
	    else (if (P_25_036_U_index_1 = 17) then
		In2_1
	    else In1_17))))))));
	P_18 = (if (P_25_036_U_index_8 = 18) then
		In2_8
	    else (if (P_25_036_U_index_7 = 18) then
		In2_7
	    else (if (P_25_036_U_index_6 = 18) then
		In2_6
	    else (if (P_25_036_U_index_5 = 18) then
		In2_5
	    else (if (P_25_036_U_index_4 = 18) then
		In2_4
	    else (if (P_25_036_U_index_3 = 18) then
		In2_3
	    else (if (P_25_036_U_index_2 = 18) then
		In2_2
	    else (if (P_25_036_U_index_1 = 18) then
		In2_1
	    else In1_18))))))));
	P_19 = (if (P_25_036_U_index_8 = 19) then
		In2_8
	    else (if (P_25_036_U_index_7 = 19) then
		In2_7
	    else (if (P_25_036_U_index_6 = 19) then
		In2_6
	    else (if (P_25_036_U_index_5 = 19) then
		In2_5
	    else (if (P_25_036_U_index_4 = 19) then
		In2_4
	    else (if (P_25_036_U_index_3 = 19) then
		In2_3
	    else (if (P_25_036_U_index_2 = 19) then
		In2_2
	    else (if (P_25_036_U_index_1 = 19) then
		In2_1
	    else In1_19))))))));
	P_20 = (if (P_25_036_U_index_8 = 20) then
		In2_8
	    else (if (P_25_036_U_index_7 = 20) then
		In2_7
	    else (if (P_25_036_U_index_6 = 20) then
		In2_6
	    else (if (P_25_036_U_index_5 = 20) then
		In2_5
	    else (if (P_25_036_U_index_4 = 20) then
		In2_4
	    else (if (P_25_036_U_index_3 = 20) then
		In2_3
	    else (if (P_25_036_U_index_2 = 20) then
		In2_2
	    else (if (P_25_036_U_index_1 = 20) then
		In2_1
	    else In1_20))))))));
	P_21 = (if (P_25_036_U_index_8 = 21) then
		In2_8
	    else (if (P_25_036_U_index_7 = 21) then
		In2_7
	    else (if (P_25_036_U_index_6 = 21) then
		In2_6
	    else (if (P_25_036_U_index_5 = 21) then
		In2_5
	    else (if (P_25_036_U_index_4 = 21) then
		In2_4
	    else (if (P_25_036_U_index_3 = 21) then
		In2_3
	    else (if (P_25_036_U_index_2 = 21) then
		In2_2
	    else (if (P_25_036_U_index_1 = 21) then
		In2_1
	    else In1_21))))))));
	P_22 = (if (P_25_036_U_index_8 = 22) then
		In2_8
	    else (if (P_25_036_U_index_7 = 22) then
		In2_7
	    else (if (P_25_036_U_index_6 = 22) then
		In2_6
	    else (if (P_25_036_U_index_5 = 22) then
		In2_5
	    else (if (P_25_036_U_index_4 = 22) then
		In2_4
	    else (if (P_25_036_U_index_3 = 22) then
		In2_3
	    else (if (P_25_036_U_index_2 = 22) then
		In2_2
	    else (if (P_25_036_U_index_1 = 22) then
		In2_1
	    else In1_22))))))));
	P_23 = (if (P_25_036_U_index_8 = 23) then
		In2_8
	    else (if (P_25_036_U_index_7 = 23) then
		In2_7
	    else (if (P_25_036_U_index_6 = 23) then
		In2_6
	    else (if (P_25_036_U_index_5 = 23) then
		In2_5
	    else (if (P_25_036_U_index_4 = 23) then
		In2_4
	    else (if (P_25_036_U_index_3 = 23) then
		In2_3
	    else (if (P_25_036_U_index_2 = 23) then
		In2_2
	    else (if (P_25_036_U_index_1 = 23) then
		In2_1
	    else In1_23))))))));
	P_24 = (if (P_25_036_U_index_8 = 24) then
		In2_8
	    else (if (P_25_036_U_index_7 = 24) then
		In2_7
	    else (if (P_25_036_U_index_6 = 24) then
		In2_6
	    else (if (P_25_036_U_index_5 = 24) then
		In2_5
	    else (if (P_25_036_U_index_4 = 24) then
		In2_4
	    else (if (P_25_036_U_index_3 = 24) then
		In2_3
	    else (if (P_25_036_U_index_2 = 24) then
		In2_2
	    else (if (P_25_036_U_index_1 = 24) then
		In2_1
	    else In1_24))))))));
	P_25 = (if (P_25_036_U_index_8 = 25) then
		In2_8
	    else (if (P_25_036_U_index_7 = 25) then
		In2_7
	    else (if (P_25_036_U_index_6 = 25) then
		In2_6
	    else (if (P_25_036_U_index_5 = 25) then
		In2_5
	    else (if (P_25_036_U_index_4 = 25) then
		In2_4
	    else (if (P_25_036_U_index_3 = 25) then
		In2_3
	    else (if (P_25_036_U_index_2 = 25) then
		In2_2
	    else (if (P_25_036_U_index_1 = 25) then
		In2_1
	    else In1_25))))))));
	P_26 = (if (P_25_036_U_index_8 = 26) then
		In2_8
	    else (if (P_25_036_U_index_7 = 26) then
		In2_7
	    else (if (P_25_036_U_index_6 = 26) then
		In2_6
	    else (if (P_25_036_U_index_5 = 26) then
		In2_5
	    else (if (P_25_036_U_index_4 = 26) then
		In2_4
	    else (if (P_25_036_U_index_3 = 26) then
		In2_3
	    else (if (P_25_036_U_index_2 = 26) then
		In2_2
	    else (if (P_25_036_U_index_1 = 26) then
		In2_1
	    else In1_26))))))));
	P_27 = (if (P_25_036_U_index_8 = 27) then
		In2_8
	    else (if (P_25_036_U_index_7 = 27) then
		In2_7
	    else (if (P_25_036_U_index_6 = 27) then
		In2_6
	    else (if (P_25_036_U_index_5 = 27) then
		In2_5
	    else (if (P_25_036_U_index_4 = 27) then
		In2_4
	    else (if (P_25_036_U_index_3 = 27) then
		In2_3
	    else (if (P_25_036_U_index_2 = 27) then
		In2_2
	    else (if (P_25_036_U_index_1 = 27) then
		In2_1
	    else In1_27))))))));
	(port_1_1, port_1_2) = port_1_26_356(In3_1, In3_2, __time_step, __nb_step);
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	Out1_7 = P_7;
	Out1_8 = P_8;
	Out1_9 = P_9;
	Out1_10 = P_10;
	Out1_11 = P_11;
	Out1_12 = P_12;
	Out1_13 = P_13;
	Out1_14 = P_14;
	Out1_15 = P_15;
	Out1_16 = P_16;
	Out1_17 = P_17;
	Out1_18 = P_18;
	Out1_19 = P_19;
	Out1_20 = P_20;
	Out1_21 = P_21;
	Out1_22 = P_22;
	Out1_23 = P_23;
	Out1_24 = P_24;
	Out1_25 = P_25;
	Out1_26 = P_26;
	Out1_27 = P_27;
tel

(*
Original block name: Assignment_TestGen12_PP/enable
*)
node  enable_10_045(
	In1_1 : bool; In2_1 : real; In2_2 : real; In2_3 : real; In2_4 : real;
	In2_5 : real; In2_6 : real; In2_7 : real; In2_8 : real; In2_9 : real;
	In2_10 : real; In2_11 : real; In2_12 : real; In2_13 : real; In2_14 : real;
	In2_15 : real; In2_16 : real; In2_17 : real; In2_18 : real; In2_19 : real;
	In2_20 : real; In2_21 : real; In2_22 : real; In2_23 : real; In2_24 : real;
	In2_25 : real; In2_26 : real; In2_27 : real; In3_1 : real; In3_2 : real;
	In3_3 : real; In3_4 : real; In3_5 : real; In3_6 : real; In3_7 : real;
	In3_8 : real; In4_1 : real; In4_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real; Out1_13 : real; Out1_14 : real; Out1_15 : real;
	Out1_16 : real; Out1_17 : real; Out1_18 : real; Out1_19 : real; Out1_20 : real;
	Out1_21 : real; Out1_22 : real; Out1_23 : real; Out1_24 : real; Out1_25 : real;
	Out1_26 : real; Out1_27 : real;);
var 
	ExecutionCond_of_E_16_512 : bool; E_1 : real; E_2 : real; E_3 : real; E_4 : real;
	E_5 : real; E_6 : real; E_7 : real; E_8 : real; E_9 : real;
	E_10 : real; E_11 : real; E_12 : real; E_13 : real; E_14 : real;
	E_15 : real; E_16 : real; E_17 : real; E_18 : real; E_19 : real;
	E_20 : real; E_21 : real; E_22 : real; E_23 : real; E_24 : real;
	E_25 : real; E_26 : real; E_27 : real;
let
	ExecutionCond_of_E_16_512 = In1_1;
	(E_1, E_2, E_3, E_4, E_5, E_6, E_7, E_8, E_9, E_10, E_11, E_12, E_13, E_14, E_15, E_16, E_17, E_18, E_19, E_20, E_21, E_22, E_23, E_24, E_25, E_26, E_27) = E_16_512_condExecSS(In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26, In2_27, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6, In3_7, In3_8, In4_1, In4_2, ExecutionCond_of_E_16_512, __time_step, __nb_step);
	Out1_1 = E_1;
	Out1_2 = E_2;
	Out1_3 = E_3;
	Out1_4 = E_4;
	Out1_5 = E_5;
	Out1_6 = E_6;
	Out1_7 = E_7;
	Out1_8 = E_8;
	Out1_9 = E_9;
	Out1_10 = E_10;
	Out1_11 = E_11;
	Out1_12 = E_12;
	Out1_13 = E_13;
	Out1_14 = E_14;
	Out1_15 = E_15;
	Out1_16 = E_16;
	Out1_17 = E_17;
	Out1_18 = E_18;
	Out1_19 = E_19;
	Out1_20 = E_20;
	Out1_21 = E_21;
	Out1_22 = E_22;
	Out1_23 = E_23;
	Out1_24 = E_24;
	Out1_25 = E_25;
	Out1_26 = E_26;
	Out1_27 = E_27;
tel

(*
Original block name: Assignment_TestGen12_PP
*)
node  Assignment_TestGen12_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real; In2_3 : real; In2_4 : real;
	In2_5 : real; In2_6 : real; In2_7 : real; In2_8 : real; In2_9 : real;
	In2_10 : real; In2_11 : real; In2_12 : real; In2_13 : real; In2_14 : real;
	In2_15 : real; In2_16 : real; In2_17 : real; In2_18 : real; In2_19 : real;
	In2_20 : real; In2_21 : real; In2_22 : real; In2_23 : real; In2_24 : real;
	In2_25 : real; In2_26 : real; In2_27 : real; In3_1 : real; In3_2 : real;
	In3_3 : real; In3_4 : real; In3_5 : real; In3_6 : real; In3_7 : real;
	In3_8 : real; In4_1 : real; In4_2 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real; Out1_13 : real; Out1_14 : real; Out1_15 : real;
	Out1_16 : real; Out1_17 : real; Out1_18 : real; Out1_19 : real; Out1_20 : real;
	Out1_21 : real; Out1_22 : real; Out1_23 : real; Out1_24 : real; Out1_25 : real;
	Out1_26 : real; Out1_27 : real;);
var 
	enable_1 : real; enable_2 : real; enable_3 : real; enable_4 : real; enable_5 : real;
	enable_6 : real; enable_7 : real; enable_8 : real; enable_9 : real; enable_10 : real;
	enable_11 : real; enable_12 : real; enable_13 : real; enable_14 : real; enable_15 : real;
	enable_16 : real; enable_17 : real; enable_18 : real; enable_19 : real; enable_20 : real;
	enable_21 : real; enable_22 : real; enable_23 : real; enable_24 : real; enable_25 : real;
	enable_26 : real; enable_27 : real; __time_step : real; __nb_step : int;
let
	(enable_1, enable_2, enable_3, enable_4, enable_5, enable_6, enable_7, enable_8, enable_9, enable_10, enable_11, enable_12, enable_13, enable_14, enable_15, enable_16, enable_17, enable_18, enable_19, enable_20, enable_21, enable_22, enable_23, enable_24, enable_25, enable_26, enable_27) = enable_10_045(In1_1, In2_1, In2_2, In2_3, In2_4, In2_5, In2_6, In2_7, In2_8, In2_9, In2_10, In2_11, In2_12, In2_13, In2_14, In2_15, In2_16, In2_17, In2_18, In2_19, In2_20, In2_21, In2_22, In2_23, In2_24, In2_25, In2_26, In2_27, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6, In3_7, In3_8, In4_1, In4_2, __time_step, __nb_step);
	Out1_1 = enable_1;
	Out1_2 = enable_2;
	Out1_3 = enable_3;
	Out1_4 = enable_4;
	Out1_5 = enable_5;
	Out1_6 = enable_6;
	Out1_7 = enable_7;
	Out1_8 = enable_8;
	Out1_9 = enable_9;
	Out1_10 = enable_10;
	Out1_11 = enable_11;
	Out1_12 = enable_12;
	Out1_13 = enable_13;
	Out1_14 = enable_14;
	Out1_15 = enable_15;
	Out1_16 = enable_16;
	Out1_17 = enable_17;
	Out1_18 = enable_18;
	Out1_19 = enable_19;
	Out1_20 = enable_20;
	Out1_21 = enable_21;
	Out1_22 = enable_22;
	Out1_23 = enable_23;
	Out1_24 = enable_24;
	Out1_25 = enable_25;
	Out1_26 = enable_26;
	Out1_27 = enable_27;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

