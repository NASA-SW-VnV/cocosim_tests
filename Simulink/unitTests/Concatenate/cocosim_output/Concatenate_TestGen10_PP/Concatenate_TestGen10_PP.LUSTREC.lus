-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:23:37
(*
Original block name: Concatenate_TestGen10_PP/if/IF
*)
node  IF_28_418_condExecSS(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; In3_1 : real; In3_2 : real; In3_3 : real; In4_1 : real;
	In4_2 : real; In4_3 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; pre_Out1_3 : real; pre_Out1_4 : real; pre_Out1_5 : real;
	pre_Out1_6 : real; pre_Out1_7 : real; pre_Out1_8 : real; pre_Out1_9 : real; pre_Out1_10 : real;
	pre_Out1_11 : real; pre_Out1_12 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0.0);
	pre_Out1_4 = (if (__nb_step > 0) then
		(pre (Out1_4))
	    else 0.0);
	pre_Out1_5 = (if (__nb_step > 0) then
		(pre (Out1_5))
	    else 0.0);
	pre_Out1_6 = (if (__nb_step > 0) then
		(pre (Out1_6))
	    else 0.0);
	pre_Out1_7 = (if (__nb_step > 0) then
		(pre (Out1_7))
	    else 0.0);
	pre_Out1_8 = (if (__nb_step > 0) then
		(pre (Out1_8))
	    else 0.0);
	pre_Out1_9 = (if (__nb_step > 0) then
		(pre (Out1_9))
	    else 0.0);
	pre_Out1_10 = (if (__nb_step > 0) then
		(pre (Out1_10))
	    else 0.0);
	pre_Out1_11 = (if (__nb_step > 0) then
		(pre (Out1_11))
	    else 0.0);
	pre_Out1_12 = (if (__nb_step > 0) then
		(pre (Out1_12))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3, Out1_4, Out1_5, Out1_6, Out1_7, Out1_8, Out1_9, Out1_10, Out1_11, Out1_12) = (merge _isEnabled_clock 
		(true -> IF_28_418((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In1_3 when _isEnabled_clock), (In2_1 when _isEnabled_clock), (In2_2 when _isEnabled_clock), (In2_3 when _isEnabled_clock), (In3_1 when _isEnabled_clock), (In3_2 when _isEnabled_clock), (In3_3 when _isEnabled_clock), (In4_1 when _isEnabled_clock), (In4_2 when _isEnabled_clock), (In4_3 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3, pre_Out1_4, pre_Out1_5, pre_Out1_6, pre_Out1_7, pre_Out1_8, pre_Out1_9, pre_Out1_10, pre_Out1_11, pre_Out1_12) when false(_isEnabled_clock)));
tel

(*
Original block name: Concatenate_TestGen10_PP/if/IF
*)
node  IF_28_418(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; In3_1 : real; In3_2 : real; In3_3 : real; In4_1 : real;
	In4_2 : real; In4_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real;);
var 
	P_1 : real; P_2 : real; P_3 : real; P_4 : real; P_5 : real;
	P_6 : real; P_7 : real; P_8 : real; P_9 : real; P_10 : real;
	P_11 : real; P_12 : real;
let
	P_1 = In1_1;
	P_2 = In1_2;
	P_3 = In1_3;
	P_4 = In2_1;
	P_5 = In2_2;
	P_6 = In2_3;
	P_7 = In3_1;
	P_8 = In3_2;
	P_9 = In3_3;
	P_10 = In4_1;
	P_11 = In4_2;
	P_12 = In4_3;
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	Out1_7 = P_7;
	Out1_8 = P_8;
	Out1_9 = P_9;
	Out1_10 = P_10;
	Out1_11 = P_11;
	Out1_12 = P_12;
tel

(*
Original block name: Concatenate_TestGen10_PP/if
*)
node  if_12_092(
	IF_Cond_1 : bool; In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real;
	In2_2 : real; In2_3 : real; In3_1 : real; In3_2 : real; In3_3 : real;
	In4_1 : real; In4_2 : real; In4_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real;);
var 
	ExecutionCond_of_IF_28_418 : bool; IF_1 : real; IF_2 : real; IF_3 : real; IF_4 : real;
	IF_5 : real; IF_6 : real; IF_7 : real; IF_8 : real; IF_9 : real;
	IF_10 : real; IF_11 : real; IF_12 : real; If_1 : bool;
let
	ExecutionCond_of_IF_28_418 = If_1;
	(IF_1, IF_2, IF_3, IF_4, IF_5, IF_6, IF_7, IF_8, IF_9, IF_10, IF_11, IF_12) = IF_28_418_condExecSS(In1_1, In1_2, In1_3, In2_1, In2_2, In2_3, In3_1, In3_2, In3_3, In4_1, In4_2, In4_3, ExecutionCond_of_IF_28_418, __time_step, __nb_step);
	If_1 = (if IF_Cond_1 then
		(true)
	    else (false));
	Out1_1 = IF_1;
	Out1_2 = IF_2;
	Out1_3 = IF_3;
	Out1_4 = IF_4;
	Out1_5 = IF_5;
	Out1_6 = IF_6;
	Out1_7 = IF_7;
	Out1_8 = IF_8;
	Out1_9 = IF_9;
	Out1_10 = IF_10;
	Out1_11 = IF_11;
	Out1_12 = IF_12;
tel

(*
Original block name: Concatenate_TestGen10_PP
*)
node  Concatenate_TestGen10_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real; In2_3 : real; In3_1 : real;
	In3_2 : real; In3_3 : real; In4_1 : real; In4_2 : real; In4_3 : real;
	In5_1 : real; In5_2 : real; In5_3 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real; Out1_7 : real; Out1_8 : real; Out1_9 : real; Out1_10 : real;
	Out1_11 : real; Out1_12 : real;);
var 
	if_1 : real; if_2 : real; if_3 : real; if_4 : real; if_5 : real;
	if_6 : real; if_7 : real; if_8 : real; if_9 : real; if_10 : real;
	if_11 : real; if_12 : real; __time_step : real; __nb_step : int;
let
	(if_1, if_2, if_3, if_4, if_5, if_6, if_7, if_8, if_9, if_10, if_11, if_12) = if_12_092(In1_1, In2_1, In2_2, In2_3, In3_1, In3_2, In3_3, In4_1, In4_2, In4_3, In5_1, In5_2, In5_3, __time_step, __nb_step);
	Out1_1 = if_1;
	Out1_2 = if_2;
	Out1_3 = if_3;
	Out1_4 = if_4;
	Out1_5 = if_5;
	Out1_6 = if_6;
	Out1_7 = if_7;
	Out1_8 = if_8;
	Out1_9 = if_9;
	Out1_10 = if_10;
	Out1_11 = if_11;
	Out1_12 = if_12;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

