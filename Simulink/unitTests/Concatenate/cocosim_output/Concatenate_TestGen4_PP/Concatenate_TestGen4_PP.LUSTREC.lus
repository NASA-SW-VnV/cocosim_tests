-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 11:14:04
(*
Original block name: Concatenate_TestGen4_PP/trigger/T
*)
node  T_16_559_condExecSS(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; pre_Out1_3 : real; pre_Out1_4 : real; pre_Out1_5 : real;
	pre_Out1_6 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0.0);
	pre_Out1_4 = (if (__nb_step > 0) then
		(pre (Out1_4))
	    else 0.0);
	pre_Out1_5 = (if (__nb_step > 0) then
		(pre (Out1_5))
	    else 0.0);
	pre_Out1_6 = (if (__nb_step > 0) then
		(pre (Out1_6))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3, Out1_4, Out1_5, Out1_6) = (merge _isEnabled_clock 
		(true -> T_16_559((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In1_3 when _isEnabled_clock), (In2_1 when _isEnabled_clock), (In2_2 when _isEnabled_clock), (In2_3 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3, pre_Out1_4, pre_Out1_5, pre_Out1_6) when false(_isEnabled_clock)));
tel

(*
Original block name: Concatenate_TestGen4_PP/trigger/T
*)
node  T_16_559(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real;);
var 
	P_1 : real; P_2 : real; P_3 : real; P_4 : real; P_5 : real;
	P_6 : real;
let
	P_1 = In1_1;
	P_2 = In1_2;
	P_3 = In1_3;
	P_4 = In2_1;
	P_5 = In2_2;
	P_6 = In2_3;
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
tel

(*
Original block name: Concatenate_TestGen4_PP/trigger
*)
node  trigger_10_119(
	T_cond_1 : bool; In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real;
	In2_2 : real; In2_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real;);
var 
	ExecutionCond_of_T_16_559 : bool; T_1 : real; T_2 : real; T_3 : real; T_4 : real;
	T_5 : real; T_6 : real;
let
	ExecutionCond_of_T_16_559 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	(T_1, T_2, T_3, T_4, T_5, T_6) = T_16_559_condExecSS(In1_1, In1_2, In1_3, In2_1, In2_2, In2_3, ExecutionCond_of_T_16_559, __time_step, __nb_step);
	Out1_1 = T_1;
	Out1_2 = T_2;
	Out1_3 = T_3;
	Out1_4 = T_4;
	Out1_5 = T_5;
	Out1_6 = T_6;
tel

(*
Original block name: Concatenate_TestGen4_PP
*)
node  Concatenate_TestGen4_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real; In2_3 : real; In3_1 : real;
	In3_2 : real; In3_3 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out1_4 : real; Out1_5 : real;
	Out1_6 : real;);
var 
	trigger_1 : real; trigger_2 : real; trigger_3 : real; trigger_4 : real; trigger_5 : real;
	trigger_6 : real; __time_step : real; __nb_step : int;
let
	(trigger_1, trigger_2, trigger_3, trigger_4, trigger_5, trigger_6) = trigger_10_119(In1_1, In2_1, In2_2, In2_3, In3_1, In3_2, In3_3, __time_step, __nb_step);
	Out1_1 = trigger_1;
	Out1_2 = trigger_2;
	Out1_3 = trigger_3;
	Out1_4 = trigger_4;
	Out1_5 = trigger_5;
	Out1_6 = trigger_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

