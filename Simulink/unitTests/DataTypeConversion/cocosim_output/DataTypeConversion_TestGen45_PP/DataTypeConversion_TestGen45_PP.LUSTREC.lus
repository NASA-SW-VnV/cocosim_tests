-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 11:42:59
node  int_to_bool(
	x : int;)
returns(
	y : bool;);
let
	y = (x <> 0);
tel

(*
Original block name: DataTypeConversion_TestGen45_PP/if/IF
*)
node  IF_12_131_condExecSS(
	In1_1 : int; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	pre_Out1_1 : bool; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else false);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> IF_12_131((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: DataTypeConversion_TestGen45_PP/if/IF
*)
node  IF_12_131(
	In1_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	P_1 : bool;
let
	assert ((-128 <= In1_1) and (In1_1 <= 127));
	P_1 = int_to_bool(In1_1);
	Out1_1 = P_1;
tel

(*
Original block name: DataTypeConversion_TestGen45_PP/if
*)
node  if_9_112(
	IF_Cond_1 : bool; In1_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	ExecutionCond_of_IF_12_131 : bool; IF_1 : bool; If_1 : bool;
let
	assert ((-128 <= In1_1) and (In1_1 <= 127));
	ExecutionCond_of_IF_12_131 = If_1;
	IF_1 = IF_12_131_condExecSS(In1_1, ExecutionCond_of_IF_12_131, __time_step, __nb_step);
	If_1 = (if IF_Cond_1 then
		(true)
	    else (false));
	Out1_1 = IF_1;
tel

(*
Original block name: DataTypeConversion_TestGen45_PP
*)
node  DataTypeConversion_TestGen45_PP(
	In1_1 : bool; In2_1 : int;)
returns(
	Out1_1 : bool;);
var 
	if_1 : bool; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In2_1) and (In2_1 <= 127));
	if_1 = if_9_112(In1_1, In2_1, __time_step, __nb_step);
	Out1_1 = if_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

