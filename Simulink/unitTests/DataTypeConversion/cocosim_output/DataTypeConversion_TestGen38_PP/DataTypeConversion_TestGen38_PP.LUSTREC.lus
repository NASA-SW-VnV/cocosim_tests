-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:36:02
node  abs_int(
	x : int;)
returns(
	y : int;);
let
	y = (if (x >= 0) then
		x
	    else (- (x)));
tel

node  rem_int_int(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if ((y = 0) or (x = 0)) then
		0
	    else ((x mod y) - (if (((x mod y) <> 0) and (x <= 0)) then abs_int(y) else 0)));
tel

node  int_to_uint32(
	x : int;)
returns(
	y : int;);
let
	y = (if (x > 4294967295) then
		(0 + rem_int_int((x - 4294967295 - 1), 4294967296))
	    else (if (x < 0) then
		(4294967295 + rem_int_int((x + 0 + 1), 4294967296))
	    else x));
tel

(*
Original block name: DataTypeConversion_TestGen38_PP
*)
node  DataTypeConversion_TestGen38_PP(
	In1_1 : int;)
returns(
	Out1_1 : int;);
var 
	P_1 : int; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In1_1) and (In1_1 <= 127));
	P_1 = int_to_uint32(In1_1);
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

