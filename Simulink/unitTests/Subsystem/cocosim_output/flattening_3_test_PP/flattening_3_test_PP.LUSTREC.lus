-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 18:51:15
(*
Original block name: flattening_3_test_PP/Atomic
*)
node  Atomic_7_015(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	UnitDelay_1 : real;
let
	UnitDelay_1 = ((0.0) -> ((pre (In1_1))));
	Out1_1 = UnitDelay_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual/SubAtomic/SubSubVirtua2
*)
node  SubSubVirtua2_18_019(
	SubSubIn1_1 : real; SubSubIn2_1 : real; SubSubIn3_1 : real; __time_step : real; __nb_step : int;)
returns(
	SubSubOut1_1 : real;);
var 
	Product2_1 : real;
let
	Product2_1 = ((1.0 * SubSubIn1_1) * SubSubIn2_1) * SubSubIn3_1;
	SubSubOut1_1 = Product2_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual/SubAtomic/SubSubVirtual
*)
node  SubSubVirtual_28_022(
	SubSubIn1_1 : real; SubSubIn2_1 : real; __time_step : real; __nb_step : int;)
returns(
	SubSubOut1_1 : real;);
var 
	Product2_1 : real;
let
	Product2_1 = (1.0 * SubSubIn1_1) * SubSubIn2_1;
	SubSubOut1_1 = Product2_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual/SubAtomic/SubSubVirtual1
*)
node  SubSubVirtual1_36_193(
	SubSubIn1_1 : real; __time_step : real; __nb_step : int;)
returns(
	SubSubOut1_1 : real;);
var 
	Product2_1 : real;
let
	Product2_1 = (1.0 * SubSubIn1_1) * SubSubIn1_1;
	SubSubOut1_1 = Product2_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual/SubAtomic/SubSubVirtual3
*)
node  SubSubVirtual3_44_032(
	SubSubIn1_1 : real; __time_step : real; __nb_step : int;)
returns(
	SubSubOut1_1 : real;);
var 
	Product2_1 : real;
let
	Product2_1 = ((1.0 * SubSubIn1_1) * SubSubIn1_1) * SubSubIn1_1;
	SubSubOut1_1 = Product2_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual/SubAtomic
*)
node  SubAtomic_15_023(
	SubIn1_1 : real; __time_step : real; __nb_step : int;)
returns(
	SubOut1_1 : real; SubOut2_1 : real;);
var 
	Product_1 : real; SubSubVirtua2_1 : real; SubSubVirtual_1 : real; SubSubVirtual1_1 : real; SubSubVirtual3_1 : real;
let
	Product_1 = (1.0 * SubIn1_1) * SubIn1_1;
	SubSubVirtua2_1 = SubSubVirtua2_18_019(SubSubVirtual_1, SubSubVirtual_1, SubSubVirtual_1, __time_step, __nb_step);
	SubSubVirtual_1 = SubSubVirtual_28_022(Product_1, SubSubVirtual1_1, __time_step, __nb_step);
	SubSubVirtual1_1 = SubSubVirtual1_36_193(SubIn1_1, __time_step, __nb_step);
	SubSubVirtual3_1 = SubSubVirtual3_44_032(SubSubVirtual_1, __time_step, __nb_step);
	SubOut1_1 = SubSubVirtua2_1;
	SubOut2_1 = SubSubVirtual3_1;
tel

(*
Original block name: flattening_3_test_PP/SubVirtual
*)
node  SubVirtual_13_019(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	SubAtomic_1 : real; SubAtomic_2 : real; Sum_1 : real;
let
	(SubAtomic_1, SubAtomic_2) = SubAtomic_15_023(Sum_1, __time_step, __nb_step);
	Sum_1 = 0.0 + In1_1 + In1_1;
	Out1_1 = SubAtomic_1;
	Out2_1 = SubAtomic_2;
tel

(*
Original block name: flattening_3_test_PP
*)
node  flattening_3_test_PP(
	In1_1 : real; In2_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real; Out3_1 : real;);
var 
	Atomic_1 : real; SubVirtual_1 : real; SubVirtual_2 : real; __time_step : real; __nb_step : int;
let
	Atomic_1 = Atomic_7_015(In2_1, __time_step, __nb_step);
	(SubVirtual_1, SubVirtual_2) = SubVirtual_13_019(In1_1, __time_step, __nb_step);
	Out1_1 = SubVirtual_1;
	Out2_1 = Atomic_1;
	Out3_1 = SubVirtual_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

