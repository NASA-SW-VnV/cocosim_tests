-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 12:55:01
(*
Original block name: DigitalClock_PP/Enabled_newline_Subsystem
*)
node  Enabled_newline_Subsystem_10_184_condExecSS(
	_isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock; _isEnabled_reset_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	_isEnabled_reset_clock = ((false) -> ((_isEnabled_clock and (not ((pre (_isEnabled_clock)))))));
	Out1_1 = (merge _isEnabled_clock 
		(true -> (Enabled_newline_Subsystem_10_184((__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock)) every _isEnabled_reset_clock)) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: DigitalClock_PP/Enabled_newline_Subsystem
*)
node  Enabled_newline_Subsystem_10_184(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	DigitalClock_1 : real;
let
	DigitalClock_1 = (if ((__nb_step mod 1) = 0) then
		__time_step
	    else (if (__nb_step = 0) then
		0.0
	    else (pre (DigitalClock_1))));
	Out1_1 = DigitalClock_1;
tel

(*
Original block name: DigitalClock_PP
*)
node  DigitalClock_PP(
	In1_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	DigitalClock_1 : real; ExecutionCond_of_Enabled_newline_Subsystem_10_184 : bool; Enabled_newline_Subsystem_1 : real; __time_step : real; __nb_step : int;
let
	DigitalClock_1 = (if ((__nb_step mod 1) = 0) then
		__time_step
	    else (if (__nb_step = 0) then
		0.0
	    else (pre (DigitalClock_1))));
	ExecutionCond_of_Enabled_newline_Subsystem_10_184 = (In1_1 > 0.0);
	Enabled_newline_Subsystem_1 = Enabled_newline_Subsystem_10_184_condExecSS(ExecutionCond_of_Enabled_newline_Subsystem_10_184, __time_step, __nb_step);
	Out1_1 = Enabled_newline_Subsystem_1;
	Out2_1 = DigitalClock_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

