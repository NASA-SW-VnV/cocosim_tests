-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 18:02:07
node  bool_to_real(
	x : bool;)
returns(
	y : real;);
let
	y = (if x then
		1.0
	    else 0.0);
tel

node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  Look_minus_Up_newline_Table_508_399_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; ydat_12 : real; ydat_13 : real; ydat_14 : real; ydat_15 : real;
	ydat_16 : real; ydat_17 : real; ydat_18 : real; ydat_19 : real; ydat_20 : real;
	ydat_21 : real; ydat_22 : real; ydat_23 : real; ydat_24 : real; ydat_25 : real;
	ydat_26 : real; ydat_27 : real; ydat_28 : real; ydat_29 : real; ydat_30 : real;
	ydat_31 : real; ydat_32 : real; ydat_33 : real; y__FromIdx27_ToIdx33 : real; y__FromIdx18_ToIdx25 : real;
	y__FromIdx18_ToIdx33 : real; y__FromIdx10_ToIdx16 : real; y__FromIdx1_ToIdx8 : real; y__FromIdx1_ToIdx16 : real;
let
	ydat_1 = 0.0;
	ydat_2 = 0.049067674327418;
	ydat_3 = 0.098017140329561;
	ydat_4 = 0.146730474455362;
	ydat_5 = 0.195090322016128;
	ydat_6 = 0.242980179903264;
	ydat_7 = 0.290284677254462;
	ydat_8 = 0.336889853392220;
	ydat_9 = 0.382683432365090;
	ydat_10 = 0.427555093430282;
	ydat_11 = 0.471396736825998;
	ydat_12 = 0.514102744193222;
	ydat_13 = 0.555570233019602;
	ydat_14 = 0.595699304492433;
	ydat_15 = 0.634393284163645;
	ydat_16 = 0.671558954847018;
	ydat_17 = 0.707106781186547;
	ydat_18 = 0.740951125354959;
	ydat_19 = 0.773010453362737;
	ydat_20 = 0.803207531480645;
	ydat_21 = 0.831469612302545;
	ydat_22 = 0.857728610000272;
	ydat_23 = 0.881921264348355;
	ydat_24 = 0.903989293123443;
	ydat_25 = 0.923879532511287;
	ydat_26 = 0.941544065183021;
	ydat_27 = 0.956940335732209;
	ydat_28 = 0.970031253194544;
	ydat_29 = 0.980785280403230;
	ydat_30 = 0.989176509964781;
	ydat_31 = 0.995184726672197;
	ydat_32 = 0.998795456205172;
	ydat_33 = 1.0;
	y__FromIdx27_ToIdx33 = (if (x = 27) then
		ydat_27
	    else (if (x = 28) then
		ydat_28
	    else (if (x = 29) then
		ydat_29
	    else (if (x = 30) then
		ydat_30
	    else (if (x = 31) then
		ydat_31
	    else (if (x = 32) then
		ydat_32
	    else ydat_33))))));
	y__FromIdx18_ToIdx25 = (if (x = 18) then
		ydat_18
	    else (if (x = 19) then
		ydat_19
	    else (if (x = 20) then
		ydat_20
	    else (if (x = 21) then
		ydat_21
	    else (if (x = 22) then
		ydat_22
	    else (if (x = 23) then
		ydat_23
	    else (if (x = 24) then
		ydat_24
	    else ydat_25)))))));
	y__FromIdx18_ToIdx33 = (if (x = 26) then
		ydat_26
	    else (if (x > 26) then
		y__FromIdx27_ToIdx33
	    else y__FromIdx18_ToIdx25));
	y__FromIdx10_ToIdx16 = (if (x = 10) then
		ydat_10
	    else (if (x = 11) then
		ydat_11
	    else (if (x = 12) then
		ydat_12
	    else (if (x = 13) then
		ydat_13
	    else (if (x = 14) then
		ydat_14
	    else (if (x = 15) then
		ydat_15
	    else ydat_16))))));
	y__FromIdx1_ToIdx8 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else (if (x = 6) then
		ydat_6
	    else (if (x = 7) then
		ydat_7
	    else ydat_8)))))));
	y__FromIdx1_ToIdx16 = (if (x = 9) then
		ydat_9
	    else (if (x > 9) then
		y__FromIdx10_ToIdx16
	    else y__FromIdx1_ToIdx8));
	y = (if (x = 17) then
		ydat_17
	    else (if (x > 17) then
		y__FromIdx18_ToIdx33
	    else y__FromIdx1_ToIdx16));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  Look_minus_Up_newline_Table_508_399_Interp_Using_Pre_ext_node(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	u_node_1 : real; u_node_2 : real;
let
	u_node_1 = Look_minus_Up_newline_Table_508_399_getTableElement(inline_index_bound_node_1);
	u_node_2 = Look_minus_Up_newline_Table_508_399_getTableElement(inline_index_bound_node_2);
	Interp_Using_Pre_Out = ((weight_bound_node_1 * u_node_1) + (weight_bound_node_2 * u_node_2));
tel

(*
external node code for doing PreLookup
*)
node  Look_minus_Up_newline_Table_508_399_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real; Breakpoints_dim1_9 : real;
	Breakpoints_dim1_10 : real; Breakpoints_dim1_11 : real; Breakpoints_dim1_12 : real; Breakpoints_dim1_13 : real; Breakpoints_dim1_14 : real;
	Breakpoints_dim1_15 : real; Breakpoints_dim1_16 : real; Breakpoints_dim1_17 : real; Breakpoints_dim1_18 : real; Breakpoints_dim1_19 : real;
	Breakpoints_dim1_20 : real; Breakpoints_dim1_21 : real; Breakpoints_dim1_22 : real; Breakpoints_dim1_23 : real; Breakpoints_dim1_24 : real;
	Breakpoints_dim1_25 : real; Breakpoints_dim1_26 : real; Breakpoints_dim1_27 : real; Breakpoints_dim1_28 : real; Breakpoints_dim1_29 : real;
	Breakpoints_dim1_30 : real; Breakpoints_dim1_31 : real; Breakpoints_dim1_32 : real; Breakpoints_dim1_33 : real; index_dim_1_1 : int;
	index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int;
	N_shape_1 : real; N_shape_2 : real; clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 0.0;
	Breakpoints_dim1_2 = 0.00781250;
	Breakpoints_dim1_3 = 0.0156250;
	Breakpoints_dim1_4 = 0.02343750;
	Breakpoints_dim1_5 = 0.031250;
	Breakpoints_dim1_6 = 0.03906250;
	Breakpoints_dim1_7 = 0.0468750;
	Breakpoints_dim1_8 = 0.05468750;
	Breakpoints_dim1_9 = 0.06250;
	Breakpoints_dim1_10 = 0.07031250;
	Breakpoints_dim1_11 = 0.0781250;
	Breakpoints_dim1_12 = 0.08593750;
	Breakpoints_dim1_13 = 0.093750;
	Breakpoints_dim1_14 = 0.10156250;
	Breakpoints_dim1_15 = 0.1093750;
	Breakpoints_dim1_16 = 0.11718750;
	Breakpoints_dim1_17 = 0.1250;
	Breakpoints_dim1_18 = 0.13281250;
	Breakpoints_dim1_19 = 0.1406250;
	Breakpoints_dim1_20 = 0.14843750;
	Breakpoints_dim1_21 = 0.156250;
	Breakpoints_dim1_22 = 0.16406250;
	Breakpoints_dim1_23 = 0.1718750;
	Breakpoints_dim1_24 = 0.17968750;
	Breakpoints_dim1_25 = 0.18750;
	Breakpoints_dim1_26 = 0.19531250;
	Breakpoints_dim1_27 = 0.2031250;
	Breakpoints_dim1_28 = 0.21093750;
	Breakpoints_dim1_29 = 0.218750;
	Breakpoints_dim1_30 = 0.22656250;
	Breakpoints_dim1_31 = 0.2343750;
	Breakpoints_dim1_32 = 0.24218750;
	Breakpoints_dim1_33 = 0.250;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_33) or abs_real(dim1_coord_in - Breakpoints_dim1_33) <= 0.000000000000001000000000000000) then
		(32, Breakpoints_dim1_32, 33, Breakpoints_dim1_33)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_32) or abs_real(dim1_coord_in - Breakpoints_dim1_32) <= 0.000000000000001000000000000000) then
		(32, Breakpoints_dim1_32, 33, Breakpoints_dim1_33)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_31) or abs_real(dim1_coord_in - Breakpoints_dim1_31) <= 0.000000000000001000000000000000) then
		(31, Breakpoints_dim1_31, 32, Breakpoints_dim1_32)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_30) or abs_real(dim1_coord_in - Breakpoints_dim1_30) <= 0.000000000000001000000000000000) then
		(30, Breakpoints_dim1_30, 31, Breakpoints_dim1_31)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_29) or abs_real(dim1_coord_in - Breakpoints_dim1_29) <= 0.000000000000001000000000000000) then
		(29, Breakpoints_dim1_29, 30, Breakpoints_dim1_30)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_28) or abs_real(dim1_coord_in - Breakpoints_dim1_28) <= 0.000000000000001000000000000000) then
		(28, Breakpoints_dim1_28, 29, Breakpoints_dim1_29)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_27) or abs_real(dim1_coord_in - Breakpoints_dim1_27) <= 0.000000000000001000000000000000) then
		(27, Breakpoints_dim1_27, 28, Breakpoints_dim1_28)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_26) or abs_real(dim1_coord_in - Breakpoints_dim1_26) <= 0.000000000000001000000000000000) then
		(26, Breakpoints_dim1_26, 27, Breakpoints_dim1_27)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_25) or abs_real(dim1_coord_in - Breakpoints_dim1_25) <= 0.000000000000001000000000000000) then
		(25, Breakpoints_dim1_25, 26, Breakpoints_dim1_26)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_24) or abs_real(dim1_coord_in - Breakpoints_dim1_24) <= 0.000000000000001000000000000000) then
		(24, Breakpoints_dim1_24, 25, Breakpoints_dim1_25)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_23) or abs_real(dim1_coord_in - Breakpoints_dim1_23) <= 0.000000000000001000000000000000) then
		(23, Breakpoints_dim1_23, 24, Breakpoints_dim1_24)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_22) or abs_real(dim1_coord_in - Breakpoints_dim1_22) <= 0.000000000000001000000000000000) then
		(22, Breakpoints_dim1_22, 23, Breakpoints_dim1_23)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_21) or abs_real(dim1_coord_in - Breakpoints_dim1_21) <= 0.000000000000001000000000000000) then
		(21, Breakpoints_dim1_21, 22, Breakpoints_dim1_22)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_20) or abs_real(dim1_coord_in - Breakpoints_dim1_20) <= 0.000000000000001000000000000000) then
		(20, Breakpoints_dim1_20, 21, Breakpoints_dim1_21)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_19) or abs_real(dim1_coord_in - Breakpoints_dim1_19) <= 0.000000000000001000000000000000) then
		(19, Breakpoints_dim1_19, 20, Breakpoints_dim1_20)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_18) or abs_real(dim1_coord_in - Breakpoints_dim1_18) <= 0.000000000000001000000000000000) then
		(18, Breakpoints_dim1_18, 19, Breakpoints_dim1_19)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_17) or abs_real(dim1_coord_in - Breakpoints_dim1_17) <= 0.000000000000001000000000000000) then
		(17, Breakpoints_dim1_17, 18, Breakpoints_dim1_18)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_16) or abs_real(dim1_coord_in - Breakpoints_dim1_16) <= 0.000000000000001000000000000000) then
		(16, Breakpoints_dim1_16, 17, Breakpoints_dim1_17)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_15) or abs_real(dim1_coord_in - Breakpoints_dim1_15) <= 0.000000000000001000000000000000) then
		(15, Breakpoints_dim1_15, 16, Breakpoints_dim1_16)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_14) or abs_real(dim1_coord_in - Breakpoints_dim1_14) <= 0.000000000000001000000000000000) then
		(14, Breakpoints_dim1_14, 15, Breakpoints_dim1_15)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_13) or abs_real(dim1_coord_in - Breakpoints_dim1_13) <= 0.000000000000001000000000000000) then
		(13, Breakpoints_dim1_13, 14, Breakpoints_dim1_14)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_12) or abs_real(dim1_coord_in - Breakpoints_dim1_12) <= 0.000000000000001000000000000000) then
		(12, Breakpoints_dim1_12, 13, Breakpoints_dim1_13)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_11) or abs_real(dim1_coord_in - Breakpoints_dim1_11) <= 0.000000000000001000000000000000) then
		(11, Breakpoints_dim1_11, 12, Breakpoints_dim1_12)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_10) or abs_real(dim1_coord_in - Breakpoints_dim1_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_9) or abs_real(dim1_coord_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim1_9, 10, Breakpoints_dim1_10)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_8) or abs_real(dim1_coord_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_7) or abs_real(dim1_coord_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_6) or abs_real(dim1_coord_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))))))))))))))))))))))))))))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = (if ((dim1_coord_in < coords_dim_1_1) and abs_real(dim1_coord_in - coords_dim_1_1) > 0.000000007812499999999999646470) then
		coords_dim_1_1
	    else (if ((dim1_coord_in > coords_dim_1_2) and abs_real(dim1_coord_in - coords_dim_1_2) > 0.000000007812499999999999646470) then
		coords_dim_1_2
	    else dim1_coord_in));
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code for doing Lookup_nD
*)
node  Look_minus_Up_newline_Table_508_399_Lookup_wrapper_node(
	dim1_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;
let
	(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2) = Look_minus_Up_newline_Table_508_399_PreLookup_node(dim1_coord_in);
	Interp_Using_Pre_Out = Look_minus_Up_newline_Table_508_399_Interp_Using_Pre_ext_node(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2);
tel

(*
Original block name: Cosine1_PP/Cosine/Cosine
*)
node  Cosine_286_541(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : real;);
var 
	x1stor4thQuad_1 : real; Amp25_1 : real; Amp75_1 : real; CastU16En16_1 : real; GTEp75_1 : bool;
	LTEp25_1 : bool; LTEp50_1 : bool; Look_minus_Up_newline_Table_1 : real; Negate_1 : real; Point25_1 : real;
	Point50_1 : real; Point75_1 : real; QuadHandle1a_1 : real; QuadHandle1b_1 : real; QuadHandle2_1 : real;
	SignCorrected_1 : real; p25mA_1 : real; p75mA_1 : real;
let
	x1stor4thQuad_1 = bool_to_real((LTEp25_1 or GTEp75_1));
	Amp25_1 = 0.0 + CastU16En16_1 - Point25_1;
	Amp75_1 = 0.0 + CastU16En16_1 - Point75_1;
	CastU16En16_1 = In1_1;
	GTEp75_1 = (CastU16En16_1 >= Point75_1);
	LTEp25_1 = (CastU16En16_1 <= Point25_1);
	LTEp50_1 = (CastU16En16_1 <= Point50_1);
	Look_minus_Up_newline_Table_1 = Look_minus_Up_newline_Table_508_399_Lookup_wrapper_node(QuadHandle2_1);
	Negate_1 = (- (Look_minus_Up_newline_Table_1));
	Point25_1 = 0.250;
	Point50_1 = 0.50;
	Point75_1 = 0.750;
	QuadHandle1a_1 = (if LTEp25_1 then
		p25mA_1
	    else Amp25_1);
	QuadHandle1b_1 = (if GTEp75_1 then
		Amp75_1
	    else p75mA_1);
	QuadHandle2_1 = (if LTEp50_1 then
		QuadHandle1a_1
	    else QuadHandle1b_1);
	SignCorrected_1 = (if (x1stor4thQuad_1 <> 0.0) then
		Look_minus_Up_newline_Table_1
	    else Negate_1);
	p25mA_1 = 0.0 + Point25_1 - CastU16En16_1;
	p75mA_1 = 0.0 + Point75_1 - CastU16En16_1;
	y_1 = SignCorrected_1;
tel

(*
Original block name: Cosine1_PP/Cosine
*)
node  Cosine_180_729(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	cos_lpar_2_mult_pi_mult_u_rpar__1 : real;);
var 
	Cosine_1 : real;
let
	Cosine_1 = Cosine_286_541(u_1, __time_step, __nb_step);
	cos_lpar_2_mult_pi_mult_u_rpar__1 = Cosine_1;
tel

(*
Original block name: Cosine1_PP
*)
node  Cosine1_PP(
	In1_1 : real;)
returns(
	Out1_1 : real;);
var 
	Cosine_1 : real; __time_step : real; __nb_step : int;
let
	assert ((0.0 <= In1_1) and (In1_1 <= 0.30));
	assert ((0.0 <= In1_1) and (In1_1 < 1.0));
	Cosine_1 = Cosine_180_729(In1_1, __time_step, __nb_step);
	Out1_1 = Cosine_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

