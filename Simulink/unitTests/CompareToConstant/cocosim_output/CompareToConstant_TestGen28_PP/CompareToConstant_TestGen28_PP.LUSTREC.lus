-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:44:28
(*
Original block name: CompareToConstant_TestGen28_PP/enable_trigger/ET/P
*)
node  P_13_096(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool;);
var 
	Compare_1 : bool; Constant_1 : real;
let
	Compare_1 = (u_1 >= Constant_1);
	Constant_1 = -3.40;
	y_1 = Compare_1;
tel

node  ET_9_096_triggeredSS(
	In1_1 : real; _isEnabled : bool; _isTriggered : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	pre_Out1_1 : bool; _isTriggered_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else false);
	_isTriggered_clock = _isTriggered;
	Out1_1 = (merge _isTriggered_clock 
		(true -> ET_9_096((In1_1 when _isTriggered_clock), (__time_step when _isTriggered_clock), (__nb_step when _isTriggered_clock))) 
		(false -> (pre_Out1_1) when false(_isTriggered_clock)));
tel

(*
Original block name: CompareToConstant_TestGen28_PP/enable_trigger/ET
*)
node  ET_9_096_condExecSS(
	In1_1 : real; _isEnabled : bool; _isTriggered : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	pre_Out1_1 : bool; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else false);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> ET_9_096_triggeredSS((In1_1 when _isEnabled_clock), (_isEnabled when _isEnabled_clock), (_isTriggered when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: CompareToConstant_TestGen28_PP/enable_trigger/ET
*)
node  ET_9_096(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	P_1 : bool;
let
	P_1 = P_13_096(In1_1, __time_step, __nb_step);
	Out1_1 = P_1;
tel

(*
Original block name: CompareToConstant_TestGen28_PP/enable_trigger
*)
node  enable_trigger_5_099(
	E_Cond_1 : bool; T_Cond_1 : bool; In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	ExecutionCond_of_ET_9_096 : bool; TriggerCond_of_ET_9_096 : bool; EnableCond_of_ET_9_096 : bool; ET_1 : bool;
let
	EnableCond_of_ET_9_096 = E_Cond_1;
	TriggerCond_of_ET_9_096 = ((false) -> ((T_Cond_1 and (not ((pre (T_Cond_1)))))));
	ExecutionCond_of_ET_9_096 = (EnableCond_of_ET_9_096 and TriggerCond_of_ET_9_096);
	ET_1 = ET_9_096_condExecSS(In1_1, EnableCond_of_ET_9_096, TriggerCond_of_ET_9_096, __time_step, __nb_step);
	Out1_1 = ET_1;
tel

(*
Original block name: CompareToConstant_TestGen28_PP
*)
node  CompareToConstant_TestGen28_PP(
	In1_1 : bool; In2_1 : bool; In3_1 : real;)
returns(
	Out1_1 : bool;);
var 
	enable_trigger_1 : bool; __time_step : real; __nb_step : int;
let
	enable_trigger_1 = enable_trigger_5_099(In1_1, In2_1, In3_1, __time_step, __nb_step);
	Out1_1 = enable_trigger_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

