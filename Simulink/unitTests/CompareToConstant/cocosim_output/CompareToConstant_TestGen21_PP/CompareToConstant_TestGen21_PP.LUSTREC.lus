-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:16:37
(*
Original block name: CompareToConstant_TestGen21_PP/enable/E/P
*)
node  P_21_771(
	u_1 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : int;);
var 
	Compare_1 : int; Constant_1 : int;
let
	assert ((-128 <= u_1) and (u_1 <= 127));
	Compare_1 = (if (u_1 <= Constant_1) then
		1
	    else 0);
	Constant_1 = 25;
	y_1 = Compare_1;
tel

(*
Original block name: CompareToConstant_TestGen21_PP/enable/E
*)
node  E_12_068_condExecSS(
	In1_1 : int; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int;);
var 
	pre_Out1_1 : int; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> E_12_068((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: CompareToConstant_TestGen21_PP/enable/E
*)
node  E_12_068(
	In1_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int;);
var 
	P_1 : int;
let
	assert ((-128 <= In1_1) and (In1_1 <= 127));
	P_1 = P_21_771(In1_1, __time_step, __nb_step);
	Out1_1 = P_1;
tel

(*
Original block name: CompareToConstant_TestGen21_PP/enable
*)
node  enable_9_070(
	In1_1 : bool; In2_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int;);
var 
	ExecutionCond_of_E_12_068 : bool; E_1 : int;
let
	assert ((-128 <= In2_1) and (In2_1 <= 127));
	ExecutionCond_of_E_12_068 = In1_1;
	E_1 = E_12_068_condExecSS(In2_1, ExecutionCond_of_E_12_068, __time_step, __nb_step);
	Out1_1 = E_1;
tel

(*
Original block name: CompareToConstant_TestGen21_PP
*)
node  CompareToConstant_TestGen21_PP(
	In1_1 : bool; In2_1 : int;)
returns(
	Out1_1 : int;);
var 
	enable_1 : int; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In2_1) and (In2_1 <= 127));
	enable_1 = enable_9_070(In1_1, In2_1, __time_step, __nb_step);
	Out1_1 = enable_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

