-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:29:21
(*
Original block name: Constant_TestGen27_PP/enable/E
*)
node  E_10_145_condExecSS(
	_isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; pre_Out1_3 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3) = (merge _isEnabled_clock 
		(true -> E_10_145((__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3) when false(_isEnabled_clock)));
tel

(*
Original block name: Constant_TestGen27_PP/enable/E
*)
node  E_10_145(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	P_1 : real; P_2 : real; P_3 : real;
let
	P_1 = 1.0;
	P_2 = 2.0;
	P_3 = 4.0;
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
tel

(*
Original block name: Constant_TestGen27_PP/enable
*)
node  enable_8_084(
	In1_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	ExecutionCond_of_E_10_145 : bool; E_1 : real; E_2 : real; E_3 : real;
let
	ExecutionCond_of_E_10_145 = In1_1;
	(E_1, E_2, E_3) = E_10_145_condExecSS(ExecutionCond_of_E_10_145, __time_step, __nb_step);
	Out1_1 = E_1;
	Out1_2 = E_2;
	Out1_3 = E_3;
tel

(*
Original block name: Constant_TestGen27_PP
*)
node  Constant_TestGen27_PP(
	In1_1 : bool;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	enable_1 : real; enable_2 : real; enable_3 : real; __time_step : real; __nb_step : int;
let
	(enable_1, enable_2, enable_3) = enable_8_084(In1_1, __time_step, __nb_step);
	Out1_1 = enable_1;
	Out1_2 = enable_2;
	Out1_3 = enable_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

