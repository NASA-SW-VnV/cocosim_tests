-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 12:32:17
(*
Original block name: Constant_TestGen45_PP/if/IF
*)
node  IF_10_159_condExecSS(
	_isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int;);
var 
	pre_Out1_1 : int; pre_Out1_2 : int; pre_Out1_3 : int; pre_Out1_4 : int; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0);
	pre_Out1_4 = (if (__nb_step > 0) then
		(pre (Out1_4))
	    else 0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3, Out1_4) = (merge _isEnabled_clock 
		(true -> IF_10_159((__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3, pre_Out1_4) when false(_isEnabled_clock)));
tel

(*
Original block name: Constant_TestGen45_PP/if/IF
*)
node  IF_10_159(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int;);
var 
	P_1 : int; P_2 : int; P_3 : int; P_4 : int;
let
	P_1 = 0;
	P_2 = 3;
	P_3 = 2;
	P_4 = 4;
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
tel

(*
Original block name: Constant_TestGen45_PP/if
*)
node  if_8_089(
	IF_Cond_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int;);
var 
	ExecutionCond_of_IF_10_159 : bool; IF_1 : int; IF_2 : int; IF_3 : int; IF_4 : int;
	If_1 : bool;
let
	ExecutionCond_of_IF_10_159 = If_1;
	(IF_1, IF_2, IF_3, IF_4) = IF_10_159_condExecSS(ExecutionCond_of_IF_10_159, __time_step, __nb_step);
	If_1 = (if IF_Cond_1 then
		(true)
	    else (false));
	Out1_1 = IF_1;
	Out1_2 = IF_2;
	Out1_3 = IF_3;
	Out1_4 = IF_4;
tel

(*
Original block name: Constant_TestGen45_PP
*)
node  Constant_TestGen45_PP(
	In1_1 : bool;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int;);
var 
	if_1 : int; if_2 : int; if_3 : int; if_4 : int; __time_step : real;
	__nb_step : int;
let
	(if_1, if_2, if_3, if_4) = if_8_089(In1_1, __time_step, __nb_step);
	Out1_1 = if_1;
	Out1_2 = if_2;
	Out1_3 = if_3;
	Out1_4 = if_4;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

