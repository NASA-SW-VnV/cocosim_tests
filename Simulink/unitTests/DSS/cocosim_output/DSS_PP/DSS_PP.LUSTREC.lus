-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 09:29:46
(*
Original block name: DSS_PP/DiscreteState_minus_Space
*)
node  DiscreteState_minus_Space_5_002(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	A_1 : real; A_2 : real; A_3 : real; A_4 : real; B_1 : real;
	B_2 : real; C_1 : real; C_2 : real; D_1 : real; Product_1 : real;
	Product1_1 : real; Product2_1 : real; Product2_2 : real; Product3_1 : real; Product3_2 : real;
	Sum_1 : real; Sum1_1 : real; Sum1_2 : real; X0_1 : real; X0_2 : real;
let
	A_1 = 1.303430790495574;
	A_2 = 0.581204540824034;
	A_3 = 0.435903405618026;
	A_4 = 1.73933419611360;
	B_1 = 0.510647680364470;
	B_2 = 0.500046006035811;
	C_1 = 1.0;
	C_2 = 5.0;
	D_1 = 2.0;
	Product_1 = 0.0 + (C_1 * X0_1) + (C_2 * X0_2);
	Product1_1 = 0.0 + (D_1 * U_1);
	Product2_1 = 0.0 + (B_1 * U_1);
	Product2_2 = 0.0 + (B_2 * U_1);
	Product3_1 = 0.0 + (A_1 * X0_1) + (A_3 * X0_2);
	Product3_2 = 0.0 + (A_2 * X0_1) + (A_4 * X0_2);
	Sum_1 = 0.0 + Product1_1 + Product_1;
	Sum1_1 = 0.0 + Product3_1 + Product2_1;
	Sum1_2 = 0.0 + Product3_2 + Product2_2;
	X0_1 = ((0.0) -> ((pre (Sum1_1))));
	X0_2 = ((0.0) -> ((pre (Sum1_2))));
	Y_1 = Sum_1;
tel

(*
Original block name: DSS_PP/State_minus_Space
*)
node  State_minus_Space_37_006(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	A_1 : real; A_2 : real; A_3 : real; A_4 : real; B_1 : real;
	B_2 : real; C_1 : real; C_2 : real; D_1 : real; Product_1 : real;
	Product1_1 : real; Product2_1 : real; Product2_2 : real; Product3_1 : real; Product3_2 : real;
	Sum_1 : real; Sum1_1 : real; Sum1_2 : real; X0_1 : real; X0_2 : real;
let
	A_1 = 1.303430790495574;
	A_2 = 0.581204540824034;
	A_3 = 0.435903405618026;
	A_4 = 1.73933419611360;
	B_1 = 0.510647680364470;
	B_2 = 0.500046006035811;
	C_1 = 1.0;
	C_2 = 5.0;
	D_1 = 2.0;
	Product_1 = 0.0 + (C_1 * X0_1) + (C_2 * X0_2);
	Product1_1 = 0.0 + (D_1 * U_1);
	Product2_1 = 0.0 + (B_1 * U_1);
	Product2_2 = 0.0 + (B_2 * U_1);
	Product3_1 = 0.0 + (A_1 * X0_1) + (A_3 * X0_2);
	Product3_2 = 0.0 + (A_2 * X0_1) + (A_4 * X0_2);
	Sum_1 = 0.0 + Product1_1 + Product_1;
	Sum1_1 = 0.0 + Product3_1 + Product2_1;
	Sum1_2 = 0.0 + Product3_2 + Product2_2;
	X0_1 = ((0.0) -> ((pre (Sum1_1))));
	X0_2 = ((0.0) -> ((pre (Sum1_2))));
	Y_1 = Sum_1;
tel

(*
Original block name: DSS_PP
*)
node  DSS_PP(
	In1_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	DiscreteState_minus_Space_1 : real; State_minus_Space_1 : real; __time_step : real; __nb_step : int;
let
	DiscreteState_minus_Space_1 = DiscreteState_minus_Space_5_002(In1_1, __time_step, __nb_step);
	State_minus_Space_1 = State_minus_Space_37_006(In1_1, __time_step, __nb_step);
	Out1_1 = DiscreteState_minus_Space_1;
	Out2_1 = State_minus_Space_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

