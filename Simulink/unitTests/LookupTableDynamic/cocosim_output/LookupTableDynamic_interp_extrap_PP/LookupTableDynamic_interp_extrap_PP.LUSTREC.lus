-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 13:50:50
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  Lookup_newline_Table_newline_Dynamic_103_797_getTableElement(
	x : int; ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real;
	ydat_5 : real; ydat_6 : real; ydat_7 : real;)
returns(
	y : real;);
let
	y = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else (if (x = 6) then
		ydat_6
	    else ydat_7))))));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  Lookup_newline_Table_newline_Dynamic_103_797_Interp_Using_Pre_ext_node(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real; ydat_1 : real;
	ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real; ydat_6 : real;
	ydat_7 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	u_node_1 : real; u_node_2 : real;
let
	u_node_1 = Lookup_newline_Table_newline_Dynamic_103_797_getTableElement(inline_index_bound_node_1, ydat_1, ydat_2, ydat_3, ydat_4, ydat_5, ydat_6, ydat_7);
	u_node_2 = Lookup_newline_Table_newline_Dynamic_103_797_getTableElement(inline_index_bound_node_2, ydat_1, ydat_2, ydat_3, ydat_4, ydat_5, ydat_6, ydat_7);
	Interp_Using_Pre_Out = ((weight_bound_node_1 * u_node_1) + (weight_bound_node_2 * u_node_2));
tel

(*
external node code for doing PreLookup
*)
node  Lookup_newline_Table_newline_Dynamic_103_797_PreLookup_node(
	x_in : real; xdat_1 : real; xdat_2 : real; xdat_3 : real; xdat_4 : real;
	xdat_5 : real; xdat_6 : real; xdat_7 : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; index_dim_1_1 : int; index_dim_1_2 : int;
	coords_dim_1_1 : real; coords_dim_1_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int; N_shape_1 : real;
	N_shape_2 : real; clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = xdat_1;
	Breakpoints_dim1_2 = xdat_2;
	Breakpoints_dim1_3 = xdat_3;
	Breakpoints_dim1_4 = xdat_4;
	Breakpoints_dim1_5 = xdat_5;
	Breakpoints_dim1_6 = xdat_6;
	Breakpoints_dim1_7 = xdat_7;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((x_in >= Breakpoints_dim1_7) or abs_real(x_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((x_in >= Breakpoints_dim1_6) or abs_real(x_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((x_in >= Breakpoints_dim1_5) or abs_real(x_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((x_in >= Breakpoints_dim1_4) or abs_real(x_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((x_in >= Breakpoints_dim1_3) or abs_real(x_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((x_in >= Breakpoints_dim1_2) or abs_real(x_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((x_in >= Breakpoints_dim1_1) or abs_real(x_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = x_in;
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code for doing LookupTableDynamic
*)
node  Lookup_newline_Table_newline_Dynamic_103_797_Lookup_wrapper_node(
	x_in : real; xdat_1 : real; xdat_2 : real; xdat_3 : real; xdat_4 : real;
	xdat_5 : real; xdat_6 : real; xdat_7 : real; ydat_1 : real; ydat_2 : real;
	ydat_3 : real; ydat_4 : real; ydat_5 : real; ydat_6 : real; ydat_7 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;
let
	(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2) = Lookup_newline_Table_newline_Dynamic_103_797_PreLookup_node(x_in, xdat_1, xdat_2, xdat_3, xdat_4, xdat_5, xdat_6, xdat_7);
	Interp_Using_Pre_Out = Lookup_newline_Table_newline_Dynamic_103_797_Interp_Using_Pre_ext_node(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2, ydat_1, ydat_2, ydat_3, ydat_4, ydat_5, ydat_6, ydat_7);
tel

(*
Original block name: LookupTableDynamic_interp_extrap_PP
*)
node  LookupTableDynamic_interp_extrap_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In3_1 : real; In3_2 : real;
	In3_3 : real; In3_4 : real; In3_5 : real; In3_6 : real; In3_7 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	Constant_1 : real; Constant_2 : real; Constant_3 : real; Constant_4 : real; Constant_5 : real;
	Constant_6 : real; Constant_7 : real; Lookup_newline_Table_newline_Dynamic_1 : real; Lookup_newline_Table_newline_Dynamic_2 : real; Lookup_newline_Table_newline_Dynamic_3 : real;
	__time_step : real; __nb_step : int;
let
	Constant_1 = 1.0;
	Constant_2 = 2.0;
	Constant_3 = 3.0;
	Constant_4 = 4.0;
	Constant_5 = 5.0;
	Constant_6 = 6.0;
	Constant_7 = 7.0;
	Lookup_newline_Table_newline_Dynamic_1 = Lookup_newline_Table_newline_Dynamic_103_797_Lookup_wrapper_node(In1_1, Constant_1, Constant_2, Constant_3, Constant_4, Constant_5, Constant_6, Constant_7, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6, In3_7);
	Lookup_newline_Table_newline_Dynamic_2 = Lookup_newline_Table_newline_Dynamic_103_797_Lookup_wrapper_node(In1_2, Constant_1, Constant_2, Constant_3, Constant_4, Constant_5, Constant_6, Constant_7, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6, In3_7);
	Lookup_newline_Table_newline_Dynamic_3 = Lookup_newline_Table_newline_Dynamic_103_797_Lookup_wrapper_node(In1_3, Constant_1, Constant_2, Constant_3, Constant_4, Constant_5, Constant_6, Constant_7, In3_1, In3_2, In3_3, In3_4, In3_5, In3_6, In3_7);
	Out1_1 = Lookup_newline_Table_newline_Dynamic_1;
	Out1_2 = Lookup_newline_Table_newline_Dynamic_2;
	Out1_3 = Lookup_newline_Table_newline_Dynamic_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

