-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:57:18
(*
Original block name: ForIterator_bio_bug_PP/ForIterator_newline_Subsystem/IfAction_newline_Subsystem
*)
node  IfAction_newline_Subsystem_73_749_condExecSS(
	SS_readings_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	pre_H_1 : real; pre_y_1 : real; _isEnabled_clock : bool clock; _isEnabled_reset_clock : bool clock;
let
	pre_H_1 = 0.0;
	pre_y_1 = 0.0;
	_isEnabled_clock = _isEnabled;
	_isEnabled_reset_clock = ((false) -> ((_isEnabled_clock and (not ((pre (_isEnabled_clock)))))));
	(H_1, y_1) = (merge _isEnabled_clock 
		(true -> (IfAction_newline_Subsystem_73_749((SS_readings_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock)) every _isEnabled_reset_clock)) 
		(false -> (pre_H_1, pre_y_1) when false(_isEnabled_clock)));
tel

(*
Original block name: ForIterator_bio_bug_PP/ForIterator_newline_Subsystem/IfAction_newline_Subsystem
*)
node  IfAction_newline_Subsystem_73_749(
	SS_readings_1 : real; __time_step : real; __nb_step : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	Constant4_1 : real; Constant5_1 : real; Divide_1 : real;
let
	Constant4_1 = 1.0;
	Constant5_1 = 1.0;
	Divide_1 = (1.0 * SS_readings_1) / Constant4_1;
	H_1 = Constant5_1;
	y_1 = Divide_1;
tel

(*
Original block name: ForIterator_bio_bug_PP/ForIterator_newline_Subsystem/IfAction_newline_Subsystem1
*)
node  IfAction_newline_Subsystem1_105_156_condExecSS(
	_isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	pre_H_1 : real; pre_y_1 : real; _isEnabled_clock : bool clock; _isEnabled_reset_clock : bool clock;
let
	pre_H_1 = 0.0;
	pre_y_1 = 0.0;
	_isEnabled_clock = _isEnabled;
	_isEnabled_reset_clock = ((false) -> ((_isEnabled_clock and (not ((pre (_isEnabled_clock)))))));
	(H_1, y_1) = (merge _isEnabled_clock 
		(true -> (IfAction_newline_Subsystem1_105_156((__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock)) every _isEnabled_reset_clock)) 
		(false -> (pre_H_1, pre_y_1) when false(_isEnabled_clock)));
tel

(*
Original block name: ForIterator_bio_bug_PP/ForIterator_newline_Subsystem/IfAction_newline_Subsystem1
*)
node  IfAction_newline_Subsystem1_105_156(
	__time_step : real; __nb_step : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	Constant_1 : real; Constant1_1 : real;
let
	Constant_1 = 0.0;
	Constant1_1 = 0.0;
	H_1 = Constant1_1;
	y_1 = Constant_1;
tel

node  ForIterator_newline_Subsystem_15_719_iterator(
	SS_readings_1 : real; __time_step : real; __nb_step : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	H_1_1 : real; y_1_1 : real; H_1_2 : real; y_1_2 : real;
let
	(H_1_1, y_1_1) = ForIterator_newline_Subsystem_15_719(SS_readings_1, __time_step, __nb_step, 1);
	(H_1_2, y_1_2) = ForIterator_newline_Subsystem_15_719(SS_readings_1, __time_step, __nb_step, 2);
	(H_1, y_1) = ForIterator_newline_Subsystem_15_719(SS_readings_1, __time_step, __nb_step, 3);
tel

(*
Original block name: ForIterator_bio_bug_PP/ForIterator_newline_Subsystem
*)
node  ForIterator_newline_Subsystem_15_719(
	SS_readings_1 : real; __time_step : real; __nb_step : int; _iterationVariable : int;)
returns(
	H_1 : real; y_1 : real;);
var 
	Constant2_1 : real; If_1 : bool; If_2 : bool; ExecutionCond_of_IfAction_newline_Subsystem_73_749 : bool; IfAction_newline_Subsystem_1 : real;
	IfAction_newline_Subsystem_2 : real; ExecutionCond_of_IfAction_newline_Subsystem1_105_156 : bool; IfAction_newline_Subsystem1_1 : real; IfAction_newline_Subsystem1_2 : real; Sum_1 : real;
	Sum1_1 : real;
let
	Constant2_1 = 0.50;
	(If_1, If_2) = (if SS_readings_1 > Constant2_1 then
		(true, false)
	    else (false, true));
	ExecutionCond_of_IfAction_newline_Subsystem_73_749 = If_1;
	(IfAction_newline_Subsystem_1, IfAction_newline_Subsystem_2) = IfAction_newline_Subsystem_73_749_condExecSS(SS_readings_1, ExecutionCond_of_IfAction_newline_Subsystem_73_749, __time_step, __nb_step);
	ExecutionCond_of_IfAction_newline_Subsystem1_105_156 = If_2;
	(IfAction_newline_Subsystem1_1, IfAction_newline_Subsystem1_2) = IfAction_newline_Subsystem1_105_156_condExecSS(ExecutionCond_of_IfAction_newline_Subsystem1_105_156, __time_step, __nb_step);
	Sum_1 = 0.0 + IfAction_newline_Subsystem_2 + IfAction_newline_Subsystem1_2;
	Sum1_1 = 0.0 + IfAction_newline_Subsystem_1 + IfAction_newline_Subsystem1_1;
	H_1 = Sum1_1;
	y_1 = Sum_1;
tel

(*
Original block name: ForIterator_bio_bug_PP
*)
node  ForIterator_bio_bug_PP(
	In1_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	ForIterator_newline_Subsystem_1 : real; ForIterator_newline_Subsystem_2 : real; __time_step : real; __nb_step : int;
let
	(ForIterator_newline_Subsystem_1, ForIterator_newline_Subsystem_2) = ForIterator_newline_Subsystem_15_719_iterator(In1_1, __time_step, __nb_step);
	Out1_1 = ForIterator_newline_Subsystem_1;
	Out2_1 = ForIterator_newline_Subsystem_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

