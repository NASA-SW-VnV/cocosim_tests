-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 01:30:37
(*
Original block name: DiscreteStateSpace_TestGen2_PP/trigger/T/P
*)
node  P_10_135(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real; Y_2 : real;);
var 
	A_1 : real; B_1 : real; C_1 : real; C_2 : real; D_1 : real;
	D_2 : real; Product_1 : real; Product_2 : real; Product1_1 : real; Product1_2 : real;
	Product2_1 : real; Product3_1 : real; Sum_1 : real; Sum_2 : real; Sum1_1 : real;
	X0_1 : real;
let
	A_1 = 1.0;
	B_1 = 1.0;
	C_1 = 1.0;
	C_2 = 0.20;
	D_1 = 1.0;
	D_2 = 0.20;
	Product_1 = 0.0 + (C_1 * X0_1);
	Product_2 = 0.0 + (C_2 * X0_1);
	Product1_1 = 0.0 + (D_1 * U_1);
	Product1_2 = 0.0 + (D_2 * U_1);
	Product2_1 = 0.0 + (B_1 * U_1);
	Product3_1 = 0.0 + (A_1 * X0_1);
	Sum_1 = 0.0 + Product1_1 + Product_1;
	Sum_2 = 0.0 + Product1_2 + Product_2;
	Sum1_1 = 0.0 + Product3_1 + Product2_1;
	X0_1 = ((0.0) -> ((pre (Sum1_1))));
	Y_1 = Sum_1;
	Y_2 = Sum_2;
tel

(*
Original block name: DiscreteStateSpace_TestGen2_PP/trigger/T
*)
node  T_7_135_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2) = (merge _isEnabled_clock 
		(true -> T_7_135((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2) when false(_isEnabled_clock)));
tel

(*
Original block name: DiscreteStateSpace_TestGen2_PP/trigger/T
*)
node  T_7_135(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	P_1 : real; P_2 : real;
let
	(P_1, P_2) = P_10_135(In1_1, __time_step, __nb_step);
	Out1_1 = P_1;
	Out1_2 = P_2;
tel

(*
Original block name: DiscreteStateSpace_TestGen2_PP/trigger
*)
node  trigger_4_156(
	T_cond_1 : bool; In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	ExecutionCond_of_T_7_135 : bool; T_1 : real; T_2 : real;
let
	ExecutionCond_of_T_7_135 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	(T_1, T_2) = T_7_135_condExecSS(In1_1, ExecutionCond_of_T_7_135, __time_step, __nb_step);
	Out1_1 = T_1;
	Out1_2 = T_2;
tel

(*
Original block name: DiscreteStateSpace_TestGen2_PP
*)
node  DiscreteStateSpace_TestGen2_PP(
	In1_1 : bool; In2_1 : real;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	trigger_1 : real; trigger_2 : real; __time_step : real; __nb_step : int;
let
	(trigger_1, trigger_2) = trigger_4_156(In1_1, In2_1, __time_step, __nb_step);
	Out1_1 = trigger_1;
	Out1_2 = trigger_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

