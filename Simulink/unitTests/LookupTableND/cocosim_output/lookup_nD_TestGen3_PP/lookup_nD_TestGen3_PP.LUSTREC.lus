-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 14:30:28
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  P_72_683_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
let
	ydat_1 = 97.495360661060403;
	ydat_2 = 49.12799240489030;
	ydat_3 = 81.608345844158904;
	ydat_4 = 38.958570030719798;
	ydat_5 = 52.395483829073399;
	y = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else ydat_5))));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  P_72_683_Interp_Using_Pre_ext_node(
	inline_index_solution : int;)
returns(
	Interp_Using_Pre_Out : real;);
let
	Interp_Using_Pre_Out = P_72_683_getTableElement(inline_index_solution);
tel

(*
external node code for doing PreLookup
*)
node  P_72_683_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_solution : int;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real;
	direct_solution_inline_index : int; solution_subscript_for_dim_1 : int; disFromTableNode_dim_1_1 : real; disFromTableNode_dim_1_2 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 15.394692691187613;
	Breakpoints_dim1_2 = 49.097682671958239;
	Breakpoints_dim1_3 = 63.929241403051059;
	Breakpoints_dim1_4 = 66.396783599738939;
	Breakpoints_dim1_5 = 91.185473635501253;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))));
	disFromTableNode_dim_1_1 = (dim1_coord_in - coords_dim_1_1);
	disFromTableNode_dim_1_2 = (coords_dim_1_2 - dim1_coord_in);
	solution_subscript_for_dim_1 = (if ((disFromTableNode_dim_1_1 <= disFromTableNode_dim_1_2) or abs_real(disFromTableNode_dim_1_1 - disFromTableNode_dim_1_2) <= 0.000033702989980770622468597003) then
		index_dim_1_1
	    else index_dim_1_2);
	direct_solution_inline_index = (solution_subscript_for_dim_1 * dimJump_1);
	inline_index_solution = direct_solution_inline_index;
tel

(*
external node code for doing Lookup_nD
*)
node  P_72_683_Lookup_wrapper_node(
	dim1_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_solution : int;
let
	inline_index_solution = P_72_683_PreLookup_node(dim1_coord_in);
	Interp_Using_Pre_Out = P_72_683_Interp_Using_Pre_ext_node(inline_index_solution);
tel

(*
Original block name: lookup_nD_TestGen3_PP
*)
node  lookup_nD_TestGen3_PP(
	In1_1 : real;)
returns(
	Out1_1 : real;);
var 
	P_1 : real; __time_step : real; __nb_step : int;
let
	assert ((0.0 <= In1_1) and (In1_1 <= 127.0));
	P_1 = P_72_683_Lookup_wrapper_node(In1_1);
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

