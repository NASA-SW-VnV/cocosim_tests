-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 20:40:11
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  n_minus_DLookup_newline_Table_106_285_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; ydat_12 : real; ydat_13 : real; ydat_14 : real; ydat_15 : real;
	ydat_16 : real; ydat_17 : real; ydat_18 : real; ydat_19 : real; ydat_20 : real;
	ydat_21 : real; ydat_22 : real; ydat_23 : real; ydat_24 : real; ydat_25 : real;
	ydat_26 : real; ydat_27 : real; ydat_28 : real; ydat_29 : real; ydat_30 : real;
	ydat_31 : real; ydat_32 : real; ydat_33 : real; ydat_34 : real; ydat_35 : real;
	ydat_36 : real; ydat_37 : real; ydat_38 : real; ydat_39 : real; ydat_40 : real;
	ydat_41 : real; ydat_42 : real; ydat_43 : real; ydat_44 : real; ydat_45 : real;
	ydat_46 : real; ydat_47 : real; ydat_48 : real; y__FromIdx44_ToIdx48 : real; y__FromIdx38_ToIdx42 : real;
	y__FromIdx38_ToIdx48 : real; y__FromIdx32_ToIdx36 : real; y__FromIdx26_ToIdx30 : real; y__FromIdx26_ToIdx36 : real; y__FromIdx26_ToIdx48 : real;
	y__FromIdx20_ToIdx24 : real; y__FromIdx14_ToIdx18 : real; y__FromIdx14_ToIdx24 : real; y__FromIdx8_ToIdx12 : real; y__FromIdx1_ToIdx6 : real;
	y__FromIdx1_ToIdx12 : real; y__FromIdx1_ToIdx24 : real;
let
	ydat_1 = 9.0;
	ydat_2 = 6.0;
	ydat_3 = 2.0;
	ydat_4 = 5.0;
	ydat_5 = 7.0;
	ydat_6 = 8.0;
	ydat_7 = 1.0;
	ydat_8 = 4.0;
	ydat_9 = 3.0;
	ydat_10 = 0.0;
	ydat_11 = 5.0;
	ydat_12 = 1.0;
	ydat_13 = 5.0;
	ydat_14 = 2.0;
	ydat_15 = 6.0;
	ydat_16 = 1.0;
	ydat_17 = 1.0;
	ydat_18 = 3.0;
	ydat_19 = 2.0;
	ydat_20 = 4.0;
	ydat_21 = 4.0;
	ydat_22 = 2.0;
	ydat_23 = 3.0;
	ydat_24 = 1.0;
	ydat_25 = 27.0;
	ydat_26 = 18.0;
	ydat_27 = 6.0;
	ydat_28 = 15.0;
	ydat_29 = 21.0;
	ydat_30 = 24.0;
	ydat_31 = 3.0;
	ydat_32 = 12.0;
	ydat_33 = 9.0;
	ydat_34 = 0.0;
	ydat_35 = 15.0;
	ydat_36 = 3.0;
	ydat_37 = 15.0;
	ydat_38 = 6.0;
	ydat_39 = 18.0;
	ydat_40 = 3.0;
	ydat_41 = 3.0;
	ydat_42 = 9.0;
	ydat_43 = 6.0;
	ydat_44 = 12.0;
	ydat_45 = 12.0;
	ydat_46 = 6.0;
	ydat_47 = 9.0;
	ydat_48 = 3.0;
	y__FromIdx44_ToIdx48 = (if (x = 44) then
		ydat_44
	    else (if (x = 45) then
		ydat_45
	    else (if (x = 46) then
		ydat_46
	    else (if (x = 47) then
		ydat_47
	    else ydat_48))));
	y__FromIdx38_ToIdx42 = (if (x = 38) then
		ydat_38
	    else (if (x = 39) then
		ydat_39
	    else (if (x = 40) then
		ydat_40
	    else (if (x = 41) then
		ydat_41
	    else ydat_42))));
	y__FromIdx38_ToIdx48 = (if (x = 43) then
		ydat_43
	    else (if (x > 43) then
		y__FromIdx44_ToIdx48
	    else y__FromIdx38_ToIdx42));
	y__FromIdx32_ToIdx36 = (if (x = 32) then
		ydat_32
	    else (if (x = 33) then
		ydat_33
	    else (if (x = 34) then
		ydat_34
	    else (if (x = 35) then
		ydat_35
	    else ydat_36))));
	y__FromIdx26_ToIdx30 = (if (x = 26) then
		ydat_26
	    else (if (x = 27) then
		ydat_27
	    else (if (x = 28) then
		ydat_28
	    else (if (x = 29) then
		ydat_29
	    else ydat_30))));
	y__FromIdx26_ToIdx36 = (if (x = 31) then
		ydat_31
	    else (if (x > 31) then
		y__FromIdx32_ToIdx36
	    else y__FromIdx26_ToIdx30));
	y__FromIdx26_ToIdx48 = (if (x = 37) then
		ydat_37
	    else (if (x > 37) then
		y__FromIdx38_ToIdx48
	    else y__FromIdx26_ToIdx36));
	y__FromIdx20_ToIdx24 = (if (x = 20) then
		ydat_20
	    else (if (x = 21) then
		ydat_21
	    else (if (x = 22) then
		ydat_22
	    else (if (x = 23) then
		ydat_23
	    else ydat_24))));
	y__FromIdx14_ToIdx18 = (if (x = 14) then
		ydat_14
	    else (if (x = 15) then
		ydat_15
	    else (if (x = 16) then
		ydat_16
	    else (if (x = 17) then
		ydat_17
	    else ydat_18))));
	y__FromIdx14_ToIdx24 = (if (x = 19) then
		ydat_19
	    else (if (x > 19) then
		y__FromIdx20_ToIdx24
	    else y__FromIdx14_ToIdx18));
	y__FromIdx8_ToIdx12 = (if (x = 8) then
		ydat_8
	    else (if (x = 9) then
		ydat_9
	    else (if (x = 10) then
		ydat_10
	    else (if (x = 11) then
		ydat_11
	    else ydat_12))));
	y__FromIdx1_ToIdx6 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else ydat_6)))));
	y__FromIdx1_ToIdx12 = (if (x = 7) then
		ydat_7
	    else (if (x > 7) then
		y__FromIdx8_ToIdx12
	    else y__FromIdx1_ToIdx6));
	y__FromIdx1_ToIdx24 = (if (x = 13) then
		ydat_13
	    else (if (x > 13) then
		y__FromIdx14_ToIdx24
	    else y__FromIdx1_ToIdx12));
	y = (if (x = 25) then
		ydat_25
	    else (if (x > 25) then
		y__FromIdx26_ToIdx48
	    else y__FromIdx1_ToIdx24));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  n_minus_DLookup_newline_Table_106_285_Interp_Using_Pre_ext_node(
	inline_index_solution : int;)
returns(
	Interp_Using_Pre_Out : real;);
let
	Interp_Using_Pre_Out = n_minus_DLookup_newline_Table_106_285_getTableElement(inline_index_solution);
tel

(*
external node code for doing PreLookup
*)
node  n_minus_DLookup_newline_Table_106_285_PreLookup_node(
	dim1_coord_in : real; dim2_coord_in : real; dim3_coord_in : real; dim4_coord_in : real; dim5_coord_in : real;)
returns(
	inline_index_solution : int;);
var 
	dimJump_1 : int; dimJump_2 : int; dimJump_3 : int; dimJump_4 : int; dimJump_5 : int;
	Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim2_1 : real; Breakpoints_dim2_2 : real; Breakpoints_dim3_1 : real;
	Breakpoints_dim3_2 : real; Breakpoints_dim4_1 : real; Breakpoints_dim4_2 : real; Breakpoints_dim4_3 : real; Breakpoints_dim5_1 : real;
	Breakpoints_dim5_2 : real; index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real;
	index_dim_2_1 : int; index_dim_2_2 : int; coords_dim_2_1 : real; coords_dim_2_2 : real; index_dim_3_1 : int;
	index_dim_3_2 : int; coords_dim_3_1 : real; coords_dim_3_2 : real; index_dim_4_1 : int; index_dim_4_2 : int;
	coords_dim_4_1 : real; coords_dim_4_2 : real; index_dim_5_1 : int; index_dim_5_2 : int; coords_dim_5_1 : real;
	coords_dim_5_2 : real; direct_solution_inline_index : int; solution_subscript_for_dim_1 : int; solution_subscript_for_dim_2 : int; solution_subscript_for_dim_3 : int;
	solution_subscript_for_dim_4 : int; solution_subscript_for_dim_5 : int;
let
	dimJump_1 = 1;
	dimJump_2 = 2;
	dimJump_3 = 4;
	dimJump_4 = 8;
	dimJump_5 = 24;
	Breakpoints_dim1_1 = 1.0;
	Breakpoints_dim1_2 = 7.0;
	Breakpoints_dim2_1 = 2.0;
	Breakpoints_dim2_2 = 5.0;
	Breakpoints_dim3_1 = 1.0;
	Breakpoints_dim3_2 = 4.0;
	Breakpoints_dim4_1 = 1.0;
	Breakpoints_dim4_2 = 2.0;
	Breakpoints_dim4_3 = 5.0;
	Breakpoints_dim5_1 = 1.0;
	Breakpoints_dim5_2 = 3.0;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)));
	(index_dim_2_1, coords_dim_2_1, index_dim_2_2, coords_dim_2_2) = (if ((dim2_coord_in >= Breakpoints_dim2_2) or abs_real(dim2_coord_in - Breakpoints_dim2_2) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim2_1, 2, Breakpoints_dim2_2)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_1) or abs_real(dim2_coord_in - Breakpoints_dim2_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim2_1, 2, Breakpoints_dim2_2)
	    else (1, Breakpoints_dim2_1, 2, Breakpoints_dim2_2)));
	(index_dim_3_1, coords_dim_3_1, index_dim_3_2, coords_dim_3_2) = (if ((dim3_coord_in >= Breakpoints_dim3_2) or abs_real(dim3_coord_in - Breakpoints_dim3_2) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim3_1, 2, Breakpoints_dim3_2)
	    else (if ((dim3_coord_in >= Breakpoints_dim3_1) or abs_real(dim3_coord_in - Breakpoints_dim3_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim3_1, 2, Breakpoints_dim3_2)
	    else (1, Breakpoints_dim3_1, 2, Breakpoints_dim3_2)));
	(index_dim_4_1, coords_dim_4_1, index_dim_4_2, coords_dim_4_2) = (if ((dim4_coord_in >= Breakpoints_dim4_3) or abs_real(dim4_coord_in - Breakpoints_dim4_3) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim4_2, 3, Breakpoints_dim4_3)
	    else (if ((dim4_coord_in >= Breakpoints_dim4_2) or abs_real(dim4_coord_in - Breakpoints_dim4_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim4_2, 3, Breakpoints_dim4_3)
	    else (if ((dim4_coord_in >= Breakpoints_dim4_1) or abs_real(dim4_coord_in - Breakpoints_dim4_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim4_1, 2, Breakpoints_dim4_2)
	    else (1, Breakpoints_dim4_1, 2, Breakpoints_dim4_2))));
	(index_dim_5_1, coords_dim_5_1, index_dim_5_2, coords_dim_5_2) = (if ((dim5_coord_in >= Breakpoints_dim5_2) or abs_real(dim5_coord_in - Breakpoints_dim5_2) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim5_1, 2, Breakpoints_dim5_2)
	    else (if ((dim5_coord_in >= Breakpoints_dim5_1) or abs_real(dim5_coord_in - Breakpoints_dim5_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim5_1, 2, Breakpoints_dim5_2)
	    else (1, Breakpoints_dim5_1, 2, Breakpoints_dim5_2)));
	solution_subscript_for_dim_1 = (if ((dim1_coord_in >= coords_dim_1_2) or abs_real(dim1_coord_in - coords_dim_1_2) <= 0.000006000000000000000152005145) then
		index_dim_1_2
	    else index_dim_1_1);
	solution_subscript_for_dim_2 = (if ((dim2_coord_in >= coords_dim_2_2) or abs_real(dim2_coord_in - coords_dim_2_2) <= 0.000003000000000000000076002572) then
		index_dim_2_2
	    else index_dim_2_1);
	solution_subscript_for_dim_3 = (if ((dim3_coord_in >= coords_dim_3_2) or abs_real(dim3_coord_in - coords_dim_3_2) <= 0.000003000000000000000076002572) then
		index_dim_3_2
	    else index_dim_3_1);
	solution_subscript_for_dim_4 = (if ((dim4_coord_in >= coords_dim_4_2) or abs_real(dim4_coord_in - coords_dim_4_2) <= 0.000000999999999999999954748112) then
		index_dim_4_2
	    else index_dim_4_1);
	solution_subscript_for_dim_5 = (if ((dim5_coord_in >= coords_dim_5_2) or abs_real(dim5_coord_in - coords_dim_5_2) <= 0.000001999999999999999909496224) then
		index_dim_5_2
	    else index_dim_5_1);
	direct_solution_inline_index = ((solution_subscript_for_dim_1 * dimJump_1) + ((solution_subscript_for_dim_2 - 1) * dimJump_2) + ((solution_subscript_for_dim_3 - 1) * dimJump_3) + ((solution_subscript_for_dim_4 - 1) * dimJump_4) + ((solution_subscript_for_dim_5 - 1) * dimJump_5));
	inline_index_solution = direct_solution_inline_index;
tel

(*
external node code for doing Lookup_nD
*)
node  n_minus_DLookup_newline_Table_106_285_Lookup_wrapper_node(
	dim1_coord_in : real; dim2_coord_in : real; dim3_coord_in : real; dim4_coord_in : real; dim5_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_solution : int;
let
	inline_index_solution = n_minus_DLookup_newline_Table_106_285_PreLookup_node(dim1_coord_in, dim2_coord_in, dim3_coord_in, dim4_coord_in, dim5_coord_in);
	Interp_Using_Pre_Out = n_minus_DLookup_newline_Table_106_285_Interp_Using_Pre_ext_node(inline_index_solution);
tel

(*
Original block name: LookupTableND_5D_flat_PP
*)
node  LookupTableND_5D_flat_PP(
	In1_1 : real; In2_1 : real; In3_1 : real; In4_1 : real; In5_1 : real;)
returns(
	Out1_1 : real;);
var 
	n_minus_DLookup_newline_Table_1 : real; __time_step : real; __nb_step : int;
let
	n_minus_DLookup_newline_Table_1 = n_minus_DLookup_newline_Table_106_285_Lookup_wrapper_node(In1_1, In2_1, In3_1, In4_1, In5_1);
	Out1_1 = n_minus_DLookup_newline_Table_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

