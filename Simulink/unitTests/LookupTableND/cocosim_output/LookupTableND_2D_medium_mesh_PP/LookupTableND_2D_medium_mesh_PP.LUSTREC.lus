-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 20:39:26
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  n_minus_DLookup_newline_Table_100_996_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; ydat_12 : real; ydat_13 : real; ydat_14 : real; ydat_15 : real;
	ydat_16 : real; ydat_17 : real; ydat_18 : real; ydat_19 : real; ydat_20 : real;
	ydat_21 : real; ydat_22 : real; ydat_23 : real; ydat_24 : real; ydat_25 : real;
	ydat_26 : real; ydat_27 : real; ydat_28 : real; ydat_29 : real; ydat_30 : real;
	ydat_31 : real; ydat_32 : real; ydat_33 : real; ydat_34 : real; ydat_35 : real;
	ydat_36 : real; ydat_37 : real; ydat_38 : real; ydat_39 : real; ydat_40 : real;
	ydat_41 : real; ydat_42 : real; ydat_43 : real; ydat_44 : real; ydat_45 : real;
	ydat_46 : real; ydat_47 : real; ydat_48 : real; ydat_49 : real; ydat_50 : real;
	ydat_51 : real; ydat_52 : real; ydat_53 : real; ydat_54 : real; ydat_55 : real;
	ydat_56 : real; ydat_57 : real; ydat_58 : real; ydat_59 : real; ydat_60 : real;
	ydat_61 : real; ydat_62 : real; ydat_63 : real; ydat_64 : real; ydat_65 : real;
	ydat_66 : real; ydat_67 : real; ydat_68 : real; ydat_69 : real; ydat_70 : real;
	ydat_71 : real; ydat_72 : real; ydat_73 : real; ydat_74 : real; ydat_75 : real;
	ydat_76 : real; ydat_77 : real; ydat_78 : real; ydat_79 : real; ydat_80 : real;
	ydat_81 : real; ydat_82 : real; ydat_83 : real; ydat_84 : real; ydat_85 : real;
	ydat_86 : real; ydat_87 : real; ydat_88 : real; ydat_89 : real; ydat_90 : real;
	ydat_91 : real; ydat_92 : real; ydat_93 : real; ydat_94 : real; ydat_95 : real;
	ydat_96 : real; ydat_97 : real; ydat_98 : real; ydat_99 : real; ydat_100 : real;
	ydat_101 : real; ydat_102 : real; ydat_103 : real; ydat_104 : real; ydat_105 : real;
	ydat_106 : real; ydat_107 : real; ydat_108 : real; ydat_109 : real; ydat_110 : real;
	ydat_111 : real; ydat_112 : real; ydat_113 : real; ydat_114 : real; ydat_115 : real;
	ydat_116 : real; ydat_117 : real; ydat_118 : real; ydat_119 : real; ydat_120 : real;
	ydat_121 : real; y__FromIdx116_ToIdx121 : real; y__FromIdx108_ToIdx114 : real; y__FromIdx108_ToIdx121 : real; y__FromIdx101_ToIdx106 : real;
	y__FromIdx93_ToIdx99 : real; y__FromIdx93_ToIdx106 : real; y__FromIdx93_ToIdx121 : real; y__FromIdx86_ToIdx91 : real; y__FromIdx78_ToIdx84 : real;
	y__FromIdx78_ToIdx91 : real; y__FromIdx70_ToIdx76 : real; y__FromIdx62_ToIdx68 : real; y__FromIdx62_ToIdx76 : real; y__FromIdx62_ToIdx91 : real;
	y__FromIdx62_ToIdx121 : real; y__FromIdx55_ToIdx60 : real; y__FromIdx47_ToIdx53 : real; y__FromIdx47_ToIdx60 : real; y__FromIdx40_ToIdx45 : real;
	y__FromIdx32_ToIdx38 : real; y__FromIdx32_ToIdx45 : real; y__FromIdx32_ToIdx60 : real; y__FromIdx25_ToIdx30 : real; y__FromIdx17_ToIdx23 : real;
	y__FromIdx17_ToIdx30 : real; y__FromIdx9_ToIdx15 : real; y__FromIdx1_ToIdx7 : real; y__FromIdx1_ToIdx15 : real; y__FromIdx1_ToIdx30 : real;
	y__FromIdx1_ToIdx60 : real;
let
	ydat_1 = 1.0;
	ydat_2 = 1.0;
	ydat_3 = 1.0;
	ydat_4 = 1.0;
	ydat_5 = 1.0;
	ydat_6 = 1.0;
	ydat_7 = 1.0;
	ydat_8 = 1.0;
	ydat_9 = 1.0;
	ydat_10 = 1.0;
	ydat_11 = 1.0;
	ydat_12 = 2.10;
	ydat_13 = 2.10;
	ydat_14 = 2.10;
	ydat_15 = 2.10;
	ydat_16 = 2.10;
	ydat_17 = 2.10;
	ydat_18 = 2.10;
	ydat_19 = 2.10;
	ydat_20 = 2.10;
	ydat_21 = 2.10;
	ydat_22 = 2.10;
	ydat_23 = 3.20;
	ydat_24 = 3.20;
	ydat_25 = 3.20;
	ydat_26 = 3.20;
	ydat_27 = 3.20;
	ydat_28 = 3.20;
	ydat_29 = 3.20;
	ydat_30 = 3.20;
	ydat_31 = 3.20;
	ydat_32 = 3.20;
	ydat_33 = 3.20;
	ydat_34 = 4.30;
	ydat_35 = 4.30;
	ydat_36 = 4.30;
	ydat_37 = 4.30;
	ydat_38 = 4.30;
	ydat_39 = 4.30;
	ydat_40 = 4.30;
	ydat_41 = 4.30;
	ydat_42 = 4.30;
	ydat_43 = 4.30;
	ydat_44 = 4.30;
	ydat_45 = 5.50;
	ydat_46 = 5.50;
	ydat_47 = 5.50;
	ydat_48 = 5.50;
	ydat_49 = 5.50;
	ydat_50 = 5.50;
	ydat_51 = 5.50;
	ydat_52 = 5.50;
	ydat_53 = 5.50;
	ydat_54 = 5.50;
	ydat_55 = 5.50;
	ydat_56 = 6.60;
	ydat_57 = 6.60;
	ydat_58 = 6.60;
	ydat_59 = 6.60;
	ydat_60 = 6.60;
	ydat_61 = 6.60;
	ydat_62 = 6.60;
	ydat_63 = 6.60;
	ydat_64 = 6.60;
	ydat_65 = 6.60;
	ydat_66 = 6.60;
	ydat_67 = 7.70;
	ydat_68 = 7.70;
	ydat_69 = 7.70;
	ydat_70 = 7.70;
	ydat_71 = 7.70;
	ydat_72 = 7.70;
	ydat_73 = 7.70;
	ydat_74 = 7.70;
	ydat_75 = 7.70;
	ydat_76 = 7.70;
	ydat_77 = 7.70;
	ydat_78 = 8.199999999999999;
	ydat_79 = 8.199999999999999;
	ydat_80 = 8.199999999999999;
	ydat_81 = 8.199999999999999;
	ydat_82 = 8.199999999999999;
	ydat_83 = 8.199999999999999;
	ydat_84 = 8.199999999999999;
	ydat_85 = 8.199999999999999;
	ydat_86 = 8.199999999999999;
	ydat_87 = 8.199999999999999;
	ydat_88 = 8.199999999999999;
	ydat_89 = 9.300000000000001;
	ydat_90 = 9.300000000000001;
	ydat_91 = 9.300000000000001;
	ydat_92 = 9.300000000000001;
	ydat_93 = 9.300000000000001;
	ydat_94 = 9.300000000000001;
	ydat_95 = 9.300000000000001;
	ydat_96 = 9.300000000000001;
	ydat_97 = 9.300000000000001;
	ydat_98 = 9.300000000000001;
	ydat_99 = 9.300000000000001;
	ydat_100 = 10.199999999999999;
	ydat_101 = 10.199999999999999;
	ydat_102 = 10.199999999999999;
	ydat_103 = 10.199999999999999;
	ydat_104 = 10.199999999999999;
	ydat_105 = 10.199999999999999;
	ydat_106 = 10.199999999999999;
	ydat_107 = 10.199999999999999;
	ydat_108 = 10.199999999999999;
	ydat_109 = 10.199999999999999;
	ydat_110 = 10.199999999999999;
	ydat_111 = 11.10;
	ydat_112 = 11.10;
	ydat_113 = 11.10;
	ydat_114 = 11.10;
	ydat_115 = 11.10;
	ydat_116 = 11.10;
	ydat_117 = 11.10;
	ydat_118 = 11.10;
	ydat_119 = 11.10;
	ydat_120 = 11.10;
	ydat_121 = 11.10;
	y__FromIdx116_ToIdx121 = (if (x = 116) then
		ydat_116
	    else (if (x = 117) then
		ydat_117
	    else (if (x = 118) then
		ydat_118
	    else (if (x = 119) then
		ydat_119
	    else (if (x = 120) then
		ydat_120
	    else ydat_121)))));
	y__FromIdx108_ToIdx114 = (if (x = 108) then
		ydat_108
	    else (if (x = 109) then
		ydat_109
	    else (if (x = 110) then
		ydat_110
	    else (if (x = 111) then
		ydat_111
	    else (if (x = 112) then
		ydat_112
	    else (if (x = 113) then
		ydat_113
	    else ydat_114))))));
	y__FromIdx108_ToIdx121 = (if (x = 115) then
		ydat_115
	    else (if (x > 115) then
		y__FromIdx116_ToIdx121
	    else y__FromIdx108_ToIdx114));
	y__FromIdx101_ToIdx106 = (if (x = 101) then
		ydat_101
	    else (if (x = 102) then
		ydat_102
	    else (if (x = 103) then
		ydat_103
	    else (if (x = 104) then
		ydat_104
	    else (if (x = 105) then
		ydat_105
	    else ydat_106)))));
	y__FromIdx93_ToIdx99 = (if (x = 93) then
		ydat_93
	    else (if (x = 94) then
		ydat_94
	    else (if (x = 95) then
		ydat_95
	    else (if (x = 96) then
		ydat_96
	    else (if (x = 97) then
		ydat_97
	    else (if (x = 98) then
		ydat_98
	    else ydat_99))))));
	y__FromIdx93_ToIdx106 = (if (x = 100) then
		ydat_100
	    else (if (x > 100) then
		y__FromIdx101_ToIdx106
	    else y__FromIdx93_ToIdx99));
	y__FromIdx93_ToIdx121 = (if (x = 107) then
		ydat_107
	    else (if (x > 107) then
		y__FromIdx108_ToIdx121
	    else y__FromIdx93_ToIdx106));
	y__FromIdx86_ToIdx91 = (if (x = 86) then
		ydat_86
	    else (if (x = 87) then
		ydat_87
	    else (if (x = 88) then
		ydat_88
	    else (if (x = 89) then
		ydat_89
	    else (if (x = 90) then
		ydat_90
	    else ydat_91)))));
	y__FromIdx78_ToIdx84 = (if (x = 78) then
		ydat_78
	    else (if (x = 79) then
		ydat_79
	    else (if (x = 80) then
		ydat_80
	    else (if (x = 81) then
		ydat_81
	    else (if (x = 82) then
		ydat_82
	    else (if (x = 83) then
		ydat_83
	    else ydat_84))))));
	y__FromIdx78_ToIdx91 = (if (x = 85) then
		ydat_85
	    else (if (x > 85) then
		y__FromIdx86_ToIdx91
	    else y__FromIdx78_ToIdx84));
	y__FromIdx70_ToIdx76 = (if (x = 70) then
		ydat_70
	    else (if (x = 71) then
		ydat_71
	    else (if (x = 72) then
		ydat_72
	    else (if (x = 73) then
		ydat_73
	    else (if (x = 74) then
		ydat_74
	    else (if (x = 75) then
		ydat_75
	    else ydat_76))))));
	y__FromIdx62_ToIdx68 = (if (x = 62) then
		ydat_62
	    else (if (x = 63) then
		ydat_63
	    else (if (x = 64) then
		ydat_64
	    else (if (x = 65) then
		ydat_65
	    else (if (x = 66) then
		ydat_66
	    else (if (x = 67) then
		ydat_67
	    else ydat_68))))));
	y__FromIdx62_ToIdx76 = (if (x = 69) then
		ydat_69
	    else (if (x > 69) then
		y__FromIdx70_ToIdx76
	    else y__FromIdx62_ToIdx68));
	y__FromIdx62_ToIdx91 = (if (x = 77) then
		ydat_77
	    else (if (x > 77) then
		y__FromIdx78_ToIdx91
	    else y__FromIdx62_ToIdx76));
	y__FromIdx62_ToIdx121 = (if (x = 92) then
		ydat_92
	    else (if (x > 92) then
		y__FromIdx93_ToIdx121
	    else y__FromIdx62_ToIdx91));
	y__FromIdx55_ToIdx60 = (if (x = 55) then
		ydat_55
	    else (if (x = 56) then
		ydat_56
	    else (if (x = 57) then
		ydat_57
	    else (if (x = 58) then
		ydat_58
	    else (if (x = 59) then
		ydat_59
	    else ydat_60)))));
	y__FromIdx47_ToIdx53 = (if (x = 47) then
		ydat_47
	    else (if (x = 48) then
		ydat_48
	    else (if (x = 49) then
		ydat_49
	    else (if (x = 50) then
		ydat_50
	    else (if (x = 51) then
		ydat_51
	    else (if (x = 52) then
		ydat_52
	    else ydat_53))))));
	y__FromIdx47_ToIdx60 = (if (x = 54) then
		ydat_54
	    else (if (x > 54) then
		y__FromIdx55_ToIdx60
	    else y__FromIdx47_ToIdx53));
	y__FromIdx40_ToIdx45 = (if (x = 40) then
		ydat_40
	    else (if (x = 41) then
		ydat_41
	    else (if (x = 42) then
		ydat_42
	    else (if (x = 43) then
		ydat_43
	    else (if (x = 44) then
		ydat_44
	    else ydat_45)))));
	y__FromIdx32_ToIdx38 = (if (x = 32) then
		ydat_32
	    else (if (x = 33) then
		ydat_33
	    else (if (x = 34) then
		ydat_34
	    else (if (x = 35) then
		ydat_35
	    else (if (x = 36) then
		ydat_36
	    else (if (x = 37) then
		ydat_37
	    else ydat_38))))));
	y__FromIdx32_ToIdx45 = (if (x = 39) then
		ydat_39
	    else (if (x > 39) then
		y__FromIdx40_ToIdx45
	    else y__FromIdx32_ToIdx38));
	y__FromIdx32_ToIdx60 = (if (x = 46) then
		ydat_46
	    else (if (x > 46) then
		y__FromIdx47_ToIdx60
	    else y__FromIdx32_ToIdx45));
	y__FromIdx25_ToIdx30 = (if (x = 25) then
		ydat_25
	    else (if (x = 26) then
		ydat_26
	    else (if (x = 27) then
		ydat_27
	    else (if (x = 28) then
		ydat_28
	    else (if (x = 29) then
		ydat_29
	    else ydat_30)))));
	y__FromIdx17_ToIdx23 = (if (x = 17) then
		ydat_17
	    else (if (x = 18) then
		ydat_18
	    else (if (x = 19) then
		ydat_19
	    else (if (x = 20) then
		ydat_20
	    else (if (x = 21) then
		ydat_21
	    else (if (x = 22) then
		ydat_22
	    else ydat_23))))));
	y__FromIdx17_ToIdx30 = (if (x = 24) then
		ydat_24
	    else (if (x > 24) then
		y__FromIdx25_ToIdx30
	    else y__FromIdx17_ToIdx23));
	y__FromIdx9_ToIdx15 = (if (x = 9) then
		ydat_9
	    else (if (x = 10) then
		ydat_10
	    else (if (x = 11) then
		ydat_11
	    else (if (x = 12) then
		ydat_12
	    else (if (x = 13) then
		ydat_13
	    else (if (x = 14) then
		ydat_14
	    else ydat_15))))));
	y__FromIdx1_ToIdx7 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else (if (x = 6) then
		ydat_6
	    else ydat_7))))));
	y__FromIdx1_ToIdx15 = (if (x = 8) then
		ydat_8
	    else (if (x > 8) then
		y__FromIdx9_ToIdx15
	    else y__FromIdx1_ToIdx7));
	y__FromIdx1_ToIdx30 = (if (x = 16) then
		ydat_16
	    else (if (x > 16) then
		y__FromIdx17_ToIdx30
	    else y__FromIdx1_ToIdx15));
	y__FromIdx1_ToIdx60 = (if (x = 31) then
		ydat_31
	    else (if (x > 31) then
		y__FromIdx32_ToIdx60
	    else y__FromIdx1_ToIdx30));
	y = (if (x = 61) then
		ydat_61
	    else (if (x > 61) then
		y__FromIdx62_ToIdx121
	    else y__FromIdx1_ToIdx60));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  n_minus_DLookup_newline_Table_100_996_Interp_Using_Pre_ext_node(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real; inline_index_bound_node_3 : int;
	weight_bound_node_3 : real; inline_index_bound_node_4 : int; weight_bound_node_4 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	u_node_1 : real; u_node_2 : real; u_node_3 : real; u_node_4 : real;
let
	u_node_1 = n_minus_DLookup_newline_Table_100_996_getTableElement(inline_index_bound_node_1);
	u_node_2 = n_minus_DLookup_newline_Table_100_996_getTableElement(inline_index_bound_node_2);
	u_node_3 = n_minus_DLookup_newline_Table_100_996_getTableElement(inline_index_bound_node_3);
	u_node_4 = n_minus_DLookup_newline_Table_100_996_getTableElement(inline_index_bound_node_4);
	Interp_Using_Pre_Out = ((weight_bound_node_1 * u_node_1) + (weight_bound_node_2 * u_node_2) + (weight_bound_node_3 * u_node_3) + (weight_bound_node_4 * u_node_4));
tel

(*
external node code for doing PreLookup
*)
node  n_minus_DLookup_newline_Table_100_996_PreLookup_node(
	dim1_coord_in : real; dim2_coord_in : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real; inline_index_bound_node_3 : int;
	weight_bound_node_3 : real; inline_index_bound_node_4 : int; weight_bound_node_4 : real;);
var 
	dimJump_1 : int; dimJump_2 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real;
	Breakpoints_dim1_4 : real; Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real;
	Breakpoints_dim1_9 : real; Breakpoints_dim1_10 : real; Breakpoints_dim1_11 : real; Breakpoints_dim2_1 : real; Breakpoints_dim2_2 : real;
	Breakpoints_dim2_3 : real; Breakpoints_dim2_4 : real; Breakpoints_dim2_5 : real; Breakpoints_dim2_6 : real; Breakpoints_dim2_7 : real;
	Breakpoints_dim2_8 : real; Breakpoints_dim2_9 : real; Breakpoints_dim2_10 : real; Breakpoints_dim2_11 : real; index_dim_1_1 : int;
	index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real; index_dim_2_1 : int; index_dim_2_2 : int;
	coords_dim_2_1 : real; coords_dim_2_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int; bound_node_index_inline3 : int;
	bound_node_index_inline4 : int; N_shape_1 : real; N_shape_2 : real; N_shape_3 : real; N_shape_4 : real;
	clip_input_1 : real; clip_input_2 : real;
let
	dimJump_1 = 1;
	dimJump_2 = 11;
	Breakpoints_dim1_1 = 1.20;
	Breakpoints_dim1_2 = 2.30;
	Breakpoints_dim1_3 = 3.0;
	Breakpoints_dim1_4 = 4.10;
	Breakpoints_dim1_5 = 5.10;
	Breakpoints_dim1_6 = 6.10;
	Breakpoints_dim1_7 = 7.20;
	Breakpoints_dim1_8 = 8.300000000000001;
	Breakpoints_dim1_9 = 9.40;
	Breakpoints_dim1_10 = 10.199999999999999;
	Breakpoints_dim1_11 = 11.300000000000001;
	Breakpoints_dim2_1 = 1.0;
	Breakpoints_dim2_2 = 2.0;
	Breakpoints_dim2_3 = 3.10;
	Breakpoints_dim2_4 = 4.20;
	Breakpoints_dim2_5 = 5.0;
	Breakpoints_dim2_6 = 6.130;
	Breakpoints_dim2_7 = 7.120;
	Breakpoints_dim2_8 = 8.130000000000001;
	Breakpoints_dim2_9 = 9.240;
	Breakpoints_dim2_10 = 10.240;
	Breakpoints_dim2_11 = 11.130000000000001;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_11) or abs_real(dim1_coord_in - Breakpoints_dim1_11) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_10) or abs_real(dim1_coord_in - Breakpoints_dim1_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_9) or abs_real(dim1_coord_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim1_9, 10, Breakpoints_dim1_10)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_8) or abs_real(dim1_coord_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_7) or abs_real(dim1_coord_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_6) or abs_real(dim1_coord_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))))))));
	(index_dim_2_1, coords_dim_2_1, index_dim_2_2, coords_dim_2_2) = (if ((dim2_coord_in >= Breakpoints_dim2_11) or abs_real(dim2_coord_in - Breakpoints_dim2_11) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim2_10, 11, Breakpoints_dim2_11)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_10) or abs_real(dim2_coord_in - Breakpoints_dim2_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim2_10, 11, Breakpoints_dim2_11)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_9) or abs_real(dim2_coord_in - Breakpoints_dim2_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim2_9, 10, Breakpoints_dim2_10)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_8) or abs_real(dim2_coord_in - Breakpoints_dim2_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim2_8, 9, Breakpoints_dim2_9)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_7) or abs_real(dim2_coord_in - Breakpoints_dim2_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim2_7, 8, Breakpoints_dim2_8)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_6) or abs_real(dim2_coord_in - Breakpoints_dim2_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim2_6, 7, Breakpoints_dim2_7)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_5) or abs_real(dim2_coord_in - Breakpoints_dim2_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim2_5, 6, Breakpoints_dim2_6)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_4) or abs_real(dim2_coord_in - Breakpoints_dim2_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim2_4, 5, Breakpoints_dim2_5)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_3) or abs_real(dim2_coord_in - Breakpoints_dim2_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim2_3, 4, Breakpoints_dim2_4)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_2) or abs_real(dim2_coord_in - Breakpoints_dim2_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim2_2, 3, Breakpoints_dim2_3)
	    else (if ((dim2_coord_in >= Breakpoints_dim2_1) or abs_real(dim2_coord_in - Breakpoints_dim2_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim2_1, 2, Breakpoints_dim2_2)
	    else (1, Breakpoints_dim2_1, 2, Breakpoints_dim2_2))))))))))));
	bound_node_index_inline1 = ((index_dim_1_1 * dimJump_1) + ((index_dim_2_1 - 1) * dimJump_2));
	bound_node_index_inline2 = ((index_dim_1_2 * dimJump_1) + ((index_dim_2_1 - 1) * dimJump_2));
	bound_node_index_inline3 = ((index_dim_1_1 * dimJump_1) + ((index_dim_2_2 - 1) * dimJump_2));
	bound_node_index_inline4 = ((index_dim_1_2 * dimJump_1) + ((index_dim_2_2 - 1) * dimJump_2));
	clip_input_1 = dim1_coord_in;
	clip_input_2 = dim2_coord_in;
	N_shape_1 = (((coords_dim_1_2 - clip_input_1) * (coords_dim_2_2 - clip_input_2)) / ((coords_dim_1_2 - coords_dim_1_1) * (coords_dim_2_2 - coords_dim_2_1)));
	N_shape_2 = (((clip_input_1 - coords_dim_1_1) * (coords_dim_2_2 - clip_input_2)) / ((coords_dim_1_2 - coords_dim_1_1) * (coords_dim_2_2 - coords_dim_2_1)));
	N_shape_3 = (((coords_dim_1_2 - clip_input_1) * (clip_input_2 - coords_dim_2_1)) / ((coords_dim_1_2 - coords_dim_1_1) * (coords_dim_2_2 - coords_dim_2_1)));
	N_shape_4 = (((clip_input_1 - coords_dim_1_1) * (clip_input_2 - coords_dim_2_1)) / ((coords_dim_1_2 - coords_dim_1_1) * (coords_dim_2_2 - coords_dim_2_1)));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
	inline_index_bound_node_3 = bound_node_index_inline3;
	weight_bound_node_3 = N_shape_3;
	inline_index_bound_node_4 = bound_node_index_inline4;
	weight_bound_node_4 = N_shape_4;
tel

(*
external node code for doing Lookup_nD
*)
node  n_minus_DLookup_newline_Table_100_996_Lookup_wrapper_node(
	dim1_coord_in : real; dim2_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real; inline_index_bound_node_3 : int;
	weight_bound_node_3 : real; inline_index_bound_node_4 : int; weight_bound_node_4 : real;
let
	(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2, inline_index_bound_node_3, weight_bound_node_3, inline_index_bound_node_4, weight_bound_node_4) = n_minus_DLookup_newline_Table_100_996_PreLookup_node(dim1_coord_in, dim2_coord_in);
	Interp_Using_Pre_Out = n_minus_DLookup_newline_Table_100_996_Interp_Using_Pre_ext_node(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2, inline_index_bound_node_3, weight_bound_node_3, inline_index_bound_node_4, weight_bound_node_4);
tel

(*
Original block name: LookupTableND_2D_medium_mesh_PP
*)
node  LookupTableND_2D_medium_mesh_PP(
	In1_1 : real; In2_1 : real;)
returns(
	Out1_1 : real;);
var 
	n_minus_DLookup_newline_Table_1 : real; __time_step : real; __nb_step : int;
let
	n_minus_DLookup_newline_Table_1 = n_minus_DLookup_newline_Table_100_996_Lookup_wrapper_node(In1_1, In2_1);
	Out1_1 = n_minus_DLookup_newline_Table_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

