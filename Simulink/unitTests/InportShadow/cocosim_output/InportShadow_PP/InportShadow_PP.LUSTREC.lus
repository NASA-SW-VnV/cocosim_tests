-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 13:39:32
(*
Original block name: InportShadow_PP/cross/Subsystem1
*)
node  Subsystem1_103_731(
	A1_1 : real; A1_2 : real; A1_3 : real; B1_1 : real; B1_2 : real;
	B1_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	Demux_1 : real; Demux_2 : real; Demux_3 : real; Demux1_1 : real; Demux1_2 : real;
	Demux1_3 : real; Mux_1 : real; Mux_2 : real; Mux_3 : real; ixj_1 : real;
	jxk_1 : real; kxi_1 : real;
let
	Demux_1 = A1_1;
	Demux_2 = A1_2;
	Demux_3 = A1_3;
	Demux1_1 = B1_1;
	Demux1_2 = B1_2;
	Demux1_3 = B1_3;
	Mux_1 = jxk_1;
	Mux_2 = kxi_1;
	Mux_3 = ixj_1;
	ixj_1 = (1.0 * Demux_1) * Demux1_2;
	jxk_1 = (1.0 * Demux_2) * Demux1_3;
	kxi_1 = (1.0 * Demux_3) * Demux1_1;
	Out1_1 = Mux_1;
	Out1_2 = Mux_2;
	Out1_3 = Mux_3;
tel

(*
Original block name: InportShadow_PP/cross/Subsystem2
*)
node  Subsystem2_132_310(
	A1_1 : real; A1_2 : real; A1_3 : real; B1_1 : real; B1_2 : real;
	B1_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	Demux_1 : real; Demux_2 : real; Demux_3 : real; Demux1_1 : real; Demux1_2 : real;
	Demux1_3 : real; Mux_1 : real; Mux_2 : real; Mux_3 : real; ixj_1 : real;
	jxk_1 : real; kxi_1 : real;
let
	Demux_1 = A1_1;
	Demux_2 = A1_2;
	Demux_3 = A1_3;
	Demux1_1 = B1_1;
	Demux1_2 = B1_2;
	Demux1_3 = B1_3;
	Mux_1 = jxk_1;
	Mux_2 = kxi_1;
	Mux_3 = ixj_1;
	ixj_1 = (1.0 * Demux_1) * Demux1_2;
	jxk_1 = (1.0 * Demux_2) * Demux1_3;
	kxi_1 = (1.0 * Demux_3) * Demux1_1;
	Out1_1 = Mux_1;
	Out1_2 = Mux_2;
	Out1_3 = Mux_3;
tel

(*
Original block name: InportShadow_PP/cross
*)
node  cross_48_176(
	A_1 : real; A_2 : real; A_3 : real; B_1 : real; B_2 : real;
	B_3 : real; __time_step : real; __nb_step : int;)
returns(
	C_1 : real; C_2 : real; C_3 : real;);
var 
	Subsystem1_1 : real; Subsystem1_2 : real; Subsystem1_3 : real; Subsystem2_1 : real; Subsystem2_2 : real;
	Subsystem2_3 : real; Sum_1 : real; Sum_2 : real; Sum_3 : real;
let
	(Subsystem1_1, Subsystem1_2, Subsystem1_3) = Subsystem1_103_731(A_1, A_2, A_3, B_1, B_2, B_3, __time_step, __nb_step);
	(Subsystem2_1, Subsystem2_2, Subsystem2_3) = Subsystem2_132_310(A_1, A_2, A_3, B_1, B_2, B_3, __time_step, __nb_step);
	Sum_1 = 0.0 + Subsystem2_1 - Subsystem1_1;
	Sum_2 = 0.0 + Subsystem2_2 - Subsystem1_2;
	Sum_3 = 0.0 + Subsystem2_3 - Subsystem1_3;
	C_1 = Sum_1;
	C_2 = Sum_2;
	C_3 = Sum_3;
tel

(*
Original block name: InportShadow_PP
*)
node  InportShadow_PP(
	A_1 : real; A_2 : real; A_3 : real; B_1 : real; B_2 : real;
	B_3 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	cross_1 : real; cross_2 : real; cross_3 : real; __time_step : real; __nb_step : int;
let
	(cross_1, cross_2, cross_3) = cross_48_176(A_1, A_2, A_3, B_1, B_2, B_3, __time_step, __nb_step);
	Out1_1 = cross_1;
	Out1_2 = cross_2;
	Out1_3 = cross_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

