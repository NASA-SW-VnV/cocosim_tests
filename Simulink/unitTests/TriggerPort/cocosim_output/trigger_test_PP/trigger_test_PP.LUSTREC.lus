-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 11:15:41
node  real_to_bool(
	x : real;)
returns(
	y : bool;);
let
	y = (x <> 0.0);
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem
*)
node  TriggeredSubsystem_14_448_condExecSS(
	In1_1 : real; Trigger_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	pre_Out1_1 : bool; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else false);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem_14_448((In1_1 when _isEnabled_clock), (Trigger_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem
*)
node  TriggeredSubsystem_14_448(
	In1_1 : real; Trigger_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Logical_newline_Operator_1 : bool;
let
	Logical_newline_Operator_1 = (real_to_bool(Trigger_1) and real_to_bool(In1_1));
	Out1_1 = Logical_newline_Operator_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem1
*)
node  TriggeredSubsystem1_22_190_condExecSS(
	In2_1 : real; Trigger_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out2_1 : real;);
var 
	pre_Out2_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out2_1 = (if (__nb_step > 0) then
		(pre (Out2_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out2_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem1_22_190((In2_1 when _isEnabled_clock), (Trigger_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out2_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem1
*)
node  TriggeredSubsystem1_22_190(
	In2_1 : real; Trigger_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out2_1 : real;);
var 
	Add_1 : real;
let
	Add_1 = 0.0 + Trigger_1 + In2_1;
	Out2_1 = Add_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem2
*)
node  TriggeredSubsystem2_30_615_condExecSS(
	In1_1 : real; Trigger_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem2_30_615((In1_1 when _isEnabled_clock), (Trigger_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem2
*)
node  TriggeredSubsystem2_30_615(
	In1_1 : real; Trigger_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Add_1 : real;
let
	Add_1 = 0.0 + Trigger_1 + In1_1;
	Out1_1 = Add_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem3
*)
node  TriggeredSubsystem3_38_197_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem3_38_197((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem3
*)
node  TriggeredSubsystem3_38_197(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = In1_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem4
*)
node  TriggeredSubsystem4_43_032_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem4_43_032((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem4
*)
node  TriggeredSubsystem4_43_032(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = In1_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem5
*)
node  TriggeredSubsystem5_48_026_condExecSS(
	In1_1 : real; Trigger_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem5_48_026((In1_1 when _isEnabled_clock), (Trigger_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem5
*)
node  TriggeredSubsystem5_48_026(
	In1_1 : real; Trigger_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Add_1 : real;
let
	Add_1 = 0.0 + Trigger_1 + In1_1;
	Out1_1 = Add_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem6
*)
node  TriggeredSubsystem6_56_026_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem6_56_026((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem6
*)
node  TriggeredSubsystem6_56_026(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = In1_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem7
*)
node  TriggeredSubsystem7_61_023_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem7_61_023((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem7
*)
node  TriggeredSubsystem7_61_023(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = In1_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem8
*)
node  TriggeredSubsystem8_66_025_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem8_66_025((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem8
*)
node  TriggeredSubsystem8_66_025(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
let
	Out1_1 = In1_1;
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem9
*)
node  TriggeredSubsystem9_72_023_condExecSS(
	In1_1 : real; In1_2 : real; In1_3 : real; Trigger_1 : real; _isEnabled : bool;
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	pre_Out1_1 : real; pre_Out1_2 : real; pre_Out1_3 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out1_2 = (if (__nb_step > 0) then
		(pre (Out1_2))
	    else 0.0);
	pre_Out1_3 = (if (__nb_step > 0) then
		(pre (Out1_3))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out1_2, Out1_3) = (merge _isEnabled_clock 
		(true -> TriggeredSubsystem9_72_023((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In1_3 when _isEnabled_clock), (Trigger_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out1_2, pre_Out1_3) when false(_isEnabled_clock)));
tel

(*
Original block name: trigger_test_PP/TriggeredSubsystem9
*)
node  TriggeredSubsystem9_72_023(
	In1_1 : real; In1_2 : real; In1_3 : real; Trigger_1 : real; __time_step : real;
	__nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	Add_1 : real; Add_2 : real; Add_3 : real;
let
	Add_1 = 0.0 + Trigger_1 + In1_1;
	Add_2 = 0.0 + Trigger_1 + In1_2;
	Add_3 = 0.0 + Trigger_1 + In1_3;
	Out1_1 = Add_1;
	Out1_2 = Add_2;
	Out1_3 = Add_3;
tel

(*
Original block name: trigger_test_PP
*)
node  trigger_test_PP(
	In1_1 : real; In2_1 : bool; In3_1 : real; In4_1 : int; In5_1 : real;
	In6_1 : real; In7_1 : real; In7_2 : real; In7_3 : real; In8_1 : bool;)
returns(
	Out1_1 : bool; Out2_1 : real; Out3_1 : real; Out4_1 : real; Out5_1 : real;
	Out6_1 : real; Out7_1 : real; Out8_1 : real; Out9_1 : real; Out10_1 : real;
	Out10_2 : real; Out10_3 : real;);
var 
	ExecutionCond_of_TriggeredSubsystem_14_448 : bool; TriggeredSubsystem_1 : bool; ExecutionCond_of_TriggeredSubsystem1_22_190 : bool; TriggeredSubsystem1_1 : real; ExecutionCond_of_TriggeredSubsystem2_30_615 : bool;
	TriggeredSubsystem2_1 : real; ExecutionCond_of_TriggeredSubsystem3_38_197 : bool; TriggeredSubsystem3_1 : real; ExecutionCond_of_TriggeredSubsystem4_43_032 : bool; TriggeredSubsystem4_1 : real;
	ExecutionCond_of_TriggeredSubsystem5_48_026 : bool; TriggeredSubsystem5_1 : real; ExecutionCond_of_TriggeredSubsystem6_56_026 : bool; TriggeredSubsystem6_1 : real; ExecutionCond_of_TriggeredSubsystem7_61_023 : bool;
	TriggeredSubsystem7_1 : real; ExecutionCond_of_TriggeredSubsystem8_66_025 : bool; TriggeredSubsystem8_1 : real; ExecutionCond_of_TriggeredSubsystem9_72_023 : bool; TriggeredSubsystem9_1 : real;
	TriggeredSubsystem9_2 : real; TriggeredSubsystem9_3 : real; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In4_1) and (In4_1 <= 127));
	ExecutionCond_of_TriggeredSubsystem_14_448 = ((false) -> ((In2_1 and (not ((pre (In2_1)))))));
	TriggeredSubsystem_1 = TriggeredSubsystem_14_448_condExecSS(In1_1, ((0.0) -> ((if ExecutionCond_of_TriggeredSubsystem_14_448 then
		1.0
	    else 0.0))), ExecutionCond_of_TriggeredSubsystem_14_448, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem1_22_190 = ((false) -> (((not (In2_1)) and (pre (In2_1)))));
	TriggeredSubsystem1_1 = TriggeredSubsystem1_22_190_condExecSS(In1_1, ((0.0) -> ((if ExecutionCond_of_TriggeredSubsystem1_22_190 then
		(- (1.0))
	    else 0.0))), ExecutionCond_of_TriggeredSubsystem1_22_190, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem2_30_615 = ((false) -> (((In2_1 and (not ((pre (In2_1))))) or ((not (In2_1)) and (pre (In2_1))))));
	TriggeredSubsystem2_1 = TriggeredSubsystem2_30_615_condExecSS(In1_1, ((0.0) -> ((if ExecutionCond_of_TriggeredSubsystem2_30_615 then
		(if ((false) -> ((In2_1 and (not ((pre (In2_1))))))) then
		1.0
	    else (- (1.0)))
	    else 0.0))), ExecutionCond_of_TriggeredSubsystem2_30_615, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem3_38_197 = ((false) -> (((In4_1 > 0) and (not ((pre ((In4_1 > 0))))))));
	TriggeredSubsystem3_1 = TriggeredSubsystem3_38_197_condExecSS(In3_1, ExecutionCond_of_TriggeredSubsystem3_38_197, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem4_43_032 = ((false) -> (((not ((In4_1 >= 0))) and (pre ((In4_1 >= 0))))));
	TriggeredSubsystem4_1 = TriggeredSubsystem4_43_032_condExecSS(In3_1, ExecutionCond_of_TriggeredSubsystem4_43_032, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem5_48_026 = ((false) -> ((((In4_1 > 0) and (not ((pre ((In4_1 > 0)))))) or ((not ((In4_1 >= 0))) and (pre ((In4_1 >= 0)))))));
	TriggeredSubsystem5_1 = TriggeredSubsystem5_48_026_condExecSS(In3_1, ((0.0) -> ((if ExecutionCond_of_TriggeredSubsystem5_48_026 then
		(if ((false) -> (((In4_1 > 0) and (not ((pre ((In4_1 > 0)))))))) then
		1.0
	    else (- (1.0)))
	    else 0.0))), ExecutionCond_of_TriggeredSubsystem5_48_026, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem6_56_026 = ((false) -> (((In6_1 > 0.0) and (not ((pre ((In6_1 > 0.0))))))));
	TriggeredSubsystem6_1 = TriggeredSubsystem6_56_026_condExecSS(In5_1, ExecutionCond_of_TriggeredSubsystem6_56_026, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem7_61_023 = ((false) -> (((not ((In6_1 >= 0.0))) and (pre ((In6_1 >= 0.0))))));
	TriggeredSubsystem7_1 = TriggeredSubsystem7_61_023_condExecSS(In5_1, ExecutionCond_of_TriggeredSubsystem7_61_023, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem8_66_025 = ((false) -> ((((In6_1 > 0.0) and (not ((pre ((In6_1 > 0.0)))))) or ((not ((In6_1 >= 0.0))) and (pre ((In6_1 >= 0.0)))))));
	TriggeredSubsystem8_1 = TriggeredSubsystem8_66_025_condExecSS(In5_1, ExecutionCond_of_TriggeredSubsystem8_66_025, __time_step, __nb_step);
	ExecutionCond_of_TriggeredSubsystem9_72_023 = ((false) -> (((In8_1 and (not ((pre (In8_1))))) or ((not (In8_1)) and (pre (In8_1))))));
	(TriggeredSubsystem9_1, TriggeredSubsystem9_2, TriggeredSubsystem9_3) = TriggeredSubsystem9_72_023_condExecSS(In7_1, In7_2, In7_3, ((0.0) -> ((if ExecutionCond_of_TriggeredSubsystem9_72_023 then
		(if ((false) -> ((In8_1 and (not ((pre (In8_1))))))) then
		1.0
	    else (- (1.0)))
	    else 0.0))), ExecutionCond_of_TriggeredSubsystem9_72_023, __time_step, __nb_step);
	Out1_1 = TriggeredSubsystem_1;
	Out2_1 = TriggeredSubsystem1_1;
	Out3_1 = TriggeredSubsystem2_1;
	Out4_1 = TriggeredSubsystem3_1;
	Out5_1 = TriggeredSubsystem4_1;
	Out6_1 = TriggeredSubsystem5_1;
	Out7_1 = TriggeredSubsystem6_1;
	Out8_1 = TriggeredSubsystem7_1;
	Out9_1 = TriggeredSubsystem8_1;
	Out10_1 = TriggeredSubsystem9_1;
	Out10_2 = TriggeredSubsystem9_2;
	Out10_3 = TriggeredSubsystem9_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

