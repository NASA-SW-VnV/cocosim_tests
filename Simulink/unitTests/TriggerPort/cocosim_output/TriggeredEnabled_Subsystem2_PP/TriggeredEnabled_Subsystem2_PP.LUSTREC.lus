-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 18:38:18
node  Enabled_Counter_315_873_triggeredSS(
	In1_1 : real; _isEnabled : bool; _isTriggered : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	pre_Out1_1 : real; pre_Out2_1 : real; _isTriggered_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out2_1 = (if (__nb_step > 0) then
		(pre (Out2_1))
	    else 0.0);
	_isTriggered_clock = _isTriggered;
	(Out1_1, Out2_1) = (merge _isTriggered_clock 
		(true -> Enabled_Counter_315_873((In1_1 when _isTriggered_clock), (__time_step when _isTriggered_clock), (__nb_step when _isTriggered_clock))) 
		(false -> (pre_Out1_1, pre_Out2_1) when false(_isTriggered_clock)));
tel

(*
Original block name: TriggeredEnabled_Subsystem2_PP/Enabled_Counter
*)
node  Enabled_Counter_315_873_condExecSS(
	In1_1 : real; _isEnabled : bool; _isTriggered : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	pre_Out1_1 : real; pre_Out2_1 : real; _isEnabled_clock : bool clock; _isEnabled_reset_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out2_1 = (if (__nb_step > 0) then
		(pre (Out2_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	_isEnabled_reset_clock = ((false) -> ((_isEnabled_clock and (not ((pre (_isEnabled_clock)))))));
	(Out1_1, Out2_1) = (merge _isEnabled_clock 
		(true -> (Enabled_Counter_315_873_triggeredSS((In1_1 when _isEnabled_clock), (_isEnabled when _isEnabled_clock), (_isTriggered when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock)) every _isEnabled_reset_clock)) 
		(false -> (pre_Out1_1, pre_Out2_1) when false(_isEnabled_clock)));
tel

(*
Original block name: TriggeredEnabled_Subsystem2_PP/Enabled_Counter
*)
node  Enabled_Counter_315_873(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
	Out2_1 = UnitDelay_1;
tel

(*
Original block name: TriggeredEnabled_Subsystem2_PP
*)
node  TriggeredEnabled_Subsystem2_PP(
	In1_1 : real; Enable_1 : bool; Trigger_1 : bool;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	ExecutionCond_of_Enabled_Counter_315_873 : bool; TriggerCond_of_Enabled_Counter_315_873 : bool; EnableCond_of_Enabled_Counter_315_873 : bool; Enabled_Counter_1 : real; Enabled_Counter_2 : real;
	__time_step : real; __nb_step : int;
let
	EnableCond_of_Enabled_Counter_315_873 = Enable_1;
	TriggerCond_of_Enabled_Counter_315_873 = ((false) -> ((Trigger_1 and (not ((pre (Trigger_1)))))));
	ExecutionCond_of_Enabled_Counter_315_873 = (EnableCond_of_Enabled_Counter_315_873 and TriggerCond_of_Enabled_Counter_315_873);
	(Enabled_Counter_1, Enabled_Counter_2) = Enabled_Counter_315_873_condExecSS(In1_1, EnableCond_of_Enabled_Counter_315_873, TriggerCond_of_Enabled_Counter_315_873, __time_step, __nb_step);
	Out1_1 = Enabled_Counter_1;
	Out2_1 = Enabled_Counter_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

