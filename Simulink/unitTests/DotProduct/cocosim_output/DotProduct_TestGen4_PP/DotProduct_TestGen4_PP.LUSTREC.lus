-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 13:12:58
node  int_to_int16_saturate(
	x : int;)
returns(
	y : int;);
let
	y = (if (x > 32767) then
		32767
	    else (if (x < -32768) then
		-32768
	    else x));
tel

(*
Original block name: DotProduct_TestGen4_PP/P
*)
node  P_15_710(
	In1_1 : int; In2_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : int;);
var 
	Product_1 : int; SSpec1_1 : int; SSpec2_1 : int; Sum_1 : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	assert ((0 <= In2_1) and (In2_1 <= 255));
	Product_1 = int_to_int16_saturate((1 * SSpec1_1) * SSpec2_1);
	SSpec1_1 = In1_1;
	SSpec2_1 = In2_1;
	Sum_1 = int_to_int16_saturate(0 + Product_1);
	Out1_1 = Sum_1;
tel

(*
Original block name: DotProduct_TestGen4_PP
*)
node  DotProduct_TestGen4_PP(
	In1_1 : int; In2_1 : int;)
returns(
	Out1_1 : int;);
var 
	P_1 : int; __time_step : real; __nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	assert ((0 <= In2_1) and (In2_1 <= 255));
	P_1 = P_15_710(In1_1, In2_1, __time_step, __nb_step);
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

