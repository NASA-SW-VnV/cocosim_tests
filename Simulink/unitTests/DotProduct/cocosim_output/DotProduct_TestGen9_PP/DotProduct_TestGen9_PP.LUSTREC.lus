-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:53:13
#open <conv>
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

(*
Original block name: DotProduct_TestGen9_PP/enable/E/P
*)
node  P_82_995(
	In1_1 : bool; In1_2 : bool; In2_1 : bool; In2_2 : bool; __time_step : real;
	__nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Product_1 : real; Product_2 : real; SSpec1_1 : bool; SSpec1_2 : bool; SSpec2_1 : bool;
	SSpec2_2 : bool; Sum_1 : real;
let
	Product_1 = int_to_real((1 * bool_to_int(SSpec1_1)) * bool_to_int(SSpec2_1));
	Product_2 = int_to_real((1 * bool_to_int(SSpec1_2)) * bool_to_int(SSpec2_2));
	SSpec1_1 = In1_1;
	SSpec1_2 = In1_2;
	SSpec2_1 = In2_1;
	SSpec2_2 = In2_2;
	Sum_1 = 0.0 + Product_1 + Product_2;
	Out1_1 = Sum_1;
tel

(*
Original block name: DotProduct_TestGen9_PP/enable/E
*)
node  E_73_317_condExecSS(
	In1_1 : bool; In1_2 : bool; In2_1 : bool; In2_2 : bool; _isEnabled : bool;
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> E_73_317((In1_1 when _isEnabled_clock), (In1_2 when _isEnabled_clock), (In2_1 when _isEnabled_clock), (In2_2 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: DotProduct_TestGen9_PP/enable/E
*)
node  E_73_317(
	In1_1 : bool; In1_2 : bool; In2_1 : bool; In2_2 : bool; __time_step : real;
	__nb_step : int;)
returns(
	Out1_1 : real;);
var 
	P_1 : real;
let
	P_1 = P_82_995(In1_1, In1_2, In2_1, In2_2, __time_step, __nb_step);
	Out1_1 = P_1;
tel

(*
Original block name: DotProduct_TestGen9_PP/enable
*)
node  enable_46_797(
	In1_1 : bool; In2_1 : bool; In2_2 : bool; In3_1 : bool; In3_2 : bool;
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	ExecutionCond_of_E_73_317 : bool; E_1 : real;
let
	ExecutionCond_of_E_73_317 = In1_1;
	E_1 = E_73_317_condExecSS(In2_1, In2_2, In3_1, In3_2, ExecutionCond_of_E_73_317, __time_step, __nb_step);
	Out1_1 = E_1;
tel

(*
Original block name: DotProduct_TestGen9_PP
*)
node  DotProduct_TestGen9_PP(
	In1_1 : bool; In2_1 : bool; In2_2 : bool; In3_1 : bool; In3_2 : bool;)
returns(
	Out1_1 : real;);
var 
	enable_1 : real; __time_step : real; __nb_step : int;
let
	enable_1 = enable_46_797(In1_1, In2_1, In2_2, In3_1, In3_2, __time_step, __nb_step);
	Out1_1 = enable_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

