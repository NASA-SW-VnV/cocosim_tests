-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 11:07:52
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

(*
Original block name: relop_multi_test_PP
*)
node  relop_multi_test_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; In3_1 : int; In3_2 : int; In3_3 : int; In4_1 : int;
	In5_1 : bool; In6_1 : bool; In6_2 : bool; In6_3 : bool; In19_1 : real;
	In19_2 : real; In19_3 : real; In19_4 : real; In19_5 : real; In19_6 : real;
	In20_1 : real; In21_1 : int; In22_1 : int; In22_2 : int; In22_3 : int;
	In22_4 : int; In22_5 : int; In22_6 : int; In23_1 : bool; In23_2 : bool;
	In23_3 : bool; In23_4 : bool; In23_5 : bool; In23_6 : bool; In24_1 : bool;
	In24_2 : bool; In24_3 : bool; In24_4 : bool; In24_5 : bool; In24_6 : bool;)
returns(
	Out1_1 : bool; Out1_2 : bool; Out1_3 : bool; Out2_1 : bool; Out2_2 : bool;
	Out2_3 : bool; Out3_1 : bool; Out3_2 : bool; Out3_3 : bool; Out10_1 : bool;
	Out10_2 : bool; Out10_3 : bool; Out10_4 : bool; Out10_5 : bool; Out10_6 : bool;
	Out11_1 : bool; Out11_2 : bool; Out11_3 : bool; Out11_4 : bool; Out11_5 : bool;
	Out11_6 : bool; Out12_1 : bool; Out12_2 : bool; Out12_3 : bool; Out12_4 : bool;
	Out12_5 : bool; Out12_6 : bool;);
var 
	Relational_newline_Operator_1 : bool; Relational_newline_Operator_2 : bool; Relational_newline_Operator_3 : bool; Relational_newline_Operator1_1 : bool; Relational_newline_Operator1_2 : bool;
	Relational_newline_Operator1_3 : bool; Relational_newline_Operator10_1 : bool; Relational_newline_Operator10_2 : bool; Relational_newline_Operator10_3 : bool; Relational_newline_Operator10_4 : bool;
	Relational_newline_Operator10_5 : bool; Relational_newline_Operator10_6 : bool; Relational_newline_Operator11_1 : bool; Relational_newline_Operator11_2 : bool; Relational_newline_Operator11_3 : bool;
	Relational_newline_Operator11_4 : bool; Relational_newline_Operator11_5 : bool; Relational_newline_Operator11_6 : bool; Relational_newline_Operator2_1 : bool; Relational_newline_Operator2_2 : bool;
	Relational_newline_Operator2_3 : bool; Relational_newline_Operator9_1 : bool; Relational_newline_Operator9_2 : bool; Relational_newline_Operator9_3 : bool; Relational_newline_Operator9_4 : bool;
	Relational_newline_Operator9_5 : bool; Relational_newline_Operator9_6 : bool; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In3_1) and (In3_1 <= 127));
	assert ((-128 <= In3_2) and (In3_2 <= 127));
	assert ((-128 <= In3_3) and (In3_3 <= 127));
	assert ((-128 <= In4_1) and (In4_1 <= 127));
	assert ((-128 <= In21_1) and (In21_1 <= 127));
	assert ((-128 <= In22_1) and (In22_1 <= 127));
	assert ((-128 <= In22_2) and (In22_2 <= 127));
	assert ((-128 <= In22_3) and (In22_3 <= 127));
	assert ((-128 <= In22_4) and (In22_4 <= 127));
	assert ((-128 <= In22_5) and (In22_5 <= 127));
	assert ((-128 <= In22_6) and (In22_6 <= 127));
	Relational_newline_Operator_1 = (In1_1 <= In2_1);
	Relational_newline_Operator_2 = (In1_2 <= In2_2);
	Relational_newline_Operator_3 = (In1_3 <= In2_3);
	Relational_newline_Operator1_1 = (In3_1 <= In4_1);
	Relational_newline_Operator1_2 = (In3_2 <= In4_1);
	Relational_newline_Operator1_3 = (In3_3 <= In4_1);
	Relational_newline_Operator10_1 = (In21_1 < In22_1);
	Relational_newline_Operator10_2 = (In21_1 < In22_2);
	Relational_newline_Operator10_3 = (In21_1 < In22_3);
	Relational_newline_Operator10_4 = (In21_1 < In22_4);
	Relational_newline_Operator10_5 = (In21_1 < In22_5);
	Relational_newline_Operator10_6 = (In21_1 < In22_6);
	Relational_newline_Operator11_1 = (bool_to_int(In23_1) < bool_to_int(In24_1));
	Relational_newline_Operator11_2 = (bool_to_int(In23_2) < bool_to_int(In24_2));
	Relational_newline_Operator11_3 = (bool_to_int(In23_3) < bool_to_int(In24_3));
	Relational_newline_Operator11_4 = (bool_to_int(In23_4) < bool_to_int(In24_4));
	Relational_newline_Operator11_5 = (bool_to_int(In23_5) < bool_to_int(In24_5));
	Relational_newline_Operator11_6 = (bool_to_int(In23_6) < bool_to_int(In24_6));
	Relational_newline_Operator2_1 = (bool_to_int(In5_1) <= bool_to_int(In6_1));
	Relational_newline_Operator2_2 = (bool_to_int(In5_1) <= bool_to_int(In6_2));
	Relational_newline_Operator2_3 = (bool_to_int(In5_1) <= bool_to_int(In6_3));
	Relational_newline_Operator9_1 = (In19_1 < In20_1);
	Relational_newline_Operator9_2 = (In19_2 < In20_1);
	Relational_newline_Operator9_3 = (In19_3 < In20_1);
	Relational_newline_Operator9_4 = (In19_4 < In20_1);
	Relational_newline_Operator9_5 = (In19_5 < In20_1);
	Relational_newline_Operator9_6 = (In19_6 < In20_1);
	Out1_1 = Relational_newline_Operator_1;
	Out1_2 = Relational_newline_Operator_2;
	Out1_3 = Relational_newline_Operator_3;
	Out2_1 = Relational_newline_Operator1_1;
	Out2_2 = Relational_newline_Operator1_2;
	Out2_3 = Relational_newline_Operator1_3;
	Out3_1 = Relational_newline_Operator2_1;
	Out3_2 = Relational_newline_Operator2_2;
	Out3_3 = Relational_newline_Operator2_3;
	Out10_1 = Relational_newline_Operator9_1;
	Out10_2 = Relational_newline_Operator9_2;
	Out10_3 = Relational_newline_Operator9_3;
	Out10_4 = Relational_newline_Operator9_4;
	Out10_5 = Relational_newline_Operator9_5;
	Out10_6 = Relational_newline_Operator9_6;
	Out11_1 = Relational_newline_Operator10_1;
	Out11_2 = Relational_newline_Operator10_2;
	Out11_3 = Relational_newline_Operator10_3;
	Out11_4 = Relational_newline_Operator10_4;
	Out11_5 = Relational_newline_Operator10_5;
	Out11_6 = Relational_newline_Operator10_6;
	Out12_1 = Relational_newline_Operator11_1;
	Out12_2 = Relational_newline_Operator11_2;
	Out12_3 = Relational_newline_Operator11_3;
	Out12_4 = Relational_newline_Operator11_4;
	Out12_5 = Relational_newline_Operator11_5;
	Out12_6 = Relational_newline_Operator11_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

