-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:00:26
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

node  bool_to_real(
	x : bool;)
returns(
	y : real;);
let
	y = (if x then
		1.0
	    else 0.0);
tel

(*
Original block name: relop_test_PP
*)
node  relop_test_PP(
	In1_1 : real; In2_1 : real; In3_1 : int; In4_1 : int; In5_1 : bool;
	In6_1 : real; In7_1 : real; In8_1 : real; In9_1 : int; In10_1 : int;
	In11_1 : bool; In12_1 : bool; In13_1 : real; In14_1 : real; In15_1 : int;
	In16_1 : int; In17_1 : bool; In18_1 : bool; In19_1 : real; In20_1 : real;
	In21_1 : int; In22_1 : int; In23_1 : bool; In24_1 : bool; In25_1 : real;
	In26_1 : real; In27_1 : int; In28_1 : int; In29_1 : bool; In30_1 : bool;
	In31_1 : real; In32_1 : real; In33_1 : int; In34_1 : int; In35_1 : bool;
	In36_1 : bool;)
returns(
	Out1_1 : bool; Out2_1 : bool; Out3_1 : bool; Out4_1 : bool; Out5_1 : bool;
	Out6_1 : bool; Out7_1 : bool; Out8_1 : bool; Out9_1 : bool; Out10_1 : bool;
	Out11_1 : bool; Out12_1 : bool; Out13_1 : bool; Out14_1 : bool; Out15_1 : bool;
	Out16_1 : bool; Out17_1 : bool; Out18_1 : bool;);
var 
	Relational_newline_Operator_1 : bool; Relational_newline_Operator1_1 : bool; Relational_newline_Operator10_1 : bool; Relational_newline_Operator11_1 : bool; Relational_newline_Operator12_1 : bool;
	Relational_newline_Operator13_1 : bool; Relational_newline_Operator14_1 : bool; Relational_newline_Operator15_1 : bool; Relational_newline_Operator16_1 : bool; Relational_newline_Operator17_1 : bool;
	Relational_newline_Operator2_1 : bool; Relational_newline_Operator3_1 : bool; Relational_newline_Operator4_1 : bool; Relational_newline_Operator5_1 : bool; Relational_newline_Operator6_1 : bool;
	Relational_newline_Operator7_1 : bool; Relational_newline_Operator8_1 : bool; Relational_newline_Operator9_1 : bool; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In3_1) and (In3_1 <= 127));
	assert ((-128 <= In4_1) and (In4_1 <= 127));
	assert ((-128 <= In9_1) and (In9_1 <= 127));
	assert ((-128 <= In10_1) and (In10_1 <= 127));
	assert ((-128 <= In15_1) and (In15_1 <= 127));
	assert ((-128 <= In16_1) and (In16_1 <= 127));
	assert ((-128 <= In21_1) and (In21_1 <= 127));
	assert ((-128 <= In22_1) and (In22_1 <= 127));
	assert ((-128 <= In27_1) and (In27_1 <= 127));
	assert ((-128 <= In28_1) and (In28_1 <= 127));
	assert ((-128 <= In33_1) and (In33_1 <= 127));
	assert ((-128 <= In34_1) and (In34_1 <= 127));
	Relational_newline_Operator_1 = (In1_1 <= In2_1);
	Relational_newline_Operator1_1 = (In3_1 <= In4_1);
	Relational_newline_Operator10_1 = (In21_1 < In22_1);
	Relational_newline_Operator11_1 = (bool_to_int(In23_1) < bool_to_int(In24_1));
	Relational_newline_Operator12_1 = (In25_1 >= In26_1);
	Relational_newline_Operator13_1 = (In27_1 >= In28_1);
	Relational_newline_Operator14_1 = (bool_to_int(In29_1) >= bool_to_int(In30_1));
	Relational_newline_Operator15_1 = (In31_1 > In32_1);
	Relational_newline_Operator16_1 = (In33_1 > In34_1);
	Relational_newline_Operator17_1 = (bool_to_int(In35_1) > bool_to_int(In36_1));
	Relational_newline_Operator2_1 = (bool_to_real(In5_1) <= In6_1);
	Relational_newline_Operator3_1 = (In7_1 = In8_1);
	Relational_newline_Operator4_1 = (In9_1 = In10_1);
	Relational_newline_Operator5_1 = (In11_1 = In12_1);
	Relational_newline_Operator6_1 = (In13_1 <> In14_1);
	Relational_newline_Operator7_1 = (In15_1 <> In16_1);
	Relational_newline_Operator8_1 = (In17_1 <> In18_1);
	Relational_newline_Operator9_1 = (In19_1 < In20_1);
	Out1_1 = Relational_newline_Operator_1;
	Out2_1 = Relational_newline_Operator1_1;
	Out3_1 = Relational_newline_Operator2_1;
	Out4_1 = Relational_newline_Operator3_1;
	Out5_1 = Relational_newline_Operator4_1;
	Out6_1 = Relational_newline_Operator5_1;
	Out7_1 = Relational_newline_Operator6_1;
	Out8_1 = Relational_newline_Operator7_1;
	Out9_1 = Relational_newline_Operator8_1;
	Out10_1 = Relational_newline_Operator9_1;
	Out11_1 = Relational_newline_Operator10_1;
	Out12_1 = Relational_newline_Operator11_1;
	Out13_1 = Relational_newline_Operator12_1;
	Out14_1 = Relational_newline_Operator13_1;
	Out15_1 = Relational_newline_Operator14_1;
	Out16_1 = Relational_newline_Operator15_1;
	Out17_1 = Relational_newline_Operator16_1;
	Out18_1 = Relational_newline_Operator17_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

