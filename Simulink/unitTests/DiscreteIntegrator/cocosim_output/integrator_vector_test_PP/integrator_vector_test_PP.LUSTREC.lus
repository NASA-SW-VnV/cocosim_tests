-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 10:57:06
(*
Original block name: integrator_vector_test_PP/Integrator
*)
node  Integrator_20_006(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sample_2 = (f_lpar_x_rpar__2 * 1.0);
	Sample_3 = (f_lpar_x_rpar__3 * 1.0);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator1
*)
node  Integrator1_21_166(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sample_2 = (f_lpar_x_rpar__2 * 1.0);
	Sample_3 = (f_lpar_x_rpar__3 * 1.0);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator10/Sample
*)
node  Sample_129_005(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator10
*)
node  Integrator10_22_011(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_129_005(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-2.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator11/Sample
*)
node  Sample_127_007(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator11
*)
node  Integrator11_23_006(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_127_007(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-2.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator12/Sample
*)
node  Sample_125_005(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 3.0;
	K_3 = 5.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator12
*)
node  Integrator12_24_005(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_125_005(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-2.50) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator13/Sample
*)
node  Sample_119_005(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator13
*)
node  Integrator13_25_005(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_119_005(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-2.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator14/Sample
*)
node  Sample_139_006(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator14
*)
node  Integrator14_26_006(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_139_006(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-25.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator2
*)
node  Integrator2_27_006(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sample_2 = (f_lpar_x_rpar__2 * 1.0);
	Sample_3 = (f_lpar_x_rpar__3 * 1.0);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator3/Sample
*)
node  Sample_117_005(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 3.0;
	K_3 = 5.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator3
*)
node  Integrator3_28_005(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_117_005(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator4/Sample
*)
node  Sample_133_008(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator4
*)
node  Integrator4_29_006(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_133_008(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator5/Sample
*)
node  Sample_98_004(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 0.10;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator5
*)
node  Integrator5_30_008(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_98_004(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator6/Sample
*)
node  Sample_136_005(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 3.0;
	K_3 = 5.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator6
*)
node  Integrator6_31_167(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_136_005(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator7/Sample
*)
node  Sample_121_005(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator7
*)
node  Integrator7_32_011(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_121_005(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator8/Sample
*)
node  Sample_131_005(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 1.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator8
*)
node  Integrator8_33_007(
	f_lpar_x_rpar__1 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_131_005(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator9/Sample
*)
node  Sample_99_005(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 3.0;
	K_3 = 5.0;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_vector_test_PP/Integrator9
*)
node  Integrator9_34_008(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sample_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real;
let
	(Sample_1, Sample_2, Sample_3) = Sample_99_005(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	Sum6_3 = 0.0 + Sample_3 + UnitDelay_3;
	UnitDelay_1 = ((-2.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum6_2))));
	UnitDelay_3 = ((-2.50) -> ((pre (Sum6_3))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
	F_lpar_x_rpar__3 = UnitDelay_3;
tel

(*
Original block name: integrator_vector_test_PP
*)
node  integrator_vector_test_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In2_1 : real; In2_2 : real;
	In2_3 : real; In3_1 : real; In3_2 : real; In3_3 : real; In4_1 : real;
	In4_2 : real; In4_3 : real; In5_1 : real; In5_2 : real; In5_3 : real;
	In6_1 : real; In6_2 : real; In6_3 : real; In7_1 : real; In8_1 : real;
	In9_1 : real; In10_1 : real; In10_2 : real; In10_3 : real; In11_1 : real;
	In11_2 : real; In11_3 : real; In12_1 : real; In12_2 : real; In12_3 : real;
	In13_1 : real; In14_1 : real; In15_1 : real;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real; Out2_1 : real; Out2_2 : real;
	Out2_3 : real; Out3_1 : real; Out3_2 : real; Out3_3 : real; Out4_1 : real;
	Out4_2 : real; Out4_3 : real; Out5_1 : real; Out5_2 : real; Out5_3 : real;
	Out6_1 : real; Out6_2 : real; Out6_3 : real; Out7_1 : real; Out7_2 : real;
	Out7_3 : real; Out8_1 : real; Out8_2 : real; Out8_3 : real; Out9_1 : real;
	Out9_2 : real; Out9_3 : real; Out10_1 : real; Out10_2 : real; Out10_3 : real;
	Out11_1 : real; Out11_2 : real; Out11_3 : real; Out12_1 : real; Out12_2 : real;
	Out12_3 : real; Out13_1 : real; Out13_2 : real; Out13_3 : real; Out14_1 : real;
	Out14_2 : real; Out14_3 : real; Out15_1 : real; Out15_2 : real; Out15_3 : real;);
var 
	Integrator_1 : real; Integrator_2 : real; Integrator_3 : real; Integrator1_1 : real; Integrator1_2 : real;
	Integrator1_3 : real; Integrator10_1 : real; Integrator10_2 : real; Integrator10_3 : real; Integrator11_1 : real;
	Integrator11_2 : real; Integrator11_3 : real; Integrator12_1 : real; Integrator12_2 : real; Integrator12_3 : real;
	Integrator13_1 : real; Integrator13_2 : real; Integrator13_3 : real; Integrator14_1 : real; Integrator14_2 : real;
	Integrator14_3 : real; Integrator2_1 : real; Integrator2_2 : real; Integrator2_3 : real; Integrator3_1 : real;
	Integrator3_2 : real; Integrator3_3 : real; Integrator4_1 : real; Integrator4_2 : real; Integrator4_3 : real;
	Integrator5_1 : real; Integrator5_2 : real; Integrator5_3 : real; Integrator6_1 : real; Integrator6_2 : real;
	Integrator6_3 : real; Integrator7_1 : real; Integrator7_2 : real; Integrator7_3 : real; Integrator8_1 : real;
	Integrator8_2 : real; Integrator8_3 : real; Integrator9_1 : real; Integrator9_2 : real; Integrator9_3 : real;
	__time_step : real; __nb_step : int;
let
	(Integrator_1, Integrator_2, Integrator_3) = Integrator_20_006(In1_1, In1_2, In1_3, __time_step, __nb_step);
	(Integrator1_1, Integrator1_2, Integrator1_3) = Integrator1_21_166(In2_1, In2_2, In2_3, __time_step, __nb_step);
	(Integrator10_1, Integrator10_2, Integrator10_3) = Integrator10_22_011(In11_1, In11_2, In11_3, __time_step, __nb_step);
	(Integrator11_1, Integrator11_2, Integrator11_3) = Integrator11_23_006(In12_1, In12_2, In12_3, __time_step, __nb_step);
	(Integrator12_1, Integrator12_2, Integrator12_3) = Integrator12_24_005(In13_1, __time_step, __nb_step);
	(Integrator13_1, Integrator13_2, Integrator13_3) = Integrator13_25_005(In14_1, __time_step, __nb_step);
	(Integrator14_1, Integrator14_2, Integrator14_3) = Integrator14_26_006(In15_1, __time_step, __nb_step);
	(Integrator2_1, Integrator2_2, Integrator2_3) = Integrator2_27_006(In3_1, In3_2, In3_3, __time_step, __nb_step);
	(Integrator3_1, Integrator3_2, Integrator3_3) = Integrator3_28_005(In4_1, In4_2, In4_3, __time_step, __nb_step);
	(Integrator4_1, Integrator4_2, Integrator4_3) = Integrator4_29_006(In5_1, In5_2, In5_3, __time_step, __nb_step);
	(Integrator5_1, Integrator5_2, Integrator5_3) = Integrator5_30_008(In6_1, In6_2, In6_3, __time_step, __nb_step);
	(Integrator6_1, Integrator6_2, Integrator6_3) = Integrator6_31_167(In7_1, __time_step, __nb_step);
	(Integrator7_1, Integrator7_2, Integrator7_3) = Integrator7_32_011(In8_1, __time_step, __nb_step);
	(Integrator8_1, Integrator8_2, Integrator8_3) = Integrator8_33_007(In9_1, __time_step, __nb_step);
	(Integrator9_1, Integrator9_2, Integrator9_3) = Integrator9_34_008(In10_1, In10_2, In10_3, __time_step, __nb_step);
	Out1_1 = Integrator_1;
	Out1_2 = Integrator_2;
	Out1_3 = Integrator_3;
	Out2_1 = Integrator1_1;
	Out2_2 = Integrator1_2;
	Out2_3 = Integrator1_3;
	Out3_1 = Integrator2_1;
	Out3_2 = Integrator2_2;
	Out3_3 = Integrator2_3;
	Out4_1 = Integrator3_1;
	Out4_2 = Integrator3_2;
	Out4_3 = Integrator3_3;
	Out5_1 = Integrator4_1;
	Out5_2 = Integrator4_2;
	Out5_3 = Integrator4_3;
	Out6_1 = Integrator5_1;
	Out6_2 = Integrator5_2;
	Out6_3 = Integrator5_3;
	Out7_1 = Integrator6_1;
	Out7_2 = Integrator6_2;
	Out7_3 = Integrator6_3;
	Out8_1 = Integrator7_1;
	Out8_2 = Integrator7_2;
	Out8_3 = Integrator7_3;
	Out9_1 = Integrator8_1;
	Out9_2 = Integrator8_2;
	Out9_3 = Integrator8_3;
	Out10_1 = Integrator9_1;
	Out10_2 = Integrator9_2;
	Out10_3 = Integrator9_3;
	Out11_1 = Integrator10_1;
	Out11_2 = Integrator10_2;
	Out11_3 = Integrator10_3;
	Out12_1 = Integrator11_1;
	Out12_2 = Integrator11_2;
	Out12_3 = Integrator11_3;
	Out13_1 = Integrator12_1;
	Out13_2 = Integrator12_2;
	Out13_3 = Integrator12_3;
	Out14_1 = Integrator13_1;
	Out14_2 = Integrator13_2;
	Out14_3 = Integrator13_3;
	Out15_1 = Integrator14_1;
	Out15_2 = Integrator14_2;
	Out15_3 = Integrator14_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

