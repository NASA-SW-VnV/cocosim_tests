-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 01:27:49
(*
Original block name: DiscreteIntegrator_TestGen3_PP/reset/R/P
*)
node  P_10_132(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real;);
var 
	Sample_1 : real; Sample_2 : real; Sum6_1 : real; Sum6_2 : real; UnitDelay_1 : real;
	UnitDelay_2 : real;
let
	Sample_1 = (f_lpar_x_rpar__1 * 0.20);
	Sample_2 = (f_lpar_x_rpar__2 * 0.20);
	Sum6_1 = 0.0 + Sample_1 + UnitDelay_1;
	Sum6_2 = 0.0 + Sample_2 + UnitDelay_2;
	UnitDelay_1 = ((7.0) -> ((pre (Sum6_1))));
	UnitDelay_2 = ((7.0) -> ((pre (Sum6_2))));
	F_lpar_x_rpar__1 = UnitDelay_1;
	F_lpar_x_rpar__2 = UnitDelay_2;
tel

(*
Original block name: DiscreteIntegrator_TestGen3_PP/reset/R
*)
node  R_7_131(
	In1_1 : real; In1_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	P_1 : real; P_2 : real;
let
	(P_1, P_2) = P_10_132(In1_1, In1_2, __time_step, __nb_step);
	Out1_1 = P_1;
	Out1_2 = P_2;
tel

(*
Original block name: DiscreteIntegrator_TestGen3_PP/reset
*)
node  reset_4_152(
	R_cond_1 : bool; In1_1 : real; In1_2 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	ResetCond_of_R_7_131 : bool; R_1 : real; R_2 : real;
let
	ResetCond_of_R_7_131 = ((false) -> ((R_cond_1 and (not ((pre (R_cond_1)))))));
	(R_1, R_2) = (R_7_131(In1_1, In1_2, __time_step, __nb_step) every ResetCond_of_R_7_131);
	Out1_1 = R_1;
	Out1_2 = R_2;
tel

(*
Original block name: DiscreteIntegrator_TestGen3_PP
*)
node  DiscreteIntegrator_TestGen3_PP(
	In1_1 : bool; In2_1 : real; In2_2 : real;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	reset_1 : real; reset_2 : real; __time_step : real; __nb_step : int;
let
	(reset_1, reset_2) = reset_4_152(In1_1, In2_1, In2_2, __time_step, __nb_step);
	Out1_1 = reset_1;
	Out1_2 = reset_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

