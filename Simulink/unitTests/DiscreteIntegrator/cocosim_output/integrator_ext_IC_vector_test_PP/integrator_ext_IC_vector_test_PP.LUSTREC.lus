-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 09:32:36
(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator
*)
node  Integrator_17_009(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; x0_1 : real; __time_step : real;
	__nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Sample_1 : real; Sample_2 : real; Sample_3 : real;
	Sum1_1 : real; Sum1_2 : real; Sum1_3 : real; Sum2_1 : real; Sum2_2 : real;
	Sum2_3 : real; Sum6_1 : real; Sum6_2 : real; Sum6_3 : real; UnitDelay_1 : real;
	UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sample_2 = (f_lpar_x_rpar__2 * 1.0);
	Sample_3 = (f_lpar_x_rpar__3 * 1.0);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_2 + Sum2_2;
	Sum1_3 = 0.0 + Sample_3 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_1;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_1;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_1;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_1;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator1
*)
node  Integrator1_18_005(
	f_lpar_x_rpar__1 : real; x0_1 : real; x0_2 : real; x0_3 : real; __time_step : real;
	__nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Product_2 : real; Product_3 : real; Sample_1 : real;
	Sum1_1 : real; Sum1_2 : real; Sum1_3 : real; Sum2_1 : real; Sum2_2 : real;
	Sum2_3 : real; Sum6_1 : real; Sum6_2 : real; Sum6_3 : real; UnitDelay_1 : real;
	UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	Product_2 = (1.0 * x0_2) * UnitDelay1_1;
	Product_3 = (1.0 * x0_3) * UnitDelay1_1;
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_1 + Sum2_2;
	Sum1_3 = 0.0 + Sample_1 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_3;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator2
*)
node  Integrator2_19_005(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; x0_1 : real; x0_2 : real;
	x0_3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Product_2 : real; Product_3 : real; Sample_1 : real;
	Sample_2 : real; Sample_3 : real; Sum1_1 : real; Sum1_2 : real; Sum1_3 : real;
	Sum2_1 : real; Sum2_2 : real; Sum2_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	Product_2 = (1.0 * x0_2) * UnitDelay1_1;
	Product_3 = (1.0 * x0_3) * UnitDelay1_1;
	Sample_1 = (f_lpar_x_rpar__1 * 1.0);
	Sample_2 = (f_lpar_x_rpar__2 * 1.0);
	Sample_3 = (f_lpar_x_rpar__3 * 1.0);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_2 + Sum2_2;
	Sum1_3 = 0.0 + Sample_3 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_3;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator3/Sample
*)
node  Sample_2995_041(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 0.90;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator3
*)
node  Integrator3_20_005(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; x0_1 : real; __time_step : real;
	__nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Sample_1 : real; Sample_2 : real; Sample_3 : real;
	Sum1_1 : real; Sum1_2 : real; Sum1_3 : real; Sum2_1 : real; Sum2_2 : real;
	Sum2_3 : real; Sum6_1 : real; Sum6_2 : real; Sum6_3 : real; UnitDelay_1 : real;
	UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	(Sample_1, Sample_2, Sample_3) = Sample_2995_041(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_2 + Sum2_2;
	Sum1_3 = 0.0 + Sample_3 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_1;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_1;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_1;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_1;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator4/Sample
*)
node  Sample_3017_041(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 0.90;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_1) * K_2;
	Product_3 = (1.0 * u_1) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator4
*)
node  Integrator4_21_165(
	f_lpar_x_rpar__1 : real; x0_1 : real; x0_2 : real; x0_3 : real; __time_step : real;
	__nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Product_2 : real; Product_3 : real; Sample_1 : real;
	Sample_2 : real; Sample_3 : real; Sum1_1 : real; Sum1_2 : real; Sum1_3 : real;
	Sum2_1 : real; Sum2_2 : real; Sum2_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	Product_2 = (1.0 * x0_2) * UnitDelay1_1;
	Product_3 = (1.0 * x0_3) * UnitDelay1_1;
	(Sample_1, Sample_2, Sample_3) = Sample_3017_041(f_lpar_x_rpar__1, __time_step, __nb_step);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_2 + Sum2_2;
	Sum1_3 = 0.0 + Sample_3 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_3;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator5/Sample
*)
node  Sample_3039_041(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out1_2 : real; Out1_3 : real;);
var 
	K_1 : real; K_2 : real; K_3 : real; Product_1 : real; Product_2 : real;
	Product_3 : real;
let
	K_1 = 2.0;
	K_2 = 5.0;
	K_3 = 0.90;
	Product_1 = (1.0 * u_1) * K_1;
	Product_2 = (1.0 * u_2) * K_2;
	Product_3 = (1.0 * u_3) * K_3;
	Out1_1 = Product_1;
	Out1_2 = Product_2;
	Out1_3 = Product_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP/Integrator5
*)
node  Integrator5_22_010(
	f_lpar_x_rpar__1 : real; f_lpar_x_rpar__2 : real; f_lpar_x_rpar__3 : real; x0_1 : real; x0_2 : real;
	x0_3 : real; __time_step : real; __nb_step : int;)
returns(
	F_lpar_x_rpar__1 : real; F_lpar_x_rpar__2 : real; F_lpar_x_rpar__3 : real;);
var 
	Constant_1 : real; Product_1 : real; Product_2 : real; Product_3 : real; Sample_1 : real;
	Sample_2 : real; Sample_3 : real; Sum1_1 : real; Sum1_2 : real; Sum1_3 : real;
	Sum2_1 : real; Sum2_2 : real; Sum2_3 : real; Sum6_1 : real; Sum6_2 : real;
	Sum6_3 : real; UnitDelay_1 : real; UnitDelay_2 : real; UnitDelay_3 : real; UnitDelay1_1 : real;
let
	Constant_1 = 0.0;
	Product_1 = (1.0 * x0_1) * UnitDelay1_1;
	Product_2 = (1.0 * x0_2) * UnitDelay1_1;
	Product_3 = (1.0 * x0_3) * UnitDelay1_1;
	(Sample_1, Sample_2, Sample_3) = Sample_3039_041(f_lpar_x_rpar__1, f_lpar_x_rpar__2, f_lpar_x_rpar__3, __time_step, __nb_step);
	Sum1_1 = 0.0 + Sample_1 + Sum2_1;
	Sum1_2 = 0.0 + Sample_2 + Sum2_2;
	Sum1_3 = 0.0 + Sample_3 + Sum2_3;
	Sum2_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum2_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum2_3 = 0.0 + UnitDelay_3 + Product_3;
	Sum6_1 = 0.0 + UnitDelay_1 + Product_1;
	Sum6_2 = 0.0 + UnitDelay_2 + Product_2;
	Sum6_3 = 0.0 + UnitDelay_3 + Product_3;
	UnitDelay_1 = ((0.0) -> ((pre (Sum1_1))));
	UnitDelay_2 = ((0.0) -> ((pre (Sum1_2))));
	UnitDelay_3 = ((0.0) -> ((pre (Sum1_3))));
	UnitDelay1_1 = ((1.0) -> ((pre (Constant_1))));
	F_lpar_x_rpar__1 = Sum6_1;
	F_lpar_x_rpar__2 = Sum6_2;
	F_lpar_x_rpar__3 = Sum6_3;
tel

(*
Original block name: integrator_ext_IC_vector_test_PP
*)
node  integrator_ext_IC_vector_test_PP(
	In4_1 : real; In4_2 : real; In4_3 : real; In7_1 : real; In1_1 : real;
	In2_1 : real; In2_2 : real; In2_3 : real; In3_1 : real; In3_2 : real;
	In3_3 : real; In5_1 : real; In5_2 : real; In5_3 : real; In6_1 : real;
	In6_2 : real; In6_3 : real; In8_1 : real; In9_1 : real; In10_1 : real;
	In10_2 : real; In10_3 : real; In11_1 : real; In11_2 : real; In11_3 : real;
	In12_1 : real; In12_2 : real; In12_3 : real;)
returns(
	Out4_1 : real; Out4_2 : real; Out4_3 : real; Out1_1 : real; Out1_2 : real;
	Out1_3 : real; Out2_1 : real; Out2_2 : real; Out2_3 : real; Out3_1 : real;
	Out3_2 : real; Out3_3 : real; Out5_1 : real; Out5_2 : real; Out5_3 : real;
	Out6_1 : real; Out6_2 : real; Out6_3 : real;);
var 
	Integrator_1 : real; Integrator_2 : real; Integrator_3 : real; Integrator1_1 : real; Integrator1_2 : real;
	Integrator1_3 : real; Integrator2_1 : real; Integrator2_2 : real; Integrator2_3 : real; Integrator3_1 : real;
	Integrator3_2 : real; Integrator3_3 : real; Integrator4_1 : real; Integrator4_2 : real; Integrator4_3 : real;
	Integrator5_1 : real; Integrator5_2 : real; Integrator5_3 : real; __time_step : real; __nb_step : int;
let
	(Integrator_1, Integrator_2, Integrator_3) = Integrator_17_009(In4_1, In4_2, In4_3, In7_1, __time_step, __nb_step);
	(Integrator1_1, Integrator1_2, Integrator1_3) = Integrator1_18_005(In1_1, In2_1, In2_2, In2_3, __time_step, __nb_step);
	(Integrator2_1, Integrator2_2, Integrator2_3) = Integrator2_19_005(In3_1, In3_2, In3_3, In5_1, In5_2, In5_3, __time_step, __nb_step);
	(Integrator3_1, Integrator3_2, Integrator3_3) = Integrator3_20_005(In6_1, In6_2, In6_3, In8_1, __time_step, __nb_step);
	(Integrator4_1, Integrator4_2, Integrator4_3) = Integrator4_21_165(In9_1, In10_1, In10_2, In10_3, __time_step, __nb_step);
	(Integrator5_1, Integrator5_2, Integrator5_3) = Integrator5_22_010(In11_1, In11_2, In11_3, In12_1, In12_2, In12_3, __time_step, __nb_step);
	Out4_1 = Integrator_1;
	Out4_2 = Integrator_2;
	Out4_3 = Integrator_3;
	Out1_1 = Integrator1_1;
	Out1_2 = Integrator1_2;
	Out1_3 = Integrator1_3;
	Out2_1 = Integrator2_1;
	Out2_2 = Integrator2_2;
	Out2_3 = Integrator2_3;
	Out3_1 = Integrator3_1;
	Out3_2 = Integrator3_2;
	Out3_3 = Integrator3_3;
	Out5_1 = Integrator4_1;
	Out5_2 = Integrator4_2;
	Out5_3 = Integrator4_3;
	Out6_1 = Integrator5_1;
	Out6_2 = Integrator5_2;
	Out6_3 = Integrator5_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

