-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 22-Oct-2020 22:44:28
node  abs_int(
	x : int;)
returns(
	y : int;);
let
	y = (if (x >= 0) then
		x
	    else (- (x)));
tel

node  rem_int_int(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if ((y = 0) or (x = 0)) then
		0
	    else ((x mod y) - (if (((x mod y) <> 0) and (x <= 0)) then abs_int(y) else 0)));
tel

node  int_to_uint8(
	x : int;)
returns(
	y : int;);
let
	y = (if (x > 255) then
		(0 + rem_int_int((x - 255 - 1), 256))
	    else (if (x < 0) then
		(255 + rem_int_int((x + 0 + 1), 256))
	    else x));
tel

(*
Original block name: Abs_TestGen16_PP
*)
node  Abs_TestGen16_PP(
	In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int; In1_5 : int;
	In1_6 : int;)
returns(
	Out1_1 : int; Out1_2 : int; Out1_3 : int; Out1_4 : int; Out1_5 : int;
	Out1_6 : int;);
var 
	P_1 : int; P_2 : int; P_3 : int; P_4 : int; P_5 : int;
	P_6 : int; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In1_1) and (In1_1 <= 127));
	assert ((-128 <= In1_2) and (In1_2 <= 127));
	assert ((-128 <= In1_3) and (In1_3 <= 127));
	assert ((-128 <= In1_4) and (In1_4 <= 127));
	assert ((-128 <= In1_5) and (In1_5 <= 127));
	assert ((-128 <= In1_6) and (In1_6 <= 127));
	P_1 = int_to_uint8((if (In1_1 >= 0) then
		In1_1
	    else (- (In1_1))));
	P_2 = int_to_uint8((if (In1_2 >= 0) then
		In1_2
	    else (- (In1_2))));
	P_3 = int_to_uint8((if (In1_3 >= 0) then
		In1_3
	    else (- (In1_3))));
	P_4 = int_to_uint8((if (In1_4 >= 0) then
		In1_4
	    else (- (In1_4))));
	P_5 = int_to_uint8((if (In1_5 >= 0) then
		In1_5
	    else (- (In1_5))));
	P_6 = int_to_uint8((if (In1_6 >= 0) then
		In1_6
	    else (- (In1_6))));
	Out1_1 = P_1;
	Out1_2 = P_2;
	Out1_3 = P_3;
	Out1_4 = P_4;
	Out1_5 = P_5;
	Out1_6 = P_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

