-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 01:22:10
(*
Original block name: DiscreteDerivative1_PP/Discrete Derivative/TSamp
*)
node  TSamp_129_118(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Divide_1 : real; Divide1_1 : real; Ts_1 : real; weightValue_1 : real;
let
	Divide_1 = (1.0 * u_1) / Ts_1;
	Divide1_1 = (1.0 * Divide_1) / weightValue_1;
	Ts_1 = 0.010;
	weightValue_1 = 1.0;
	Out1_1 = Divide1_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Discrete Derivative
*)
node  DiscreteDerivative_4_146(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	Diff_1 : real; TSamp_1 : real; UD_1 : real;
let
	Diff_1 = 0.0 + TSamp_1 - UD_1;
	TSamp_1 = TSamp_129_118(U_1, __time_step, __nb_step);
	UD_1 = ((3.90) -> ((pre (TSamp_1))));
	Y_1 = Diff_1;
tel

(*
Original block name: DiscreteDerivative1_PP/DiscreteDerivative1/TSamp
*)
node  TSamp_9_126(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Divide_1 : real; Divide1_1 : real; Ts_1 : real; weightValue_1 : real;
let
	Divide_1 = (1.0 * u_1) / Ts_1;
	Divide1_1 = (1.0 * Divide_1) / weightValue_1;
	Ts_1 = 0.010;
	weightValue_1 = 1.0;
	Out1_1 = Divide1_1;
tel

(*
Original block name: DiscreteDerivative1_PP/DiscreteDerivative1
*)
node  DiscreteDerivative1_5_140(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	Diff_1 : real; TSamp_1 : real; UD_1 : real;
let
	Diff_1 = 0.0 + TSamp_1 - UD_1;
	TSamp_1 = TSamp_9_126(U_1, __time_step, __nb_step);
	UD_1 = ((3.90) -> ((pre (TSamp_1))));
	Y_1 = Diff_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Resettable_newline_Subsystem/Discrete Derivative/TSamp
*)
node  TSamp_165_118(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Divide_1 : real; Divide1_1 : real; Ts_1 : real; weightValue_1 : real;
let
	Divide_1 = (1.0 * u_1) / Ts_1;
	Divide1_1 = (1.0 * Divide_1) / weightValue_1;
	Ts_1 = 0.010;
	weightValue_1 = 0.20;
	Out1_1 = Divide1_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Resettable_newline_Subsystem/Discrete Derivative
*)
node  DiscreteDerivative_30_120(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	Diff_1 : real; TSamp_1 : real; UD_1 : real;
let
	Diff_1 = 0.0 + TSamp_1 - UD_1;
	TSamp_1 = TSamp_165_118(U_1, __time_step, __nb_step);
	UD_1 = ((3.90) -> ((pre (TSamp_1))));
	Y_1 = Diff_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Resettable_newline_Subsystem/DiscreteDerivative1/TSamp
*)
node  TSamp_35_120(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	Divide_1 : real; Divide1_1 : real; Ts_1 : real; weightValue_1 : real;
let
	Divide_1 = (1.0 * u_1) / Ts_1;
	Divide1_1 = (1.0 * Divide_1) / weightValue_1;
	Ts_1 = 0.010;
	weightValue_1 = 1.0;
	Out1_1 = Divide1_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Resettable_newline_Subsystem/DiscreteDerivative1
*)
node  DiscreteDerivative1_31_121(
	U_1 : real; __time_step : real; __nb_step : int;)
returns(
	Y_1 : real;);
var 
	Diff_1 : real; TSamp_1 : real; UD_1 : real;
let
	Diff_1 = 0.0 + TSamp_1 - UD_1;
	TSamp_1 = TSamp_35_120(U_1, __time_step, __nb_step);
	UD_1 = ((3.90) -> ((pre (TSamp_1))));
	Y_1 = Diff_1;
tel

(*
Original block name: DiscreteDerivative1_PP/Resettable_newline_Subsystem
*)
node  Resettable_newline_Subsystem_27_121(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	DiscreteDerivative_1 : real; DiscreteDerivative1_1 : real;
let
	DiscreteDerivative_1 = DiscreteDerivative_30_120(In1_1, __time_step, __nb_step);
	DiscreteDerivative1_1 = DiscreteDerivative1_31_121(In1_1, __time_step, __nb_step);
	Out1_1 = DiscreteDerivative_1;
	Out2_1 = DiscreteDerivative1_1;
tel

(*
Original block name: DiscreteDerivative1_PP
*)
node  DiscreteDerivative1_PP(
	In1_1 : real; In2_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real; Out3_1 : real;);
var 
	DiscreteDerivative_1 : real; DiscreteDerivative1_1 : real; ResetCond_of_Resettable_newline_Subsystem_27_121 : bool; Resettable_newline_Subsystem_1 : real; Resettable_newline_Subsystem_2 : real;
	__time_step : real; __nb_step : int;
let
	DiscreteDerivative_1 = DiscreteDerivative_4_146(In1_1, __time_step, __nb_step);
	DiscreteDerivative1_1 = DiscreteDerivative1_5_140(In1_1, __time_step, __nb_step);
	ResetCond_of_Resettable_newline_Subsystem_27_121 = ((false) -> (((In2_1 > 0.0) and (not ((pre ((In2_1 > 0.0))))))));
	(Resettable_newline_Subsystem_1, Resettable_newline_Subsystem_2) = (Resettable_newline_Subsystem_27_121(In1_1, __time_step, __nb_step) every ResetCond_of_Resettable_newline_Subsystem_27_121);
	Out1_1 = DiscreteDerivative_1;
	Out2_1 = Resettable_newline_Subsystem_1;
	Out3_1 = DiscreteDerivative1_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.010)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

