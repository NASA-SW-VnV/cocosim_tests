-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 10:10:35
node  int_to_bool(
	x : int;)
returns(
	y : bool;);
let
	y = (x <> 0);
tel

(*
Original block name: Assertion_TestGen6_PP
*)
node  Assertion_TestGen6_PP(
	In1_1 : int; In1_2 : int; In1_3 : int; In1_4 : int; In1_5 : int;
	In1_6 : int; In1_7 : int; In1_8 : int; In1_9 : int; In1_10 : int;
	In1_11 : int; In1_12 : int; In1_13 : int; In1_14 : int; In1_15 : int;
	In1_16 : int; In1_17 : int; In1_18 : int; In1_19 : int; In1_20 : int;
	In1_21 : int; In1_22 : int; In1_23 : int; In1_24 : int;)
returns(
	__time_step : real;);
var 
	__nb_step : int;
let
	assert ((0 <= In1_1) and (In1_1 <= 65535));
	assert ((0 <= In1_2) and (In1_2 <= 65535));
	assert ((0 <= In1_3) and (In1_3 <= 65535));
	assert ((0 <= In1_4) and (In1_4 <= 65535));
	assert ((0 <= In1_5) and (In1_5 <= 65535));
	assert ((0 <= In1_6) and (In1_6 <= 65535));
	assert ((0 <= In1_7) and (In1_7 <= 65535));
	assert ((0 <= In1_8) and (In1_8 <= 65535));
	assert ((0 <= In1_9) and (In1_9 <= 65535));
	assert ((0 <= In1_10) and (In1_10 <= 65535));
	assert ((0 <= In1_11) and (In1_11 <= 65535));
	assert ((0 <= In1_12) and (In1_12 <= 65535));
	assert ((0 <= In1_13) and (In1_13 <= 65535));
	assert ((0 <= In1_14) and (In1_14 <= 65535));
	assert ((0 <= In1_15) and (In1_15 <= 65535));
	assert ((0 <= In1_16) and (In1_16 <= 65535));
	assert ((0 <= In1_17) and (In1_17 <= 65535));
	assert ((0 <= In1_18) and (In1_18 <= 65535));
	assert ((0 <= In1_19) and (In1_19 <= 65535));
	assert ((0 <= In1_20) and (In1_20 <= 65535));
	assert ((0 <= In1_21) and (In1_21 <= 65535));
	assert ((0 <= In1_22) and (In1_22 <= 65535));
	assert ((0 <= In1_23) and (In1_23 <= 65535));
	assert ((0 <= In1_24) and (In1_24 <= 65535));
	--%PROPERTY "P_7_028" (int_to_bool(In1_1) and (int_to_bool(In1_2) and (int_to_bool(In1_3) and (int_to_bool(In1_4) and (int_to_bool(In1_5) and (int_to_bool(In1_6) and (int_to_bool(In1_7) and (int_to_bool(In1_8) and (int_to_bool(In1_9) and (int_to_bool(In1_10) and (int_to_bool(In1_11) and (int_to_bool(In1_12) and (int_to_bool(In1_13) and (int_to_bool(In1_14) and (int_to_bool(In1_15) and (int_to_bool(In1_16) and (int_to_bool(In1_17) and (int_to_bool(In1_18) and (int_to_bool(In1_19) and (int_to_bool(In1_20) and (int_to_bool(In1_21) and (int_to_bool(In1_22) and (int_to_bool(In1_23) and int_to_bool(In1_24))))))))))))))))))))))));
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

