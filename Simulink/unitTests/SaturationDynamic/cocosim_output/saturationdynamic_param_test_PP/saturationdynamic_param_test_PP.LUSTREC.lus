-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:02:01
(*
Original block name: saturationdynamic_param_test_PP/Saturation
Dynamic
*)
node  Saturation_newline_Dynamic_14_032(
	up_1 : real; u_1 : real; lo_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : real;);
var 
	LowerRelop1_1 : bool; Switch_1 : real; Switch2_1 : real; UpperRelop_1 : bool;
let
	LowerRelop1_1 = (u_1 > up_1);
	Switch_1 = (if UpperRelop_1 then
		lo_1
	    else u_1);
	Switch2_1 = (if LowerRelop1_1 then
		up_1
	    else Switch_1);
	UpperRelop_1 = (u_1 < lo_1);
	y_1 = Switch2_1;
tel

(*
Original block name: saturationdynamic_param_test_PP/Saturation
Dynamic1
*)
node  Saturation_newline_Dynamic1_15_032(
	up_1 : int; u_1 : int; lo_1 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : int;);
var 
	LowerRelop1_1 : bool; Switch_1 : int; Switch2_1 : int; UpperRelop_1 : bool;
let
	assert ((-128 <= up_1) and (up_1 <= 127));
	assert ((-128 <= u_1) and (u_1 <= 127));
	assert ((-128 <= lo_1) and (lo_1 <= 127));
	LowerRelop1_1 = (u_1 > up_1);
	Switch_1 = (if UpperRelop_1 then
		lo_1
	    else u_1);
	Switch2_1 = (if LowerRelop1_1 then
		up_1
	    else Switch_1);
	UpperRelop_1 = (u_1 < lo_1);
	y_1 = Switch2_1;
tel

(*
Original block name: saturationdynamic_param_test_PP/Saturation
Dynamic2
*)
node  Saturation_newline_Dynamic2_16_032(
	up_1 : real; up_2 : real; u_1 : real; u_2 : real; lo_1 : real;
	lo_2 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : real; y_2 : real;);
var 
	LowerRelop1_1 : bool; LowerRelop1_2 : bool; Switch_1 : real; Switch_2 : real; Switch2_1 : real;
	Switch2_2 : real; UpperRelop_1 : bool; UpperRelop_2 : bool;
let
	LowerRelop1_1 = (u_1 > up_1);
	LowerRelop1_2 = (u_2 > up_2);
	Switch_1 = (if UpperRelop_1 then
		lo_1
	    else u_1);
	Switch_2 = (if UpperRelop_2 then
		lo_2
	    else u_2);
	Switch2_1 = (if LowerRelop1_1 then
		up_1
	    else Switch_1);
	Switch2_2 = (if LowerRelop1_2 then
		up_2
	    else Switch_2);
	UpperRelop_1 = (u_1 < lo_1);
	UpperRelop_2 = (u_2 < lo_2);
	y_1 = Switch2_1;
	y_2 = Switch2_2;
tel

(*
Original block name: saturationdynamic_param_test_PP/Saturation
Dynamic3
*)
node  Saturation_newline_Dynamic3_17_032(
	up_1 : real; up_2 : real; up_3 : real; up_4 : real; up_5 : real;
	up_6 : real; u_1 : real; u_2 : real; u_3 : real; u_4 : real;
	u_5 : real; u_6 : real; lo_1 : real; lo_2 : real; lo_3 : real;
	lo_4 : real; lo_5 : real; lo_6 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : real; y_2 : real; y_3 : real; y_4 : real; y_5 : real;
	y_6 : real;);
var 
	LowerRelop1_1 : bool; LowerRelop1_2 : bool; LowerRelop1_3 : bool; LowerRelop1_4 : bool; LowerRelop1_5 : bool;
	LowerRelop1_6 : bool; Switch_1 : real; Switch_2 : real; Switch_3 : real; Switch_4 : real;
	Switch_5 : real; Switch_6 : real; Switch2_1 : real; Switch2_2 : real; Switch2_3 : real;
	Switch2_4 : real; Switch2_5 : real; Switch2_6 : real; UpperRelop_1 : bool; UpperRelop_2 : bool;
	UpperRelop_3 : bool; UpperRelop_4 : bool; UpperRelop_5 : bool; UpperRelop_6 : bool;
let
	LowerRelop1_1 = (u_1 > up_1);
	LowerRelop1_2 = (u_2 > up_2);
	LowerRelop1_3 = (u_3 > up_3);
	LowerRelop1_4 = (u_4 > up_4);
	LowerRelop1_5 = (u_5 > up_5);
	LowerRelop1_6 = (u_6 > up_6);
	Switch_1 = (if UpperRelop_1 then
		lo_1
	    else u_1);
	Switch_2 = (if UpperRelop_2 then
		lo_2
	    else u_2);
	Switch_3 = (if UpperRelop_3 then
		lo_3
	    else u_3);
	Switch_4 = (if UpperRelop_4 then
		lo_4
	    else u_4);
	Switch_5 = (if UpperRelop_5 then
		lo_5
	    else u_5);
	Switch_6 = (if UpperRelop_6 then
		lo_6
	    else u_6);
	Switch2_1 = (if LowerRelop1_1 then
		up_1
	    else Switch_1);
	Switch2_2 = (if LowerRelop1_2 then
		up_2
	    else Switch_2);
	Switch2_3 = (if LowerRelop1_3 then
		up_3
	    else Switch_3);
	Switch2_4 = (if LowerRelop1_4 then
		up_4
	    else Switch_4);
	Switch2_5 = (if LowerRelop1_5 then
		up_5
	    else Switch_5);
	Switch2_6 = (if LowerRelop1_6 then
		up_6
	    else Switch_6);
	UpperRelop_1 = (u_1 < lo_1);
	UpperRelop_2 = (u_2 < lo_2);
	UpperRelop_3 = (u_3 < lo_3);
	UpperRelop_4 = (u_4 < lo_4);
	UpperRelop_5 = (u_5 < lo_5);
	UpperRelop_6 = (u_6 < lo_6);
	y_1 = Switch2_1;
	y_2 = Switch2_2;
	y_3 = Switch2_3;
	y_4 = Switch2_4;
	y_5 = Switch2_5;
	y_6 = Switch2_6;
tel

(*
Original block name: saturationdynamic_param_test_PP
*)
node  saturationdynamic_param_test_PP(
	In1_1 : real; In2_1 : real; In3_1 : real; In4_1 : int; In5_1 : int;
	In6_1 : int; In7_1 : real; In7_2 : real; In8_1 : real; In8_2 : real;
	In9_1 : real; In9_2 : real; In10_1 : real; In10_2 : real; In10_3 : real;
	In10_4 : real; In10_5 : real; In10_6 : real; In11_1 : real; In11_2 : real;
	In11_3 : real; In11_4 : real; In11_5 : real; In11_6 : real; In12_1 : real;
	In12_2 : real; In12_3 : real; In12_4 : real; In12_5 : real; In12_6 : real;)
returns(
	Out1_1 : real; Out2_1 : int; Out3_1 : real; Out3_2 : real; Out4_1 : real;
	Out4_2 : real; Out4_3 : real; Out4_4 : real; Out4_5 : real; Out4_6 : real;);
var 
	Saturation_newline_Dynamic_1 : real; Saturation_newline_Dynamic1_1 : int; Saturation_newline_Dynamic2_1 : real; Saturation_newline_Dynamic2_2 : real; Saturation_newline_Dynamic3_1 : real;
	Saturation_newline_Dynamic3_2 : real; Saturation_newline_Dynamic3_3 : real; Saturation_newline_Dynamic3_4 : real; Saturation_newline_Dynamic3_5 : real; Saturation_newline_Dynamic3_6 : real;
	__time_step : real; __nb_step : int;
let
	assert ((-128 <= In4_1) and (In4_1 <= 127));
	assert ((-128 <= In5_1) and (In5_1 <= 127));
	assert ((-128 <= In6_1) and (In6_1 <= 127));
	Saturation_newline_Dynamic_1 = Saturation_newline_Dynamic_14_032(In1_1, In2_1, In3_1, __time_step, __nb_step);
	Saturation_newline_Dynamic1_1 = Saturation_newline_Dynamic1_15_032(In4_1, In5_1, In6_1, __time_step, __nb_step);
	(Saturation_newline_Dynamic2_1, Saturation_newline_Dynamic2_2) = Saturation_newline_Dynamic2_16_032(In7_1, In7_2, In8_1, In8_2, In9_1, In9_2, __time_step, __nb_step);
	(Saturation_newline_Dynamic3_1, Saturation_newline_Dynamic3_2, Saturation_newline_Dynamic3_3, Saturation_newline_Dynamic3_4, Saturation_newline_Dynamic3_5, Saturation_newline_Dynamic3_6) = Saturation_newline_Dynamic3_17_032(In10_1, In10_2, In10_3, In10_4, In10_5, In10_6, In11_1, In11_2, In11_3, In11_4, In11_5, In11_6, In12_1, In12_2, In12_3, In12_4, In12_5, In12_6, __time_step, __nb_step);
	Out1_1 = Saturation_newline_Dynamic_1;
	Out2_1 = Saturation_newline_Dynamic1_1;
	Out3_1 = Saturation_newline_Dynamic2_1;
	Out3_2 = Saturation_newline_Dynamic2_2;
	Out4_1 = Saturation_newline_Dynamic3_1;
	Out4_2 = Saturation_newline_Dynamic3_2;
	Out4_3 = Saturation_newline_Dynamic3_3;
	Out4_4 = Saturation_newline_Dynamic3_4;
	Out4_5 = Saturation_newline_Dynamic3_5;
	Out4_6 = Saturation_newline_Dynamic3_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

