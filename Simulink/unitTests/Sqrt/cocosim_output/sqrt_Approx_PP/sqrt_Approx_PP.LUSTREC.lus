-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 18:03:12
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  x1_minus_DLookupTable_311_394_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
	ydat_6 : real; ydat_7 : real; ydat_8 : real; ydat_9 : real; ydat_10 : real;
	ydat_11 : real; ydat_12 : real; ydat_13 : real; ydat_14 : real; ydat_15 : real;
	ydat_16 : real; ydat_17 : real; y__FromIdx10_ToIdx17 : real; y__FromIdx1_ToIdx8 : real;
let
	ydat_1 = 0.0;
	ydat_2 = 1.0;
	ydat_3 = 6.880;
	ydat_4 = 25.570;
	ydat_5 = 68.579999999999998;
	ydat_6 = 150.800000000000011;
	ydat_7 = 291.269999999999982;
	ydat_8 = 512.110000000000014;
	ydat_9 = 839.139999999999986;
	ydat_10 = 1302.549999999999955;
	ydat_11 = 1935.789999999999964;
	ydat_12 = 2775.50;
	ydat_13 = 3862.119999999999891;
	ydat_14 = 5240.989999999999782;
	ydat_15 = 6959.229999999999563;
	ydat_16 = 9069.319999999999709;
	ydat_17 = 10000.0;
	y__FromIdx10_ToIdx17 = (if (x = 10) then
		ydat_10
	    else (if (x = 11) then
		ydat_11
	    else (if (x = 12) then
		ydat_12
	    else (if (x = 13) then
		ydat_13
	    else (if (x = 14) then
		ydat_14
	    else (if (x = 15) then
		ydat_15
	    else (if (x = 16) then
		ydat_16
	    else ydat_17)))))));
	y__FromIdx1_ToIdx8 = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else (if (x = 5) then
		ydat_5
	    else (if (x = 6) then
		ydat_6
	    else (if (x = 7) then
		ydat_7
	    else ydat_8)))))));
	y = (if (x = 9) then
		ydat_9
	    else (if (x > 9) then
		y__FromIdx10_ToIdx17
	    else y__FromIdx1_ToIdx8));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  x1_minus_DLookupTable_311_394_Interp_Using_Pre_ext_node(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	u_node_1 : real; u_node_2 : real;
let
	u_node_1 = x1_minus_DLookupTable_311_394_getTableElement(inline_index_bound_node_1);
	u_node_2 = x1_minus_DLookupTable_311_394_getTableElement(inline_index_bound_node_2);
	Interp_Using_Pre_Out = ((weight_bound_node_1 * u_node_1) + (weight_bound_node_2 * u_node_2));
tel

(*
external node code for doing PreLookup
*)
node  x1_minus_DLookupTable_311_394_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; Breakpoints_dim1_6 : real; Breakpoints_dim1_7 : real; Breakpoints_dim1_8 : real; Breakpoints_dim1_9 : real;
	Breakpoints_dim1_10 : real; Breakpoints_dim1_11 : real; Breakpoints_dim1_12 : real; Breakpoints_dim1_13 : real; Breakpoints_dim1_14 : real;
	Breakpoints_dim1_15 : real; Breakpoints_dim1_16 : real; Breakpoints_dim1_17 : real; index_dim_1_1 : int; index_dim_1_2 : int;
	coords_dim_1_1 : real; coords_dim_1_2 : real; bound_node_index_inline1 : int; bound_node_index_inline2 : int; N_shape_1 : real;
	N_shape_2 : real; clip_input_1 : real;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 0.0;
	Breakpoints_dim1_2 = 1.0;
	Breakpoints_dim1_3 = 2.620;
	Breakpoints_dim1_4 = 5.060;
	Breakpoints_dim1_5 = 8.279999999999999;
	Breakpoints_dim1_6 = 12.279999999999999;
	Breakpoints_dim1_7 = 17.070;
	Breakpoints_dim1_8 = 22.629999999999999;
	Breakpoints_dim1_9 = 28.969999999999999;
	Breakpoints_dim1_10 = 36.090000000000003;
	Breakpoints_dim1_11 = 44.0;
	Breakpoints_dim1_12 = 52.680;
	Breakpoints_dim1_13 = 62.149999999999999;
	Breakpoints_dim1_14 = 72.390000000000001;
	Breakpoints_dim1_15 = 83.420000000000002;
	Breakpoints_dim1_16 = 95.230000000000004;
	Breakpoints_dim1_17 = 100.0;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_17) or abs_real(dim1_coord_in - Breakpoints_dim1_17) <= 0.000000000000001000000000000000) then
		(16, Breakpoints_dim1_16, 17, Breakpoints_dim1_17)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_16) or abs_real(dim1_coord_in - Breakpoints_dim1_16) <= 0.000000000000001000000000000000) then
		(16, Breakpoints_dim1_16, 17, Breakpoints_dim1_17)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_15) or abs_real(dim1_coord_in - Breakpoints_dim1_15) <= 0.000000000000001000000000000000) then
		(15, Breakpoints_dim1_15, 16, Breakpoints_dim1_16)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_14) or abs_real(dim1_coord_in - Breakpoints_dim1_14) <= 0.000000000000001000000000000000) then
		(14, Breakpoints_dim1_14, 15, Breakpoints_dim1_15)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_13) or abs_real(dim1_coord_in - Breakpoints_dim1_13) <= 0.000000000000001000000000000000) then
		(13, Breakpoints_dim1_13, 14, Breakpoints_dim1_14)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_12) or abs_real(dim1_coord_in - Breakpoints_dim1_12) <= 0.000000000000001000000000000000) then
		(12, Breakpoints_dim1_12, 13, Breakpoints_dim1_13)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_11) or abs_real(dim1_coord_in - Breakpoints_dim1_11) <= 0.000000000000001000000000000000) then
		(11, Breakpoints_dim1_11, 12, Breakpoints_dim1_12)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_10) or abs_real(dim1_coord_in - Breakpoints_dim1_10) <= 0.000000000000001000000000000000) then
		(10, Breakpoints_dim1_10, 11, Breakpoints_dim1_11)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_9) or abs_real(dim1_coord_in - Breakpoints_dim1_9) <= 0.000000000000001000000000000000) then
		(9, Breakpoints_dim1_9, 10, Breakpoints_dim1_10)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_8) or abs_real(dim1_coord_in - Breakpoints_dim1_8) <= 0.000000000000001000000000000000) then
		(8, Breakpoints_dim1_8, 9, Breakpoints_dim1_9)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_7) or abs_real(dim1_coord_in - Breakpoints_dim1_7) <= 0.000000000000001000000000000000) then
		(7, Breakpoints_dim1_7, 8, Breakpoints_dim1_8)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_6) or abs_real(dim1_coord_in - Breakpoints_dim1_6) <= 0.000000000000001000000000000000) then
		(6, Breakpoints_dim1_6, 7, Breakpoints_dim1_7)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(5, Breakpoints_dim1_5, 6, Breakpoints_dim1_6)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))))))))))))))));
	bound_node_index_inline1 = (index_dim_1_1 * dimJump_1);
	bound_node_index_inline2 = (index_dim_1_2 * dimJump_1);
	clip_input_1 = (if ((dim1_coord_in < coords_dim_1_1) and abs_real(dim1_coord_in - coords_dim_1_1) > 0.000000999999999999999954748112) then
		coords_dim_1_1
	    else (if ((dim1_coord_in > coords_dim_1_2) and abs_real(dim1_coord_in - coords_dim_1_2) > 0.000000999999999999999954748112) then
		coords_dim_1_2
	    else dim1_coord_in));
	N_shape_1 = ((coords_dim_1_2 - clip_input_1) / (coords_dim_1_2 - coords_dim_1_1));
	N_shape_2 = ((clip_input_1 - coords_dim_1_1) / (coords_dim_1_2 - coords_dim_1_1));
	inline_index_bound_node_1 = bound_node_index_inline1;
	weight_bound_node_1 = N_shape_1;
	inline_index_bound_node_2 = bound_node_index_inline2;
	weight_bound_node_2 = N_shape_2;
tel

(*
external node code for doing Lookup_nD
*)
node  x1_minus_DLookupTable_311_394_Lookup_wrapper_node(
	dim1_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_bound_node_1 : int; weight_bound_node_1 : real; inline_index_bound_node_2 : int; weight_bound_node_2 : real;
let
	(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2) = x1_minus_DLookupTable_311_394_PreLookup_node(dim1_coord_in);
	Interp_Using_Pre_Out = x1_minus_DLookupTable_311_394_Interp_Using_Pre_ext_node(inline_index_bound_node_1, weight_bound_node_1, inline_index_bound_node_2, weight_bound_node_2);
tel

(*
Original block name: sqrt_Approx_PP/Sqrt_Approx
*)
node  Sqrt_Approx_295_756(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	x1_minus_DLookupTable_1 : real;
let
	x1_minus_DLookupTable_1 = x1_minus_DLookupTable_311_394_Lookup_wrapper_node(In1_1);
	Out1_1 = x1_minus_DLookupTable_1;
tel

(*
Original block name: sqrt_Approx_PP
*)
node  sqrt_Approx_PP(
	x_1 : real;)
returns(
	y_1 : real;);
var 
	Sqrt_Approx_1 : real; __time_step : real; __nb_step : int;
let
	Sqrt_Approx_1 = Sqrt_Approx_295_756(x_1, __time_step, __nb_step);
	y_1 = Sqrt_Approx_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

