-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 22:09:36
(*
Original block name: product_matrix_multiple_test_2_PP
*)
node  product_matrix_multiple_test_2_PP(
	In1_1 : real; In1_2 : real; In1_3 : real; In1_4 : real; In1_5 : real;
	In1_6 : real; In1_7 : real; In1_8 : real; In4_1 : real; In4_2 : real;
	In4_3 : real; In4_4 : real; In4_5 : real; In4_6 : real; In4_7 : real;
	In4_8 : real; In5_1 : real; In5_2 : real; In5_3 : real; In5_4 : real;
	In5_5 : real; In5_6 : real; In10_1 : real; In10_2 : real; In10_3 : real;
	In10_4 : real; In10_5 : real; In10_6 : real; In10_7 : real; In10_8 : real;
	In10_9 : real; In11_1 : real; In11_2 : real; In11_3 : real; In11_4 : real;
	In11_5 : real; In11_6 : real; In12_1 : real; In12_2 : real;)
returns(
	Out2_1 : real; Out2_2 : real;);
var 
	Product2_1 : real; Product2_2 : real; Product2_194_833_matrix_mult_1_1 : real; Product2_194_833_matrix_mult_1_2 : real; Product2_194_833_matrix_mult_1_3 : real;
	Product2_194_833_matrix_mult_1_4 : real; Product2_194_833_matrix_mult_2_1 : real; Product2_194_833_matrix_mult_2_2 : real; Product2_194_833_matrix_mult_2_3 : real; Product2_194_833_matrix_mult_2_4 : real;
	Product2_194_833_matrix_mult_2_5 : real; Product2_194_833_matrix_mult_2_6 : real; Product2_194_833_matrix_mult_3_1 : real; Product2_194_833_matrix_mult_3_2 : real; Product2_194_833_matrix_mult_3_3 : real;
	Product2_194_833_matrix_mult_3_4 : real; Product2_194_833_matrix_mult_3_5 : real; Product2_194_833_matrix_mult_3_6 : real; Product2_194_833_matrix_mult_4_1 : real; Product2_194_833_matrix_mult_4_2 : real;
	Product2_194_833_matrix_mult_4_3 : real; Product2_194_833_matrix_mult_4_4 : real; __time_step : real; __nb_step : int;
let
	assert (((-1.0 <= In1_1) and (In1_1 <= 1.0)) and (((-1.0 <= In1_2) and (In1_2 <= 1.0)) and (((-1.0 <= In1_3) and (In1_3 <= 1.0)) and (((-1.0 <= In1_4) and (In1_4 <= 1.0)) and (((-1.0 <= In1_5) and (In1_5 <= 1.0)) and (((-1.0 <= In1_6) and (In1_6 <= 1.0)) and (((-1.0 <= In1_7) and (In1_7 <= 1.0)) and ((-1.0 <= In1_8) and (In1_8 <= 1.0)))))))));
	assert (((-2.0 <= In4_1) and (In4_1 <= 2.0)) and (((-2.0 <= In4_2) and (In4_2 <= 2.0)) and (((-2.0 <= In4_3) and (In4_3 <= 2.0)) and (((-2.0 <= In4_4) and (In4_4 <= 2.0)) and (((-2.0 <= In4_5) and (In4_5 <= 2.0)) and (((-2.0 <= In4_6) and (In4_6 <= 2.0)) and (((-2.0 <= In4_7) and (In4_7 <= 2.0)) and ((-2.0 <= In4_8) and (In4_8 <= 2.0)))))))));
	assert (((-1.0 <= In5_1) and (In5_1 <= 1.0)) and (((-1.0 <= In5_2) and (In5_2 <= 1.0)) and (((-1.0 <= In5_3) and (In5_3 <= 1.0)) and (((-1.0 <= In5_4) and (In5_4 <= 1.0)) and (((-1.0 <= In5_5) and (In5_5 <= 1.0)) and ((-1.0 <= In5_6) and (In5_6 <= 1.0)))))));
	assert (((-2.0 <= In10_1) and (In10_1 <= 1.0)) and (((-2.0 <= In10_2) and (In10_2 <= 1.0)) and (((-2.0 <= In10_3) and (In10_3 <= 1.0)) and (((-2.0 <= In10_4) and (In10_4 <= 1.0)) and (((-2.0 <= In10_5) and (In10_5 <= 1.0)) and (((-2.0 <= In10_6) and (In10_6 <= 1.0)) and (((-2.0 <= In10_7) and (In10_7 <= 1.0)) and (((-2.0 <= In10_8) and (In10_8 <= 1.0)) and ((-2.0 <= In10_9) and (In10_9 <= 1.0))))))))));
	assert (((-1.0 <= In11_1) and (In11_1 <= 0.50)) and (((-1.0 <= In11_2) and (In11_2 <= 0.50)) and (((-1.0 <= In11_3) and (In11_3 <= 0.50)) and (((-1.0 <= In11_4) and (In11_4 <= 0.50)) and (((-1.0 <= In11_5) and (In11_5 <= 0.50)) and ((-1.0 <= In11_6) and (In11_6 <= 0.50)))))));
	assert (((-3.0 <= In12_1) and (In12_1 <= -1.0)) and ((-3.0 <= In12_2) and (In12_2 <= -1.0)));
	Product2_194_833_matrix_mult_1_1 = 0.0 + (In1_1 * In4_1) + (In1_3 * In4_2) + (In1_5 * In4_3) + (In1_7 * In4_4);
	Product2_194_833_matrix_mult_1_3 = 0.0 + (In1_1 * In4_5) + (In1_3 * In4_6) + (In1_5 * In4_7) + (In1_7 * In4_8);
	Product2_194_833_matrix_mult_1_2 = 0.0 + (In1_2 * In4_1) + (In1_4 * In4_2) + (In1_6 * In4_3) + (In1_8 * In4_4);
	Product2_194_833_matrix_mult_1_4 = 0.0 + (In1_2 * In4_5) + (In1_4 * In4_6) + (In1_6 * In4_7) + (In1_8 * In4_8);
	Product2_194_833_matrix_mult_2_1 = 0.0 + (Product2_194_833_matrix_mult_1_1 * In5_1) + (Product2_194_833_matrix_mult_1_3 * In5_2);
	Product2_194_833_matrix_mult_2_3 = 0.0 + (Product2_194_833_matrix_mult_1_1 * In5_3) + (Product2_194_833_matrix_mult_1_3 * In5_4);
	Product2_194_833_matrix_mult_2_5 = 0.0 + (Product2_194_833_matrix_mult_1_1 * In5_5) + (Product2_194_833_matrix_mult_1_3 * In5_6);
	Product2_194_833_matrix_mult_2_2 = 0.0 + (Product2_194_833_matrix_mult_1_2 * In5_1) + (Product2_194_833_matrix_mult_1_4 * In5_2);
	Product2_194_833_matrix_mult_2_4 = 0.0 + (Product2_194_833_matrix_mult_1_2 * In5_3) + (Product2_194_833_matrix_mult_1_4 * In5_4);
	Product2_194_833_matrix_mult_2_6 = 0.0 + (Product2_194_833_matrix_mult_1_2 * In5_5) + (Product2_194_833_matrix_mult_1_4 * In5_6);
	Product2_194_833_matrix_mult_3_1 = 0.0 + (Product2_194_833_matrix_mult_2_1 * In10_1) + (Product2_194_833_matrix_mult_2_3 * In10_2) + (Product2_194_833_matrix_mult_2_5 * In10_3);
	Product2_194_833_matrix_mult_3_3 = 0.0 + (Product2_194_833_matrix_mult_2_1 * In10_4) + (Product2_194_833_matrix_mult_2_3 * In10_5) + (Product2_194_833_matrix_mult_2_5 * In10_6);
	Product2_194_833_matrix_mult_3_5 = 0.0 + (Product2_194_833_matrix_mult_2_1 * In10_7) + (Product2_194_833_matrix_mult_2_3 * In10_8) + (Product2_194_833_matrix_mult_2_5 * In10_9);
	Product2_194_833_matrix_mult_3_2 = 0.0 + (Product2_194_833_matrix_mult_2_2 * In10_1) + (Product2_194_833_matrix_mult_2_4 * In10_2) + (Product2_194_833_matrix_mult_2_6 * In10_3);
	Product2_194_833_matrix_mult_3_4 = 0.0 + (Product2_194_833_matrix_mult_2_2 * In10_4) + (Product2_194_833_matrix_mult_2_4 * In10_5) + (Product2_194_833_matrix_mult_2_6 * In10_6);
	Product2_194_833_matrix_mult_3_6 = 0.0 + (Product2_194_833_matrix_mult_2_2 * In10_7) + (Product2_194_833_matrix_mult_2_4 * In10_8) + (Product2_194_833_matrix_mult_2_6 * In10_9);
	Product2_194_833_matrix_mult_4_1 = 0.0 + (Product2_194_833_matrix_mult_3_1 * In11_1) + (Product2_194_833_matrix_mult_3_3 * In11_2) + (Product2_194_833_matrix_mult_3_5 * In11_3);
	Product2_194_833_matrix_mult_4_3 = 0.0 + (Product2_194_833_matrix_mult_3_1 * In11_4) + (Product2_194_833_matrix_mult_3_3 * In11_5) + (Product2_194_833_matrix_mult_3_5 * In11_6);
	Product2_194_833_matrix_mult_4_2 = 0.0 + (Product2_194_833_matrix_mult_3_2 * In11_1) + (Product2_194_833_matrix_mult_3_4 * In11_2) + (Product2_194_833_matrix_mult_3_6 * In11_3);
	Product2_194_833_matrix_mult_4_4 = 0.0 + (Product2_194_833_matrix_mult_3_2 * In11_4) + (Product2_194_833_matrix_mult_3_4 * In11_5) + (Product2_194_833_matrix_mult_3_6 * In11_6);
	Product2_1 = 0.0 + (Product2_194_833_matrix_mult_4_1 * In12_1) + (Product2_194_833_matrix_mult_4_3 * In12_2);
	Product2_2 = 0.0 + (Product2_194_833_matrix_mult_4_2 * In12_1) + (Product2_194_833_matrix_mult_4_4 * In12_2);
	Out2_1 = Product2_1;
	Out2_2 = Product2_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

