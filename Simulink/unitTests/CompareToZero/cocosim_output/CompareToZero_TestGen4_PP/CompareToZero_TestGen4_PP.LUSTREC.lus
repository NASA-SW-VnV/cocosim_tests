-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:48:48
(*
Original block name: CompareToZero_TestGen4_PP/trigger/T/P
*)
node  P_10_100(
	u_1 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool;);
var 
	Compare_1 : bool; Constant_1 : int;
let
	assert ((0 <= u_1) and (u_1 <= 255));
	Compare_1 = (u_1 <> Constant_1);
	Constant_1 = 0;
	y_1 = Compare_1;
tel

(*
Original block name: CompareToZero_TestGen4_PP/trigger/T
*)
node  T_7_100_condExecSS(
	In1_1 : int; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	pre_Out1_1 : bool; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else false);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> T_7_100((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: CompareToZero_TestGen4_PP/trigger/T
*)
node  T_7_100(
	In1_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	P_1 : bool;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	P_1 = P_10_100(In1_1, __time_step, __nb_step);
	Out1_1 = P_1;
tel

(*
Original block name: CompareToZero_TestGen4_PP/trigger
*)
node  trigger_4_105(
	T_cond_1 : bool; In1_1 : int; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	ExecutionCond_of_T_7_100 : bool; T_1 : bool;
let
	assert ((0 <= In1_1) and (In1_1 <= 255));
	ExecutionCond_of_T_7_100 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	T_1 = T_7_100_condExecSS(In1_1, ExecutionCond_of_T_7_100, __time_step, __nb_step);
	Out1_1 = T_1;
tel

(*
Original block name: CompareToZero_TestGen4_PP
*)
node  CompareToZero_TestGen4_PP(
	In1_1 : bool; In2_1 : int;)
returns(
	Out1_1 : bool;);
var 
	trigger_1 : bool; __time_step : real; __nb_step : int;
let
	assert ((0 <= In2_1) and (In2_1 <= 255));
	trigger_1 = trigger_4_105(In1_1, In2_1, __time_step, __nb_step);
	Out1_1 = trigger_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

