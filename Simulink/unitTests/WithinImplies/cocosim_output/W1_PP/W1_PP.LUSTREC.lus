-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 18:44:38
(*
Original block name: W1_PP/Within Implies1/Subsystem
*)
node  Subsystem_194679_566(
	In_1 : bool; reset_1 : bool; Obs_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Constant_1 : bool; Constant1_1 : bool; Constant2_1 : bool; Constant3_1 : bool; Constant4_1 : bool;
	Constant5_1 : bool; Logical_newline_Operator_1 : bool; Logical_newline_Operator1_1 : bool; Logical_newline_Operator2_1 : bool; Logical_newline_Operator3_1 : bool;
	Logical_newline_Operator4_1 : bool; Logical_newline_Operator5_1 : bool; Logical_newline_Operator6_1 : bool; Logical_newline_Operator7_1 : bool; Logical_newline_Operator8_1 : bool;
	Logical_newline_Operator9_1 : bool; Switch_1 : bool; Switch1_1 : bool; Switch2_1 : bool; Switch3_1 : bool;
	Switch4_1 : bool; Switch6_1 : bool; UnitDelay_1 : bool; UnitDelay1_1 : bool;
let
	Constant_1 = true;
	Constant1_1 = true;
	Constant2_1 = true;
	Constant3_1 = true;
	Constant4_1 = false;
	Constant5_1 = false;
	Logical_newline_Operator_1 = (In_1 and Logical_newline_Operator1_1);
	Logical_newline_Operator1_1 = (not (reset_1));
	Logical_newline_Operator2_1 = (Logical_newline_Operator3_1 and UnitDelay_1);
	Logical_newline_Operator3_1 = (not (In_1));
	Logical_newline_Operator4_1 = (In_1 and Logical_newline_Operator5_1);
	Logical_newline_Operator5_1 = (not (reset_1));
	Logical_newline_Operator6_1 = (Logical_newline_Operator7_1 and UnitDelay_1);
	Logical_newline_Operator7_1 = (not (In_1));
	Logical_newline_Operator8_1 = (In_1 and Logical_newline_Operator9_1);
	Logical_newline_Operator9_1 = (not (reset_1));
	Switch_1 = (if Logical_newline_Operator_1 then
		Constant_1
	    else Switch1_1);
	Switch1_1 = (if Logical_newline_Operator2_1 then
		UnitDelay1_1
	    else Constant1_1);
	Switch2_1 = (if Logical_newline_Operator4_1 then
		Constant2_1
	    else Switch3_1);
	Switch3_1 = (if Logical_newline_Operator6_1 then
		Constant4_1
	    else UnitDelay_1);
	Switch4_1 = (if Logical_newline_Operator8_1 then
		Switch6_1
	    else Constant5_1);
	Switch6_1 = (if Obs_1 then
		Constant3_1
	    else UnitDelay1_1);
	UnitDelay_1 = ((false) -> ((pre (Switch2_1))));
	UnitDelay1_1 = ((false) -> ((pre (Switch4_1))));
	Out1_1 = Switch_1;
tel

(*
Original block name: W1_PP/Within Implies1
*)
node  WithinImplies1_321_639(
	In_1 : bool; Obs_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Reset_1 : bool; Subsystem_1 : bool;
let
	Reset_1 = false;
	Subsystem_1 = Subsystem_194679_566(In_1, Reset_1, Obs_1, __time_step, __nb_step);
	Out1_1 = Subsystem_1;
tel

(*
Original block name: W1_PP/Within Implies2/Subsystem
*)
node  Subsystem_194702_566(
	In_1 : bool; reset_1 : bool; Obs_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Constant_1 : bool; Constant1_1 : bool; Constant2_1 : bool; Constant3_1 : bool; Constant4_1 : bool;
	Constant5_1 : bool; Logical_newline_Operator_1 : bool; Logical_newline_Operator1_1 : bool; Logical_newline_Operator2_1 : bool; Logical_newline_Operator3_1 : bool;
	Logical_newline_Operator4_1 : bool; Logical_newline_Operator5_1 : bool; Logical_newline_Operator6_1 : bool; Logical_newline_Operator7_1 : bool; Logical_newline_Operator8_1 : bool;
	Logical_newline_Operator9_1 : bool; Switch_1 : bool; Switch1_1 : bool; Switch2_1 : bool; Switch3_1 : bool;
	Switch4_1 : bool; Switch6_1 : bool; UnitDelay_1 : bool; UnitDelay1_1 : bool;
let
	Constant_1 = true;
	Constant1_1 = true;
	Constant2_1 = true;
	Constant3_1 = true;
	Constant4_1 = false;
	Constant5_1 = false;
	Logical_newline_Operator_1 = (In_1 and Logical_newline_Operator1_1);
	Logical_newline_Operator1_1 = (not (reset_1));
	Logical_newline_Operator2_1 = (Logical_newline_Operator3_1 and UnitDelay_1);
	Logical_newline_Operator3_1 = (not (In_1));
	Logical_newline_Operator4_1 = (In_1 and Logical_newline_Operator5_1);
	Logical_newline_Operator5_1 = (not (reset_1));
	Logical_newline_Operator6_1 = (Logical_newline_Operator7_1 and UnitDelay_1);
	Logical_newline_Operator7_1 = (not (In_1));
	Logical_newline_Operator8_1 = (In_1 and Logical_newline_Operator9_1);
	Logical_newline_Operator9_1 = (not (reset_1));
	Switch_1 = (if Logical_newline_Operator_1 then
		Constant_1
	    else Switch1_1);
	Switch1_1 = (if Logical_newline_Operator2_1 then
		UnitDelay1_1
	    else Constant1_1);
	Switch2_1 = (if Logical_newline_Operator4_1 then
		Constant2_1
	    else Switch3_1);
	Switch3_1 = (if Logical_newline_Operator6_1 then
		Constant4_1
	    else UnitDelay_1);
	Switch4_1 = (if Logical_newline_Operator8_1 then
		Switch6_1
	    else Constant5_1);
	Switch6_1 = (if Obs_1 then
		Constant3_1
	    else UnitDelay1_1);
	UnitDelay_1 = ((false) -> ((pre (Switch2_1))));
	UnitDelay1_1 = ((false) -> ((pre (Switch4_1))));
	Out1_1 = Switch_1;
tel

(*
Original block name: W1_PP/Within Implies2
*)
node  WithinImplies2_322_571(
	In_1 : bool; Obs_1 : bool; Reset_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Subsystem_1 : bool;
let
	Subsystem_1 = Subsystem_194702_566(In_1, Reset_1, Obs_1, __time_step, __nb_step);
	Out1_1 = Subsystem_1;
tel

(*
Original block name: W1_PP/WithinImpliesResetFalse/Subsystem
*)
node  Subsystem_348_673(
	In_1 : bool; reset_1 : bool; Obs_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Constant_1 : bool; Constant1_1 : bool; Constant2_1 : bool; Constant3_1 : bool; Constant4_1 : bool;
	Constant5_1 : bool; Logical_newline_Operator_1 : bool; Logical_newline_Operator1_1 : bool; Logical_newline_Operator2_1 : bool; Logical_newline_Operator3_1 : bool;
	Logical_newline_Operator4_1 : bool; Logical_newline_Operator5_1 : bool; Logical_newline_Operator6_1 : bool; Logical_newline_Operator7_1 : bool; Logical_newline_Operator8_1 : bool;
	Logical_newline_Operator9_1 : bool; Switch_1 : bool; Switch1_1 : bool; Switch2_1 : bool; Switch3_1 : bool;
	Switch4_1 : bool; Switch6_1 : bool; UnitDelay_1 : bool; UnitDelay1_1 : bool;
let
	Constant_1 = true;
	Constant1_1 = true;
	Constant2_1 = true;
	Constant3_1 = true;
	Constant4_1 = false;
	Constant5_1 = false;
	Logical_newline_Operator_1 = (In_1 and Logical_newline_Operator1_1);
	Logical_newline_Operator1_1 = (not (reset_1));
	Logical_newline_Operator2_1 = (Logical_newline_Operator3_1 and UnitDelay_1);
	Logical_newline_Operator3_1 = (not (In_1));
	Logical_newline_Operator4_1 = (In_1 and Logical_newline_Operator5_1);
	Logical_newline_Operator5_1 = (not (reset_1));
	Logical_newline_Operator6_1 = (Logical_newline_Operator7_1 and UnitDelay_1);
	Logical_newline_Operator7_1 = (not (In_1));
	Logical_newline_Operator8_1 = (In_1 and Logical_newline_Operator9_1);
	Logical_newline_Operator9_1 = (not (reset_1));
	Switch_1 = (if Logical_newline_Operator_1 then
		Constant_1
	    else Switch1_1);
	Switch1_1 = (if Logical_newline_Operator2_1 then
		UnitDelay1_1
	    else Constant1_1);
	Switch2_1 = (if Logical_newline_Operator4_1 then
		Constant2_1
	    else Switch3_1);
	Switch3_1 = (if Logical_newline_Operator6_1 then
		Constant4_1
	    else UnitDelay_1);
	Switch4_1 = (if Logical_newline_Operator8_1 then
		Switch6_1
	    else Constant5_1);
	Switch6_1 = (if Obs_1 then
		Constant3_1
	    else UnitDelay1_1);
	UnitDelay_1 = ((false) -> ((pre (Switch2_1))));
	UnitDelay1_1 = ((false) -> ((pre (Switch4_1))));
	Out1_1 = Switch_1;
tel

(*
Original block name: W1_PP/WithinImpliesResetFalse
*)
node  WithinImpliesResetFalse_341_531(
	In_1 : bool; Obs_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : bool;);
var 
	Reset_1 : bool; Subsystem_1 : bool;
let
	Reset_1 = false;
	Subsystem_1 = Subsystem_348_673(In_1, Reset_1, Obs_1, __time_step, __nb_step);
	Out1_1 = Subsystem_1;
tel

(*
Original block name: W1_PP
*)
node  W1_PP(
	In6_1 : bool; In7_1 : bool;)
returns(
	Out1_1 : bool; Out2_1 : bool; Out3_1 : bool;);
var 
	Relational_newline_Operator_1 : bool; WithinImplies1_1 : bool; WithinImplies2_1 : bool; WithinImpliesResetFalse_1 : bool; __time_step : real;
	__nb_step : int;
let
	Relational_newline_Operator_1 = (WithinImplies1_1 = WithinImpliesResetFalse_1);
	WithinImplies1_1 = WithinImplies1_321_639(In6_1, In7_1, __time_step, __nb_step);
	WithinImplies2_1 = WithinImplies2_322_571(In6_1, In7_1, WithinImpliesResetFalse_1, __time_step, __nb_step);
	WithinImpliesResetFalse_1 = WithinImpliesResetFalse_341_531(In6_1, In7_1, __time_step, __nb_step);
	Out1_1 = WithinImplies1_1;
	Out2_1 = Relational_newline_Operator_1;
	Out3_1 = WithinImplies2_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

