-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 09:41:05
(*
Original block name: memory_vect_test_PP
*)
node  memory_vect_test_PP(
	In1_1 : real; In1_2 : real; In2_1 : real; In2_2 : real; In3_1 : real;
	In3_2 : real; In4_1 : int; In4_2 : int; In5_1 : int; In5_2 : int;
	In6_1 : int; In6_2 : int; In7_1 : bool; In7_2 : bool; In8_1 : bool;
	In8_2 : bool; In9_1 : bool; In9_2 : bool; In10_1 : real; In10_2 : real;
	In11_1 : real; In11_2 : real; In12_1 : real; In12_2 : real; In13_1 : int;
	In13_2 : int; In14_1 : int; In14_2 : int; In15_1 : int; In15_2 : int;
	In16_1 : bool; In16_2 : bool; In17_1 : bool; In17_2 : bool; In18_1 : bool;
	In18_2 : bool;)
returns(
	Out1_1 : real; Out1_2 : real; Out2_1 : real; Out2_2 : real; Out3_1 : real;
	Out3_2 : real; Out4_1 : int; Out4_2 : int; Out5_1 : int; Out5_2 : int;
	Out6_1 : int; Out6_2 : int; Out7_1 : bool; Out7_2 : bool; Out8_1 : bool;
	Out8_2 : bool; Out9_1 : bool; Out9_2 : bool; Out10_1 : real; Out10_2 : real;
	Out11_1 : real; Out11_2 : real; Out12_1 : real; Out12_2 : real; Out13_1 : int;
	Out13_2 : int; Out14_1 : int; Out14_2 : int; Out15_1 : int; Out15_2 : int;
	Out16_1 : bool; Out16_2 : bool; Out17_1 : bool; Out17_2 : bool; Out18_1 : bool;
	Out18_2 : bool;);
var 
	S_1 : real; S_2 : real; S1_1 : real; S1_2 : real; S10_1 : real;
	S10_2 : real; S11_1 : int; S11_2 : int; S12_1 : int; S12_2 : int;
	S13_1 : int; S13_2 : int; S14_1 : bool; S14_2 : bool; S15_1 : bool;
	S15_2 : bool; S16_1 : bool; S16_2 : bool; S17_1 : real; S17_2 : real;
	S2_1 : real; S2_2 : real; S3_1 : real; S3_2 : real; S4_1 : int;
	S4_2 : int; S5_1 : int; S5_2 : int; S6_1 : int; S6_2 : int;
	S7_1 : bool; S7_2 : bool; S8_1 : bool; S8_2 : bool; S9_1 : bool;
	S9_2 : bool; U_1 : real; U_2 : real; U1_1 : real; U1_2 : real;
	U10_1 : real; U10_2 : real; U11_1 : int; U11_2 : int; U12_1 : int;
	U12_2 : int; U13_1 : int; U13_2 : int; U14_1 : bool; U14_2 : bool;
	U15_1 : bool; U15_2 : bool; U16_1 : bool; U16_2 : bool; U17_1 : real;
	U17_2 : real; U2_1 : real; U2_2 : real; U3_1 : real; U3_2 : real;
	U4_1 : int; U4_2 : int; U5_1 : int; U5_2 : int; U6_1 : int;
	U6_2 : int; U7_1 : bool; U7_2 : bool; U8_1 : bool; U8_2 : bool;
	U9_1 : bool; U9_2 : bool; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In4_1) and (In4_1 <= 127));
	assert ((-128 <= In4_2) and (In4_2 <= 127));
	assert ((-128 <= In5_1) and (In5_1 <= 127));
	assert ((-128 <= In5_2) and (In5_2 <= 127));
	assert ((-128 <= In6_1) and (In6_1 <= 127));
	assert ((-128 <= In6_2) and (In6_2 <= 127));
	assert ((-128 <= In13_1) and (In13_1 <= 127));
	assert ((-128 <= In13_2) and (In13_2 <= 127));
	assert ((-128 <= In14_1) and (In14_1 <= 127));
	assert ((-128 <= In14_2) and (In14_2 <= 127));
	assert ((-128 <= In15_1) and (In15_1 <= 127));
	assert ((-128 <= In15_2) and (In15_2 <= 127));
	S_1 = In1_1;
	S_2 = In1_2;
	S1_1 = In2_1;
	S1_2 = In2_2;
	S10_1 = In3_1;
	S10_2 = In3_2;
	S11_1 = In4_1;
	S11_2 = In4_2;
	S12_1 = In5_1;
	S12_2 = In5_2;
	S13_1 = In6_1;
	S13_2 = In6_2;
	S14_1 = In7_1;
	S14_2 = In7_2;
	S15_1 = In8_1;
	S15_2 = In8_2;
	S16_1 = In9_1;
	S16_2 = In9_2;
	S17_1 = In10_1;
	S17_2 = In10_2;
	S2_1 = In11_1;
	S2_2 = In11_2;
	S3_1 = In12_1;
	S3_2 = In12_2;
	S4_1 = In14_1;
	S4_2 = In14_2;
	S5_1 = In15_1;
	S5_2 = In15_2;
	S6_1 = In13_1;
	S6_2 = In13_2;
	S7_1 = In17_1;
	S7_2 = In17_2;
	S8_1 = In18_1;
	S8_2 = In18_2;
	S9_1 = In16_1;
	S9_2 = In16_2;
	U_1 = ((0.0) -> ((pre (S_1))));
	U_2 = ((0.0) -> ((pre (S_2))));
	U1_1 = ((0.0) -> ((pre (S1_1))));
	U1_2 = ((0.0) -> ((pre (S1_2))));
	U10_1 = ((1.0) -> ((pre (S10_1))));
	U10_2 = ((1.0) -> ((pre (S10_2))));
	U11_1 = ((0) -> ((pre (S11_1))));
	U11_2 = ((0) -> ((pre (S11_2))));
	U12_1 = ((0) -> ((pre (S12_1))));
	U12_2 = ((0) -> ((pre (S12_2))));
	U13_1 = ((1) -> ((pre (S13_1))));
	U13_2 = ((1) -> ((pre (S13_2))));
	U14_1 = ((false) -> ((pre (S14_1))));
	U14_2 = ((false) -> ((pre (S14_2))));
	U15_1 = ((false) -> ((pre (S15_1))));
	U15_2 = ((false) -> ((pre (S15_2))));
	U16_1 = ((true) -> ((pre (S16_1))));
	U16_2 = ((true) -> ((pre (S16_2))));
	U17_1 = ((0.0) -> ((pre (S17_1))));
	U17_2 = ((2.0) -> ((pre (S17_2))));
	U2_1 = ((0.0) -> ((pre (S2_1))));
	U2_2 = ((2.0) -> ((pre (S2_2))));
	U3_1 = ((1.0) -> ((pre (S3_1))));
	U3_2 = ((0.0) -> ((pre (S3_2))));
	U4_1 = ((0) -> ((pre (S4_1))));
	U4_2 = ((2) -> ((pre (S4_2))));
	U5_1 = ((1) -> ((pre (S5_1))));
	U5_2 = ((0) -> ((pre (S5_2))));
	U6_1 = ((0) -> ((pre (S6_1))));
	U6_2 = ((2) -> ((pre (S6_2))));
	U7_1 = ((false) -> ((pre (S7_1))));
	U7_2 = ((true) -> ((pre (S7_2))));
	U8_1 = ((true) -> ((pre (S8_1))));
	U8_2 = ((false) -> ((pre (S8_2))));
	U9_1 = ((false) -> ((pre (S9_1))));
	U9_2 = ((true) -> ((pre (S9_2))));
	Out1_1 = U_1;
	Out1_2 = U_2;
	Out2_1 = U1_1;
	Out2_2 = U1_2;
	Out3_1 = U10_1;
	Out3_2 = U10_2;
	Out4_1 = U11_1;
	Out4_2 = U11_2;
	Out5_1 = U12_1;
	Out5_2 = U12_2;
	Out6_1 = U13_1;
	Out6_2 = U13_2;
	Out7_1 = U14_1;
	Out7_2 = U14_2;
	Out8_1 = U15_1;
	Out8_2 = U15_2;
	Out9_1 = U16_1;
	Out9_2 = U16_2;
	Out10_1 = U17_1;
	Out10_2 = U17_2;
	Out11_1 = U2_1;
	Out11_2 = U2_2;
	Out12_1 = U3_1;
	Out12_2 = U3_2;
	Out13_1 = U6_1;
	Out13_2 = U6_2;
	Out14_1 = U4_1;
	Out14_2 = U4_2;
	Out15_1 = U5_1;
	Out15_2 = U5_2;
	Out16_1 = U9_1;
	Out16_2 = U9_2;
	Out17_1 = U7_1;
	Out17_2 = U7_2;
	Out18_1 = U8_1;
	Out18_2 = U8_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.10)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

