-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 14:56:07
node  abs_real(
	x : real;)
returns(
	y : real;);
let
	y = (if (x >= 0.0) then
		x
	    else (- (x)));
tel

(*
get a table element
*)
node  P_72_687_getTableElement(
	x : int;)
returns(
	y : real;);
var 
	ydat_1 : real; ydat_2 : real; ydat_3 : real; ydat_4 : real; ydat_5 : real;
let
	ydat_1 = 123.211882323218006;
	ydat_2 = 51.114263619002898;
	ydat_3 = 66.598985984509099;
	ydat_4 = 64.815333391597605;
	ydat_5 = 72.719730334717298;
	y = (if (x = 1) then
		ydat_1
	    else (if (x = 2) then
		ydat_2
	    else (if (x = 3) then
		ydat_3
	    else (if (x = 4) then
		ydat_4
	    else ydat_5))));
tel

(*
external node code for doing Interpolation Using PreLookup
*)
node  P_72_687_Interp_Using_Pre_ext_node(
	inline_index_solution : int;)
returns(
	Interp_Using_Pre_Out : real;);
let
	Interp_Using_Pre_Out = P_72_687_getTableElement(inline_index_solution);
tel

(*
external node code for doing PreLookup
*)
node  P_72_687_PreLookup_node(
	dim1_coord_in : real;)
returns(
	inline_index_solution : int;);
var 
	dimJump_1 : int; Breakpoints_dim1_1 : real; Breakpoints_dim1_2 : real; Breakpoints_dim1_3 : real; Breakpoints_dim1_4 : real;
	Breakpoints_dim1_5 : real; index_dim_1_1 : int; index_dim_1_2 : int; coords_dim_1_1 : real; coords_dim_1_2 : real;
	direct_solution_inline_index : int; solution_subscript_for_dim_1 : int;
let
	dimJump_1 = 1;
	Breakpoints_dim1_1 = 19.394312866067299;
	Breakpoints_dim1_2 = 37.328625125526699;
	Breakpoints_dim1_3 = 40.490015296321701;
	Breakpoints_dim1_4 = 93.340898281342305;
	Breakpoints_dim1_5 = 101.800838908326995;
	(index_dim_1_1, coords_dim_1_1, index_dim_1_2, coords_dim_1_2) = (if ((dim1_coord_in >= Breakpoints_dim1_5) or abs_real(dim1_coord_in - Breakpoints_dim1_5) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_4) or abs_real(dim1_coord_in - Breakpoints_dim1_4) <= 0.000000000000001000000000000000) then
		(4, Breakpoints_dim1_4, 5, Breakpoints_dim1_5)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_3) or abs_real(dim1_coord_in - Breakpoints_dim1_3) <= 0.000000000000001000000000000000) then
		(3, Breakpoints_dim1_3, 4, Breakpoints_dim1_4)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_2) or abs_real(dim1_coord_in - Breakpoints_dim1_2) <= 0.000000000000001000000000000000) then
		(2, Breakpoints_dim1_2, 3, Breakpoints_dim1_3)
	    else (if ((dim1_coord_in >= Breakpoints_dim1_1) or abs_real(dim1_coord_in - Breakpoints_dim1_1) <= 0.000000000000001000000000000000) then
		(1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2)
	    else (1, Breakpoints_dim1_1, 2, Breakpoints_dim1_2))))));
	solution_subscript_for_dim_1 = (if ((dim1_coord_in >= coords_dim_1_2) or abs_real(dim1_coord_in - coords_dim_1_2) <= 0.000017934312259459400250467820) then
		index_dim_1_2
	    else index_dim_1_1);
	direct_solution_inline_index = (solution_subscript_for_dim_1 * dimJump_1);
	inline_index_solution = direct_solution_inline_index;
tel

(*
external node code for doing Lookup_nD
*)
node  P_72_687_Lookup_wrapper_node(
	dim1_coord_in : real;)
returns(
	Interp_Using_Pre_Out : real;);
var 
	inline_index_solution : int;
let
	inline_index_solution = P_72_687_PreLookup_node(dim1_coord_in);
	Interp_Using_Pre_Out = P_72_687_Interp_Using_Pre_ext_node(inline_index_solution);
tel

(*
Original block name: lookup_nD_TestGen1_PP
*)
node  lookup_nD_TestGen1_PP(
	In1_1 : real;)
returns(
	Out1_1 : real;);
var 
	P_1 : real; __time_step : real; __nb_step : int;
let
	assert ((0.0 <= In1_1) and (In1_1 <= 127.0));
	P_1 = P_72_687_Lookup_wrapper_node(In1_1);
	Out1_1 = P_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

