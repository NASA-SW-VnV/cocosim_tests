-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 23-Oct-2020 00:39:50
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

(*
Original block name: CombinatorialLogic_TestGen2_PP
*)
node  CombinatorialLogic_TestGen2_PP(
	In1_1 : bool; In1_2 : bool;)
returns(
	Out1_1 : real; Out1_2 : real;);
var 
	P_1 : real; P_2 : real; P_1_rowIndex : int; __time_step : real; __nb_step : int;
let
	P_1_rowIndex = ((bool_to_int(In1_1) * 2) + (bool_to_int(In1_2) * 1) + 1);
	P_1 = (if (P_1_rowIndex = 1) then
		0.543192575521876
	    else (if (P_1_rowIndex = 2) then
		0.952421334883786
	    else (if (P_1_rowIndex = 3) then
		0.545870654926088
	    else 0.930001888483517)));
	P_2 = (if (P_1_rowIndex = 1) then
		0.695846362439036
	    else (if (P_1_rowIndex = 2) then
		0.059357711921258
	    else (if (P_1_rowIndex = 3) then
		0.140810682288917
	    else 0.559057194051671)));
	Out1_1 = P_1;
	Out1_2 = P_2;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

