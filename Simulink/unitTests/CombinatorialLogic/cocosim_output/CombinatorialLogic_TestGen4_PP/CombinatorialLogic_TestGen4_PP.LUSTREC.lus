-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:14:54
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

(*
Original block name: CombinatorialLogic_TestGen4_PP/reset/R
*)
node  R_11_100(
	In1_1 : bool; In1_2 : bool; In1_3 : bool; In1_4 : bool; __time_step : real;
	__nb_step : int;)
returns(
	Out1_1 : real;);
var 
	P_1 : real; P_1_rowIndex : int;
let
	P_1_rowIndex = ((bool_to_int(In1_1) * 8) + (bool_to_int(In1_2) * 4) + (bool_to_int(In1_3) * 2) + (bool_to_int(In1_4) * 1) + 1);
	P_1 = (if (P_1_rowIndex = 1) then
		0.425921001993938
	    else (if (P_1_rowIndex = 2) then
		0.747688815373207
	    else (if (P_1_rowIndex = 3) then
		0.743664792219808
	    else (if (P_1_rowIndex = 4) then
		0.834794338146780
	    else (if (P_1_rowIndex = 5) then
		0.703845037815539
	    else (if (P_1_rowIndex = 6) then
		0.603431275868441
	    else (if (P_1_rowIndex = 7) then
		0.434319098695933
	    else (if (P_1_rowIndex = 8) then
		0.137735935116350
	    else (if (P_1_rowIndex = 9) then
		0.690299870119745
	    else (if (P_1_rowIndex = 10) then
		0.602036754078748
	    else (if (P_1_rowIndex = 11) then
		0.851785416994308
	    else (if (P_1_rowIndex = 12) then
		0.270851275512656
	    else (if (P_1_rowIndex = 13) then
		0.964222367855326
	    else (if (P_1_rowIndex = 14) then
		0.151585308634602
	    else (if (P_1_rowIndex = 15) then
		0.052398097932524
	    else 0.697014119613637)))))))))))))));
	Out1_1 = P_1;
tel

(*
Original block name: CombinatorialLogic_TestGen4_PP/reset
*)
node  reset_8_059(
	R_cond_1 : bool; In1_1 : bool; In1_2 : bool; In1_3 : bool; In1_4 : bool;
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	ResetCond_of_R_11_100 : bool; R_1 : real;
let
	ResetCond_of_R_11_100 = ((false) -> ((R_cond_1 and (not ((pre (R_cond_1)))))));
	R_1 = (R_11_100(In1_1, In1_2, In1_3, In1_4, __time_step, __nb_step) every ResetCond_of_R_11_100);
	Out1_1 = R_1;
tel

(*
Original block name: CombinatorialLogic_TestGen4_PP
*)
node  CombinatorialLogic_TestGen4_PP(
	In1_1 : bool; In2_1 : bool; In2_2 : bool; In2_3 : bool; In2_4 : bool;)
returns(
	Out1_1 : real;);
var 
	reset_1 : real; __time_step : real; __nb_step : int;
let
	reset_1 = reset_8_059(In1_1, In2_1, In2_2, In2_3, In2_4, __time_step, __nb_step);
	Out1_1 = reset_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

