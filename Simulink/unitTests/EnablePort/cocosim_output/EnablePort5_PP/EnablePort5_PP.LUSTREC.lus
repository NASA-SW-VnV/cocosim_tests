-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 13:15:37
(*
Original block name: EnablePort5_PP/Enabled_Counter/Subsystem
*)
node  Subsystem_73_318_condExecSS(
	In1_1 : real; Enable_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	pre_Out1_1 : real; pre_Out2_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out2_1 = (if (__nb_step > 0) then
		(pre (Out2_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out2_1) = (merge _isEnabled_clock 
		(true -> Subsystem_73_318((In1_1 when _isEnabled_clock), (Enable_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out2_1) when false(_isEnabled_clock)));
tel

(*
Original block name: EnablePort5_PP/Enabled_Counter/Subsystem
*)
node  Subsystem_73_318(
	In1_1 : real; Enable_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real;);
var 
	Add_1 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
	Out2_1 = Enable_1;
tel

(*
Original block name: EnablePort5_PP/Enabled_Counter
*)
node  Enabled_Counter_15_714_condExecSS(
	In1_1 : real; _isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real; Out3_1 : real;);
var 
	pre_Out1_1 : real; pre_Out2_1 : real; pre_Out3_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	pre_Out2_1 = (if (__nb_step > 0) then
		(pre (Out2_1))
	    else 0.0);
	pre_Out3_1 = (if (__nb_step > 0) then
		(pre (Out3_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	(Out1_1, Out2_1, Out3_1) = (merge _isEnabled_clock 
		(true -> Enabled_Counter_15_714((In1_1 when _isEnabled_clock), (__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1, pre_Out2_1, pre_Out3_1) when false(_isEnabled_clock)));
tel

(*
Original block name: EnablePort5_PP/Enabled_Counter
*)
node  Enabled_Counter_15_714(
	In1_1 : real; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real; Out2_1 : real; Out3_1 : real;);
var 
	Add_1 : real; ExecutionCond_of_Subsystem_73_318 : bool; Subsystem_1 : real; Subsystem_2 : real; UnitDelay_1 : real;
let
	Add_1 = 0.0 + In1_1 + UnitDelay_1;
	ExecutionCond_of_Subsystem_73_318 = (In1_1 > 0.0);
	(Subsystem_1, Subsystem_2) = Subsystem_73_318_condExecSS(In1_1, In1_1, ExecutionCond_of_Subsystem_73_318, __time_step, __nb_step);
	UnitDelay_1 = ((0.0) -> ((pre (Add_1))));
	Out1_1 = Add_1;
	Out2_1 = Subsystem_1;
	Out3_1 = Subsystem_2;
tel

(*
Original block name: EnablePort5_PP
*)
node  EnablePort5_PP(
	In1_1 : real; Enable_1 : real;)
returns(
	Out1_1 : real; Out2_1 : real; Out3_1 : real;);
var 
	ExecutionCond_of_Enabled_Counter_15_714 : bool; Enabled_Counter_1 : real; Enabled_Counter_2 : real; Enabled_Counter_3 : real; __time_step : real;
	__nb_step : int;
let
	ExecutionCond_of_Enabled_Counter_15_714 = (Enable_1 > 0.0);
	(Enabled_Counter_1, Enabled_Counter_2, Enabled_Counter_3) = Enabled_Counter_15_714_condExecSS(In1_1, ExecutionCond_of_Enabled_Counter_15_714, __time_step, __nb_step);
	Out1_1 = Enabled_Counter_1;
	Out2_1 = Enabled_Counter_2;
	Out3_1 = Enabled_Counter_3;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

