-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 20-Nov-2020 16:47:43
#open <simulink_math_fcn>
node  abs_int(
	x : int;)
returns(
	y : int;);
let
	y = (if (x >= 0) then
		x
	    else (- (x)));
tel

node  mod_int_int(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if ((y = 0) or (x = 0)) then
		x
	    else ((x mod y) - (if (((x mod y) <> 0) and (y <= 0)) then abs_int(y) else 0)));
tel

node  rem_int_int(
	x : int; y : int;)
returns(
	z : int;);
let
	z = (if ((y = 0) or (x = 0)) then
		0
	    else ((x mod y) - (if (((x mod y) <> 0) and (x <= 0)) then abs_int(y) else 0)));
tel


(*
Original block name: Math2_PP/Math_newline_Function1
*)
node  Math_newline_Function1_133_894(
	In3_1 : int; In4_1 : int;)
returns(
	Math_newline_Function1_1 : int;);
let
	Math_newline_Function1_1 = mod_int_int(In3_1, In4_1);
tel

(*
Original block name: Math2_PP/Math_newline_Function10
*)
node  Math_newline_Function10_156_831(
	In1_1 : real; In2_1 : real;)
returns(
	Math_newline_Function10_1 : real;);
let
	Math_newline_Function10_1 = mod_real(In1_1, In2_1);
tel

(*
Original block name: Math2_PP/Math_newline_Function2
*)
node  Math_newline_Function2_165_722(
	In3_1 : int; In4_1 : int;)
returns(
	Math_newline_Function2_1 : int;);
let
	Math_newline_Function2_1 = rem_int_int(In3_1, In4_1);
tel

(*
Original block name: Math2_PP/Math_newline_Function9
*)
node  Math_newline_Function9_177_876(
	In1_1 : real; In2_1 : real;)
returns(
	Math_newline_Function9_1 : real;);
let
	Math_newline_Function9_1 = rem_real(In1_1, In2_1);
tel

(*
Original block name: Math2_PP
*)
node  Math2_PP(
	In1_1 : real; In2_1 : real; In3_1 : int; In4_1 : int;)
returns(
	Out11_1 : real; Out12_1 : real; Out1_1 : int; Out2_1 : int;);
var 
	Math_newline_Function1_1 : int; Math_newline_Function10_1 : real; Math_newline_Function2_1 : int; Math_newline_Function9_1 : real; __time_step : real;
	__nb_step : int;
let
	assert ((-2147483648 <= In3_1) and (In3_1 <= 2147483647));
	assert ((-2147483648 <= In4_1) and (In4_1 <= 2147483647));
	Math_newline_Function1_1 = Math_newline_Function1_133_894(In3_1, In4_1);
	Math_newline_Function10_1 = Math_newline_Function10_156_831(In1_1, In2_1);
	Math_newline_Function2_1 = Math_newline_Function2_165_722(In3_1, In4_1);
	Math_newline_Function9_1 = Math_newline_Function9_177_876(In1_1, In2_1);
	Out11_1 = Math_newline_Function9_1;
	Out12_1 = Math_newline_Function10_1;
	Out1_1 = Math_newline_Function2_1;
	Out2_1 = Math_newline_Function1_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

