-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 12-Aug-2021 09:27:58
node  bool_to_int(
	x : bool;)
returns(
	y : int;);
let
	y = (if x then
		1
	    else 0);
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant
*)
node  Compare_newline_ToConstant_17_002(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool;);
var 
	Compare_1 : bool; Constant_1 : real;
let
	Compare_1 = (u_1 = Constant_1);
	Constant_1 = 3.0;
	y_1 = Compare_1;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant1
*)
node  Compare_newline_ToConstant1_18_002(
	u_1 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool;);
var 
	Compare_1 : bool; Constant_1 : int;
let
	assert ((-128 <= u_1) and (u_1 <= 127));
	Compare_1 = (u_1 <> Constant_1);
	Constant_1 = 3;
	y_1 = Compare_1;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant10
*)
node  Compare_newline_ToConstant10_19_002(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool; y_4 : bool; y_5 : bool;
	y_6 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Compare_4 : bool; Compare_5 : bool;
	Compare_6 : bool; Constant_1 : real; Constant_2 : real; Constant_3 : real; Constant_4 : real;
	Constant_5 : real; Constant_6 : real;
let
	Compare_1 = (u_1 >= Constant_1);
	Compare_2 = (u_1 >= Constant_2);
	Compare_3 = (u_1 >= Constant_3);
	Compare_4 = (u_1 >= Constant_4);
	Compare_5 = (u_1 >= Constant_5);
	Compare_6 = (u_1 >= Constant_6);
	Constant_1 = 2.0;
	Constant_2 = 2.0;
	Constant_3 = 4.0;
	Constant_4 = 4.0;
	Constant_5 = 6.0;
	Constant_6 = 6.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
	y_4 = Compare_4;
	y_5 = Compare_5;
	y_6 = Compare_6;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant11
*)
node  Compare_newline_ToConstant11_20_002(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Constant_1 : real; Constant_2 : real;
	Constant_3 : real;
let
	Compare_1 = (u_1 < Constant_1);
	Compare_2 = (u_2 < Constant_2);
	Compare_3 = (u_3 < Constant_3);
	Constant_1 = 2.0;
	Constant_2 = 4.0;
	Constant_3 = 6.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant12
*)
node  Compare_newline_ToConstant12_21_002(
	u_1 : real; u_2 : real; u_3 : real; u_4 : real; u_5 : real;
	u_6 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool; y_4 : bool; y_5 : bool;
	y_6 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Compare_4 : bool; Compare_5 : bool;
	Compare_6 : bool; Constant_1 : real; Constant_2 : real; Constant_3 : real; Constant_4 : real;
	Constant_5 : real; Constant_6 : real;
let
	Compare_1 = (u_1 <= Constant_1);
	Compare_2 = (u_2 <= Constant_2);
	Compare_3 = (u_3 <= Constant_3);
	Compare_4 = (u_4 <= Constant_4);
	Compare_5 = (u_5 <= Constant_5);
	Compare_6 = (u_6 <= Constant_6);
	Constant_1 = 2.0;
	Constant_2 = 4.0;
	Constant_3 = 4.0;
	Constant_4 = 6.0;
	Constant_5 = 6.0;
	Constant_6 = 8.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
	y_4 = Compare_4;
	y_5 = Compare_5;
	y_6 = Compare_6;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant2
*)
node  Compare_newline_ToConstant2_22_002(
	u_1 : bool; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool;);
var 
	Compare_1 : bool; Constant_1 : bool;
let
	Compare_1 = (bool_to_int(u_1) < bool_to_int(Constant_1));
	Constant_1 = true;
	y_1 = Compare_1;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant3
*)
node  Compare_newline_ToConstant3_23_002(
	u_1 : real; u_2 : real; u_3 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Constant_1 : real;
let
	Compare_1 = (u_1 > Constant_1);
	Compare_2 = (u_2 > Constant_1);
	Compare_3 = (u_3 > Constant_1);
	Constant_1 = 3.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant4
*)
node  Compare_newline_ToConstant4_24_001(
	u_1 : int; u_2 : int; u_3 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Constant_1 : int;
let
	assert ((-128 <= u_1) and (u_1 <= 127));
	assert ((-128 <= u_2) and (u_2 <= 127));
	assert ((-128 <= u_3) and (u_3 <= 127));
	Compare_1 = (u_1 = Constant_1);
	Compare_2 = (u_2 = Constant_1);
	Compare_3 = (u_3 = Constant_1);
	Constant_1 = 3;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant5
*)
node  Compare_newline_ToConstant5_25_001(
	u_1 : bool; u_2 : bool; u_3 : bool; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Constant_1 : bool;
let
	Compare_1 = (u_1 <> Constant_1);
	Compare_2 = (u_2 <> Constant_1);
	Compare_3 = (u_3 <> Constant_1);
	Constant_1 = true;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant6
*)
node  Compare_newline_ToConstant6_26_001(
	u_1 : real; u_2 : real; u_3 : real; u_4 : real; u_5 : real;
	u_6 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool; y_4 : bool; y_5 : bool;
	y_6 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Compare_4 : bool; Compare_5 : bool;
	Compare_6 : bool; Constant_1 : real;
let
	Compare_1 = (u_1 <= Constant_1);
	Compare_2 = (u_2 <= Constant_1);
	Compare_3 = (u_3 <= Constant_1);
	Compare_4 = (u_4 <= Constant_1);
	Compare_5 = (u_5 <= Constant_1);
	Compare_6 = (u_6 <= Constant_1);
	Constant_1 = 3.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
	y_4 = Compare_4;
	y_5 = Compare_5;
	y_6 = Compare_6;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant7
*)
node  Compare_newline_ToConstant7_27_001(
	u_1 : int; u_2 : int; u_3 : int; u_4 : int; u_5 : int;
	u_6 : int; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool; y_4 : bool; y_5 : bool;
	y_6 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Compare_4 : bool; Compare_5 : bool;
	Compare_6 : bool; Constant_1 : int;
let
	assert ((-128 <= u_1) and (u_1 <= 127));
	assert ((-128 <= u_2) and (u_2 <= 127));
	assert ((-128 <= u_3) and (u_3 <= 127));
	assert ((-128 <= u_4) and (u_4 <= 127));
	assert ((-128 <= u_5) and (u_5 <= 127));
	assert ((-128 <= u_6) and (u_6 <= 127));
	Compare_1 = (u_1 >= Constant_1);
	Compare_2 = (u_2 >= Constant_1);
	Compare_3 = (u_3 >= Constant_1);
	Compare_4 = (u_4 >= Constant_1);
	Compare_5 = (u_5 >= Constant_1);
	Compare_6 = (u_6 >= Constant_1);
	Constant_1 = 3;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
	y_4 = Compare_4;
	y_5 = Compare_5;
	y_6 = Compare_6;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant8
*)
node  Compare_newline_ToConstant8_28_001(
	u_1 : bool; u_2 : bool; u_3 : bool; u_4 : bool; u_5 : bool;
	u_6 : bool; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool; y_4 : bool; y_5 : bool;
	y_6 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Compare_4 : bool; Compare_5 : bool;
	Compare_6 : bool; Constant_1 : bool;
let
	Compare_1 = (bool_to_int(u_1) > bool_to_int(Constant_1));
	Compare_2 = (bool_to_int(u_2) > bool_to_int(Constant_1));
	Compare_3 = (bool_to_int(u_3) > bool_to_int(Constant_1));
	Compare_4 = (bool_to_int(u_4) > bool_to_int(Constant_1));
	Compare_5 = (bool_to_int(u_5) > bool_to_int(Constant_1));
	Compare_6 = (bool_to_int(u_6) > bool_to_int(Constant_1));
	Constant_1 = true;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
	y_4 = Compare_4;
	y_5 = Compare_5;
	y_6 = Compare_6;
tel

(*
Original block name: CompareTo2_PP/Compare
To Constant9
*)
node  Compare_newline_ToConstant9_29_001(
	u_1 : real; __time_step : real; __nb_step : int;)
returns(
	y_1 : bool; y_2 : bool; y_3 : bool;);
var 
	Compare_1 : bool; Compare_2 : bool; Compare_3 : bool; Constant_1 : real; Constant_2 : real;
	Constant_3 : real;
let
	Compare_1 = (u_1 <= Constant_1);
	Compare_2 = (u_1 <= Constant_2);
	Compare_3 = (u_1 <= Constant_3);
	Constant_1 = 2.0;
	Constant_2 = 4.0;
	Constant_3 = 6.0;
	y_1 = Compare_1;
	y_2 = Compare_2;
	y_3 = Compare_3;
tel

(*
Original block name: CompareTo2_PP
*)
node  CompareTo2_PP(
	In2_1 : real; In3_1 : int; In4_1 : bool; In5_1 : real; In5_2 : real;
	In5_3 : real; In6_1 : int; In6_2 : int; In6_3 : int; In7_1 : bool;
	In7_2 : bool; In7_3 : bool; In8_1 : real; In8_2 : real; In8_3 : real;
	In8_4 : real; In8_5 : real; In8_6 : real; In9_1 : int; In9_2 : int;
	In9_3 : int; In9_4 : int; In9_5 : int; In9_6 : int; In10_1 : bool;
	In10_2 : bool; In10_3 : bool; In10_4 : bool; In10_5 : bool; In10_6 : bool;
	In12_1 : real; In12_2 : real; In12_3 : real; In13_1 : real; In13_2 : real;
	In13_3 : real; In13_4 : real; In13_5 : real; In13_6 : real; In1_1 : real;
	In11_1 : real;)
returns(
	Out2_1 : bool; Out3_1 : bool; Out4_1 : bool; Out5_1 : bool; Out5_2 : bool;
	Out5_3 : bool; Out6_1 : bool; Out6_2 : bool; Out6_3 : bool; Out7_1 : bool;
	Out7_2 : bool; Out7_3 : bool; Out8_1 : bool; Out8_2 : bool; Out8_3 : bool;
	Out8_4 : bool; Out8_5 : bool; Out8_6 : bool; Out9_1 : bool; Out9_2 : bool;
	Out9_3 : bool; Out9_4 : bool; Out9_5 : bool; Out9_6 : bool; Out10_1 : bool;
	Out10_2 : bool; Out10_3 : bool; Out10_4 : bool; Out10_5 : bool; Out10_6 : bool;
	Out12_1 : bool; Out12_2 : bool; Out12_3 : bool; Out13_1 : bool; Out13_2 : bool;
	Out13_3 : bool; Out13_4 : bool; Out13_5 : bool; Out13_6 : bool; Out1_1 : bool;
	Out1_2 : bool; Out1_3 : bool; Out11_1 : bool; Out11_2 : bool; Out11_3 : bool;
	Out11_4 : bool; Out11_5 : bool; Out11_6 : bool;);
var 
	Compare_newline_ToConstant_1 : bool; Compare_newline_ToConstant1_1 : bool; Compare_newline_ToConstant10_1 : bool; Compare_newline_ToConstant10_2 : bool; Compare_newline_ToConstant10_3 : bool;
	Compare_newline_ToConstant10_4 : bool; Compare_newline_ToConstant10_5 : bool; Compare_newline_ToConstant10_6 : bool; Compare_newline_ToConstant11_1 : bool; Compare_newline_ToConstant11_2 : bool;
	Compare_newline_ToConstant11_3 : bool; Compare_newline_ToConstant12_1 : bool; Compare_newline_ToConstant12_2 : bool; Compare_newline_ToConstant12_3 : bool; Compare_newline_ToConstant12_4 : bool;
	Compare_newline_ToConstant12_5 : bool; Compare_newline_ToConstant12_6 : bool; Compare_newline_ToConstant2_1 : bool; Compare_newline_ToConstant3_1 : bool; Compare_newline_ToConstant3_2 : bool;
	Compare_newline_ToConstant3_3 : bool; Compare_newline_ToConstant4_1 : bool; Compare_newline_ToConstant4_2 : bool; Compare_newline_ToConstant4_3 : bool; Compare_newline_ToConstant5_1 : bool;
	Compare_newline_ToConstant5_2 : bool; Compare_newline_ToConstant5_3 : bool; Compare_newline_ToConstant6_1 : bool; Compare_newline_ToConstant6_2 : bool; Compare_newline_ToConstant6_3 : bool;
	Compare_newline_ToConstant6_4 : bool; Compare_newline_ToConstant6_5 : bool; Compare_newline_ToConstant6_6 : bool; Compare_newline_ToConstant7_1 : bool; Compare_newline_ToConstant7_2 : bool;
	Compare_newline_ToConstant7_3 : bool; Compare_newline_ToConstant7_4 : bool; Compare_newline_ToConstant7_5 : bool; Compare_newline_ToConstant7_6 : bool; Compare_newline_ToConstant8_1 : bool;
	Compare_newline_ToConstant8_2 : bool; Compare_newline_ToConstant8_3 : bool; Compare_newline_ToConstant8_4 : bool; Compare_newline_ToConstant8_5 : bool; Compare_newline_ToConstant8_6 : bool;
	Compare_newline_ToConstant9_1 : bool; Compare_newline_ToConstant9_2 : bool; Compare_newline_ToConstant9_3 : bool; __time_step : real; __nb_step : int;
let
	assert ((-128 <= In3_1) and (In3_1 <= 127));
	assert ((-128 <= In6_1) and (In6_1 <= 127));
	assert ((-128 <= In6_2) and (In6_2 <= 127));
	assert ((-128 <= In6_3) and (In6_3 <= 127));
	assert ((-128 <= In9_1) and (In9_1 <= 127));
	assert ((-128 <= In9_2) and (In9_2 <= 127));
	assert ((-128 <= In9_3) and (In9_3 <= 127));
	assert ((-128 <= In9_4) and (In9_4 <= 127));
	assert ((-128 <= In9_5) and (In9_5 <= 127));
	assert ((-128 <= In9_6) and (In9_6 <= 127));
	Compare_newline_ToConstant_1 = Compare_newline_ToConstant_17_002(In2_1, __time_step, __nb_step);
	Compare_newline_ToConstant1_1 = Compare_newline_ToConstant1_18_002(In3_1, __time_step, __nb_step);
	(Compare_newline_ToConstant10_1, Compare_newline_ToConstant10_2, Compare_newline_ToConstant10_3, Compare_newline_ToConstant10_4, Compare_newline_ToConstant10_5, Compare_newline_ToConstant10_6) = Compare_newline_ToConstant10_19_002(In11_1, __time_step, __nb_step);
	(Compare_newline_ToConstant11_1, Compare_newline_ToConstant11_2, Compare_newline_ToConstant11_3) = Compare_newline_ToConstant11_20_002(In12_1, In12_2, In12_3, __time_step, __nb_step);
	(Compare_newline_ToConstant12_1, Compare_newline_ToConstant12_2, Compare_newline_ToConstant12_3, Compare_newline_ToConstant12_4, Compare_newline_ToConstant12_5, Compare_newline_ToConstant12_6) = Compare_newline_ToConstant12_21_002(In13_1, In13_2, In13_3, In13_4, In13_5, In13_6, __time_step, __nb_step);
	Compare_newline_ToConstant2_1 = Compare_newline_ToConstant2_22_002(In4_1, __time_step, __nb_step);
	(Compare_newline_ToConstant3_1, Compare_newline_ToConstant3_2, Compare_newline_ToConstant3_3) = Compare_newline_ToConstant3_23_002(In5_1, In5_2, In5_3, __time_step, __nb_step);
	(Compare_newline_ToConstant4_1, Compare_newline_ToConstant4_2, Compare_newline_ToConstant4_3) = Compare_newline_ToConstant4_24_001(In6_1, In6_2, In6_3, __time_step, __nb_step);
	(Compare_newline_ToConstant5_1, Compare_newline_ToConstant5_2, Compare_newline_ToConstant5_3) = Compare_newline_ToConstant5_25_001(In7_1, In7_2, In7_3, __time_step, __nb_step);
	(Compare_newline_ToConstant6_1, Compare_newline_ToConstant6_2, Compare_newline_ToConstant6_3, Compare_newline_ToConstant6_4, Compare_newline_ToConstant6_5, Compare_newline_ToConstant6_6) = Compare_newline_ToConstant6_26_001(In8_1, In8_2, In8_3, In8_4, In8_5, In8_6, __time_step, __nb_step);
	(Compare_newline_ToConstant7_1, Compare_newline_ToConstant7_2, Compare_newline_ToConstant7_3, Compare_newline_ToConstant7_4, Compare_newline_ToConstant7_5, Compare_newline_ToConstant7_6) = Compare_newline_ToConstant7_27_001(In9_1, In9_2, In9_3, In9_4, In9_5, In9_6, __time_step, __nb_step);
	(Compare_newline_ToConstant8_1, Compare_newline_ToConstant8_2, Compare_newline_ToConstant8_3, Compare_newline_ToConstant8_4, Compare_newline_ToConstant8_5, Compare_newline_ToConstant8_6) = Compare_newline_ToConstant8_28_001(In10_1, In10_2, In10_3, In10_4, In10_5, In10_6, __time_step, __nb_step);
	(Compare_newline_ToConstant9_1, Compare_newline_ToConstant9_2, Compare_newline_ToConstant9_3) = Compare_newline_ToConstant9_29_001(In1_1, __time_step, __nb_step);
	Out2_1 = Compare_newline_ToConstant_1;
	Out3_1 = Compare_newline_ToConstant1_1;
	Out4_1 = Compare_newline_ToConstant2_1;
	Out5_1 = Compare_newline_ToConstant3_1;
	Out5_2 = Compare_newline_ToConstant3_2;
	Out5_3 = Compare_newline_ToConstant3_3;
	Out6_1 = Compare_newline_ToConstant4_1;
	Out6_2 = Compare_newline_ToConstant4_2;
	Out6_3 = Compare_newline_ToConstant4_3;
	Out7_1 = Compare_newline_ToConstant5_1;
	Out7_2 = Compare_newline_ToConstant5_2;
	Out7_3 = Compare_newline_ToConstant5_3;
	Out8_1 = Compare_newline_ToConstant6_1;
	Out8_2 = Compare_newline_ToConstant6_2;
	Out8_3 = Compare_newline_ToConstant6_3;
	Out8_4 = Compare_newline_ToConstant6_4;
	Out8_5 = Compare_newline_ToConstant6_5;
	Out8_6 = Compare_newline_ToConstant6_6;
	Out9_1 = Compare_newline_ToConstant7_1;
	Out9_2 = Compare_newline_ToConstant7_2;
	Out9_3 = Compare_newline_ToConstant7_3;
	Out9_4 = Compare_newline_ToConstant7_4;
	Out9_5 = Compare_newline_ToConstant7_5;
	Out9_6 = Compare_newline_ToConstant7_6;
	Out10_1 = Compare_newline_ToConstant8_1;
	Out10_2 = Compare_newline_ToConstant8_2;
	Out10_3 = Compare_newline_ToConstant8_3;
	Out10_4 = Compare_newline_ToConstant8_4;
	Out10_5 = Compare_newline_ToConstant8_5;
	Out10_6 = Compare_newline_ToConstant8_6;
	Out12_1 = Compare_newline_ToConstant11_1;
	Out12_2 = Compare_newline_ToConstant11_2;
	Out12_3 = Compare_newline_ToConstant11_3;
	Out13_1 = Compare_newline_ToConstant12_1;
	Out13_2 = Compare_newline_ToConstant12_2;
	Out13_3 = Compare_newline_ToConstant12_3;
	Out13_4 = Compare_newline_ToConstant12_4;
	Out13_5 = Compare_newline_ToConstant12_5;
	Out13_6 = Compare_newline_ToConstant12_6;
	Out1_1 = Compare_newline_ToConstant9_1;
	Out1_2 = Compare_newline_ToConstant9_2;
	Out1_3 = Compare_newline_ToConstant9_3;
	Out11_1 = Compare_newline_ToConstant10_1;
	Out11_2 = Compare_newline_ToConstant10_2;
	Out11_3 = Compare_newline_ToConstant10_3;
	Out11_4 = Compare_newline_ToConstant10_4;
	Out11_5 = Compare_newline_ToConstant10_5;
	Out11_6 = Compare_newline_ToConstant10_6;
	__time_step = ((0.0) -> (((pre (__time_step)) + 1.0)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

