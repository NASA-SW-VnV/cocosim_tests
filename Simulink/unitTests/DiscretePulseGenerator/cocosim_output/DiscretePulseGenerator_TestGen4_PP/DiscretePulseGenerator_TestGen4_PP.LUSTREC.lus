-- This file has been generated by CoCoSim2.

-- Compiler: Lustre compiler 2 (nasa_toLustre.ToLustre.m)
-- Time: 01-Nov-2020 19:47:34
(*
Original block name: DiscretePulseGenerator_TestGen4_PP/trigger/T
*)
node  T_45_996_condExecSS(
	_isEnabled : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	pre_Out1_1 : real; _isEnabled_clock : bool clock;
let
	pre_Out1_1 = (if (__nb_step > 0) then
		(pre (Out1_1))
	    else 0.0);
	_isEnabled_clock = _isEnabled;
	Out1_1 = (merge _isEnabled_clock 
		(true -> T_45_996((__time_step when _isEnabled_clock), (__nb_step when _isEnabled_clock))) 
		(false -> (pre_Out1_1) when false(_isEnabled_clock)));
tel

(*
Original block name: DiscretePulseGenerator_TestGen4_PP/trigger/T
*)
node  T_45_996(
	__time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	P_1 : real;
let
	P_1 = (if ((__nb_step mod 5) < 3) then
		0.50
	    else 0.0);
	Out1_1 = P_1;
tel

(*
Original block name: DiscretePulseGenerator_TestGen4_PP/trigger
*)
node  trigger_12_170(
	T_cond_1 : bool; __time_step : real; __nb_step : int;)
returns(
	Out1_1 : real;);
var 
	ExecutionCond_of_T_45_996 : bool; T_1 : real;
let
	ExecutionCond_of_T_45_996 = ((false) -> ((T_cond_1 and (not ((pre (T_cond_1)))))));
	T_1 = T_45_996_condExecSS(ExecutionCond_of_T_45_996, __time_step, __nb_step);
	Out1_1 = T_1;
tel

(*
Original block name: DiscretePulseGenerator_TestGen4_PP
*)
node  DiscretePulseGenerator_TestGen4_PP(
	In1_1 : bool;)
returns(
	Out1_1 : real;);
var 
	trigger_1 : real; __time_step : real; __nb_step : int;
let
	trigger_1 = trigger_12_170(In1_1, __time_step, __nb_step);
	Out1_1 = trigger_1;
	__time_step = ((0.0) -> (((pre (__time_step)) + 0.20)));
	__nb_step = ((0) -> (((pre (__nb_step)) + 1)));
tel

